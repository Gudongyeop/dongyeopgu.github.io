[
{
	"uri": "https://dongyeopgu.github.io/cont_2/baekjoon.html",
	"title": "백준 문제풀이",
	"tags": [],
	"description": "",
	"content": "BAEKJOON 의 알고리즘 문제  BAEKJOON 답  "
},
{
	"uri": "https://dongyeopgu.github.io/basics.html",
	"title": "About",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/cont_2.html",
	"title": "Algorithm 문제풀이",
	"tags": [],
	"description": "",
	"content": "여러가지 Algorithm 풀이 Python으로 푼 알고리즘 답 모음  SWEA D3 SWEA D4 백준  "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d3.html",
	"title": "D3 문제풀이",
	"tags": [],
	"description": "",
	"content": "SW Expert Academy의 Python D3 문제  D3 답  "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d4.html",
	"title": "D4 문제풀이",
	"tags": [],
	"description": "",
	"content": "SW Expert Academy의 Python D4 문제  D4 답 모의 테스트 답  "
},
{
	"uri": "https://dongyeopgu.github.io/cont.html",
	"title": "Django 학습",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d4/swea_%EB%AA%A8%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
	"title": "SWEA - Python - 모의 테스트",
	"tags": [],
	"description": "",
	"content": "1949. 등산로 조성 dt = [(1,0), (0,1), (-1,0), (0,-1)]\rdef sol(x,y,b,cnt=1):\rglobal max_r\rif max_r \u0026lt; cnt:\rmax_r = cnt\rvisit[x][y] = 1\rfor d in dt:\rdx, dy = x + d[0], y + d[1]\rif not (0 \u0026lt;= dx \u0026lt; n and 0 \u0026lt;= dy \u0026lt; n) or visit[dx][dy] == 1:\rcontinue\rif Map[x][y] \u0026gt; Map[dx][dy]:\rsol(dx,dy,b,cnt+1)\relif b \u0026gt; 0 and Map[x][y] \u0026gt; Map[dx][dy] - k:\rtemp = Map[dx][dy]\rMap[dx][dy] = Map[x][y] - 1\rsol(dx,dy,0,cnt+1)\rMap[dx][dy] = temp\rvisit[x][y] = 0\rfor t in range(int(input())):\rn, k = map(int, input().split())\rMap = [list(map(int, input().split()))for _ in range(n)]\rvisit = [[0 for _ in range(n)]for _ in range(n)]\rtop_height = 0\rtop_idx = []\rfor i in range(n):\rif top_height \u0026lt; max(Map[i]):\rtop_height = max(Map[i])\rfor i in range(n):\rfor j in range(n):\rif Map[i][j] == top_height:\rtop_idx.append((i,j))\rmax_r = 0\rfor top in top_idx:\rsol(top[0],top[1],1)\rprint(f\u0026#34;#{t+1} {max_r}\u0026#34;)\r1953. 탈주범 검거 dx = [0,0,-1,1]\rdy = [-1,1,0,0]\rtunnel_type = {\r1:[[1,3,4,5],[1,3,6,7],[1,2,5,6],[1,2,4,7]],\r2:[[],[],[1,2,5,6],[1,2,4,7]],\r3:[[1,3,4,5],[1,3,6,7],[],[]],\r4:[[],[1,3,6,7],[1,2,5,6],[]],\r5:[[],[1,3,6,7],[],[1,2,4,7]],\r6:[[1,3,4,5],[],[],[1,2,4,7]],\r7:[[1,3,4,5],[],[1,2,5,6],[]]\r}\rfor t in range(int(input())):\rn, m, r, c, l = map(int, input().split())\rtunnel = [list(map(int, input().split()))for _ in range(n)]\rcnt = 1\rstart = [(r,c)]\rtime = 1\rwhile True:\rif time == l:\rbreak\rfor i in range(len(start)):\ra = start.pop(0)\rfor j in range(4):\rif tunnel_type[tunnel[a[0]][a[1]]][j]:\rif 0 \u0026lt;= a[0]+dx[j] \u0026lt; n and 0 \u0026lt;= a[1]+dy[j] \u0026lt; m and tunnel[a[0]+dx[j]][a[1]+dy[j]] != 0:\rif tunnel[a[0]+dx[j]][a[1]+dy[j]] in tunnel_type[tunnel[a[0]][a[1]]][j]:\rif (a[0]+dx[j],a[1]+dy[j]) not in start:\rstart.append((a[0]+dx[j],a[1]+dy[j]))\rcnt += 1\rtunnel[a[0]][a[1]] = 0\rtime += 1\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r4008. 숫자 만들기 def cal(i, numbs):\rglobal max_value, min_value\rif i == n:\rmax_value = max(max_value, numbs)\rmin_value = min(min_value, numbs)\relse:\rif operator[0] != 0:\roperator[0] -= 1\rcal(i+1, numbs + numbers[i])\roperator[0] += 1\rif operator[1] != 0:\roperator[1] -= 1\rcal(i+1, numbs - numbers[i])\roperator[1] += 1\rif operator[2] != 0:\roperator[2] -= 1\rcal(i+1, numbs * numbers[i])\roperator[2] += 1\rif operator[3] != 0:\roperator[3] -= 1\rif numbs \u0026lt; 0 and numbs%numbers[i]:\rcal(i+1, numbs//numbers[i]+1)\relse:\rcal(i+1, numbs//numbers[i])\roperator[3] += 1\rfor t in range(int(input())):\rn = int(input())\roperator = list(map(int, input().split()))\rnumbers = list(map(int, input().split()))\rmin_value = 100000000\rmax_value = -100000000\rcal(1,numbers[0])\rprint(f\u0026#34;#{t+1} {max_value - min_value}\u0026#34;)\r5650. 핀볼 게임 # 방향 상 좌 하 우\r dx = (-1, 0, 1, 0)\rdy = (0, -1, 0, 1)\r# 1번 블록 : 상 \u0026gt; 하, 좌 \u0026gt; 상, 하 \u0026gt; 우, 우 \u0026gt; 좌\r block = ((2, -1, 1, -2), (3, 1, -2, -2), (1, 2, -2, -1), (2, 2, -1, -3), (2, 2, -2, -2))\rdef sol(x,y,d):\rglobal result, n\rcnt = 0\rnx = x\rny = y\rwhile True:\rnx += dx[d]\rny += dy[d]\rif not (n \u0026gt; nx \u0026gt;= 0 and n \u0026gt; ny \u0026gt;= 0): # 벽 만났을 때 튕김(방향은 반대로)\r d = (d + 2) % 4\rcnt += 1\relse: if game_board[nx][ny] == -1 or (nx == x and ny == y):\rresult = max(cnt, result)\rreturn\relif game_board[nx][ny] == 0:\rcontinue\relif 0\u0026lt;game_board[nx][ny] \u0026lt; 6: # 블록 만났을 때\r d += block[game_board[nx][ny]-1][d]\rcnt += 1\relse:\rfor a, b in warmhole[game_board[nx][ny]]: # 웜홀 만났을때 인덱스 변경\r if nx != a or ny != b:\rnx = a\rny = b\rbreak\rfor t in range(int(input())):\rn = int(input())\rgame_board = [list(map(int, input().split()))for _ in range(n)]\rwarmhole = {6:[],7:[],8:[],9:[],10:[]}\rfor i in range(n):\rfor j in range(n):\rif game_board[i][j] \u0026gt; 5:\rwarmhole[game_board[i][j]].append((i,j))\rresult = 0\rfor i in range(n):\rfor j in range(n):\rif game_board[i][j] == 0:\rfor k in range(4):\rsol(i,j,k)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r"
},
{
	"uri": "https://dongyeopgu.github.io/",
	"title": "여러가지",
	"tags": [],
	"description": "",
	"content": "여러가지 해보는 중 "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/baekjoon/baekjoon.html",
	"title": "BAEKJOON - Python",
	"tags": [],
	"description": "",
	"content": "14890. 경사로 def slope(i, c):\rglobal ans\rcnt = 1\rfor j in range(0, N-1):\rd = a[i][j+1]-a[i][j] if c else a[j+1][i]-a[j][i]\rif d == 0:\rcnt += 1\relif d == 1 and cnt \u0026gt;= L:\rcnt = 1\relif d == -1 and cnt \u0026gt;= 0:\rcnt = -L+1\relse:\rreturn\rif cnt \u0026gt;= 0:\rans += 1\rdef solve():\rfor i in range(N):\rslope(i, 1)\rslope(i, 0)\rprint(ans)\rN, L = map(int, input().split())\ra = [list(map(int, input().split())) for _ in range(N)]\rans = 0\rsolve()\r14503. 로봇 청소기 dt = [(-1,0),(0,1),(1,0),(0,-1)] # 북, 동, 남, 서\r def leftdir(d): # 왼쪽 탐색 index 만들기 위해\r if d == 0:\rreturn 3\relse:\rreturn d - 1\rn, m = map(int,input().split())\rr, c, d = map(int, input().split())\rroom = [list(map(int, input().split()))for _ in range(n)]\rcheck = 0\rx = r\ry = c\rwhile True:\rd = d % 4\rif check == 4: # 4가지 방향 탐색 후\r bx = x - dt[d][0] # 뒤로 한칸 가서\r by = y - dt[d][1] if room[bx][by] == 1: # 벽이면 break\r break\relse: x = bx\ry = by\rcheck = 0\rif room[x][y] == 0: # 먼저 청소기 놓은곳 2로 변경\r room[x][y] = 2\rnd = leftdir(d) # 왼쪽 탐색위한 index변경\r nx = x + dt[nd][0]\rny = y + dt[nd][1]\rif room[nx][ny] == 0: # 왼쪽이 0 이면 다시 청소시작\r x = nx\ry = ny\rd = leftdir(d)\rcheck = 0\relse: # 왼쪽 청소거나 벽이면 다시  d = leftdir(d)\rcheck += 1\rcnt = 0\rfor i in range(n):\rfor j in range(m):\rif room[i][j] == 2:\rcnt += 1\rprint(cnt)\r12100. 2048(easy) import copy\rdef rotation(a):\rfor i in range(n):\rfor j in range(i):\ra[i][j], a[j][i] = a[j][i], a[i][j]\rreturn a\rdef rev(a):\rfor i in range(n):\ra[i] = a[i][::-1]\rreturn a\rdef left(a): for i in range(n):\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rfor j in range(1,n):\rif a[i][j-1] == a[i][j]:\ra[i][j-1] = a[i][j-1]*2\ra[i][j] = 0\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rreturn a\rdef right(a):\rrev(a)\rleft(a)\rreturn rev(a)\rdef up(a):\rrotation(a)\rleft(a)\rreturn rotation(a)\rdef down(a):\rrotation(a)\rright(a)\rreturn rotation(a)\rdef my_max(a):\rmax_v = 0\rfor i in range(n):\rfor j in range(n):\rif a[i][j] \u0026gt; max_v:\rmax_v = a[i][j]\rreturn max_v\rdef solv(cnt, a):\rglobal result\rif cnt == 5:\rresult = max(result, my_max(a))\rif cnt\u0026lt;5:\rcopy_a = copy.deepcopy(a)\rup(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rdown(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rleft(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rright(copy_a)\rsolv(cnt+1, copy_a)\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rresult = 0\rsolv(0,a)\rprint(result)\r1012. 유기농 배추 def DFS(y,x):\rdy = [0,1,0,-1]\rdx = [1,0,-1,0]\rboard[y][x] = 0\rfor i in range(4):\rny = y + dy[i]\rnx = x + dx[i]\rif ny \u0026lt; 0 or ny \u0026gt;= N or nx \u0026lt; 0 or nx \u0026gt;= M:\rcontinue\rif board[ny][nx]:\rDFS(ny,nx)\rfor _ in range(int(input())):\rM, N, K = map(int, input().split())\rboard = [[0 for _ in range(M)] for _ in range(N)]\rfor _ in range(K):\rX, Y = map(int, input().split())\rboard[Y][X] = 1\rcnt = 0\rfor i in range(N):\rfor j in range(M):\rif not board[i][j]:\rcontinue\rcnt += 1\rDFS(i,j)\rprint(cnt)\r1244. 스위치 켜고 끄기 n = int(input()) #스위치개수\r switch = list(map(int, input().split()))\rm = int(input()) #사람수\r for _ in range(m):\rstudent = list(map(int, input().split()))\rif student[0] == 1:\rk = student[1] - 1\rwhile k \u0026lt; n:\rswitch[k] = 1 - switch[k]\rk += student[1]\relse:\rj = student[1] - 1\rswitch[j] = 1 - switch[j]\rfor a in range(1,n-1):\rif j - a \u0026gt;= 0 and j + a \u0026lt; n and switch[j - a] == switch[j + a]:\rswitch[j - a] = 1 - switch[j - a]\rswitch[j + a] = 1 - switch[j + a]\relse:\rbreak\rfor i, e in enumerate(switch):\rif i and not (i%20):\rprint()\rprint(e, end=\u0026#39; \u0026#39;)\r2583. 영역구하기 from sys import*\rsetrecursionlimit(10**6)\rdt = ([1, 0], [-1, 0], [0, 1], [0, -1])\rdef solv(y,x):\rglobal cnt\rvisit[y][x] = 1\rcnt += 1\rfor i in range(4):\rnx = x + dt[i][0]\rny = y + dt[i][1]\rif 0 \u0026lt;= nx \u0026lt; n and 0 \u0026lt;= ny \u0026lt; m:\rif arr[ny][nx] == 0 and visit[ny][nx]==0:\rsolv(ny,nx)\rm, n, k = map(int, input().split())\rarr = [[0 for _ in range(n)]for _ in range(m)]\rfor i in range(k):\ra, b, c, d = map(int, input().split())\rfor x in range(a,c):\rfor y in range(b,d):\rarr[y][x] = 1\rarr = list(reversed(arr))\rvisit = [[0 for _ in range(n)]for _ in range(m)]\rresult = []\rfor i in range(m):\rfor j in range(n):\rif arr[i][j] == 0 and visit[i][j] == 0:\rcnt = 0\rsolv(i,j)\rresult.append(cnt)\rprint(len(result))\rprint(\u0026#39; \u0026#39;.join(map(str, sorted(result))))\r2589. 보물섬 dt = [(1,0), (-1,0), (0,1), (0,-1)]\rdef xy(i,j):\rreturn 0 \u0026lt;= i \u0026lt; row and 0 \u0026lt;= j \u0026lt; col and Map[i][j] == \u0026#39;L\u0026#39;\rdef solv(x,y):\rq.append([x,y])\rdist = [[0 for _ in range(col)]for _ in range(row)]\rdist[x][y] = 1\rresult = 0\rwhile q:\ri, j = q.pop(0)\rfor idx in dt:\rnx = i + idx[0]\rny = j + idx[1]\rif xy(nx,ny) and dist[nx][ny] == 0:\rdist[nx][ny] = dist[i][j] + 1\rresult = max(result, dist[nx][ny]) q.append([nx,ny])\rreturn result - 1\rrow, col = map(int, input().split())\rMap = [list(map(str, input()))for _ in range(row)]\rvisit = [[0 for _ in range(col)]for _ in range(row)]\rq = []\rcnt = 0\rfor i in range(row):\rfor j in range(col):\rif Map[i][j] == \u0026#39;L\u0026#39;:\rcnt = max(cnt, solv(i,j))\rprint(cnt)\r"
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d3/swea-d3.html",
	"title": "SWEA - Python - D3",
	"tags": [],
	"description": "",
	"content": "1240. 단순 2진 암호코드 for t in range(int(input())):\rn = int(input())\rarr = [0]*n\rcnt = 0\ra = list(input().split())\rfor i in a:\rflag = 0\rfor j in i:\rif not flag and j.isupper():\rflag = 1\relif j.isdigit() or (flag and j.isupper()):\rflag = 0\rbreak\rif flag:\rarr[cnt] += 1\rif (\u0026#39;.\u0026#39; in i) or (\u0026#39;!\u0026#39; in i) or (\u0026#39;?\u0026#39; in i):\rcnt += 1\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr))}\u0026#34;)\r1289. 원재의 메모리 복구 for test_case in range(int(input())):\rN = list(map(int, \u0026#39; \u0026#39;.join(input().split())))\rcnt = 0\ra = 0\rif N[0] == 1:\rcnt = 1\relse:\rcnt = 0\rfor i in range(1,len(N)):\rif N[i] != N[i-1]:\rcnt += 1\relse:\rcnt += 0\rprint(f\u0026#34;#{test_case + 1} {cnt}\u0026#34;)\r1491. 원재의 벽 꾸미기 for test_case in range(int(input())):\rN, A, B = map(int, input().split())\ra = []\rfor R in range(1, N):\rfor C in range(1, N):\rif R * C \u0026lt;= N:\rif A*abs(R-C) + B*(N-R*C) \u0026gt;= 0:\ra.append(A*abs(R-C) + B*(N-R*C))\rprint(f\u0026#34;#{test_case} {min(a)}\u0026#34;)\r1493. 수의 새로운 연산 for test_case in range(int(input())):\rp, q = map(int, input().split())\rmapping = [[0 for i in range(300)]for j in range(300)]\ra = 1\rp_x = 0\rp_y = 0\rq_x = 0\rq_y = 0\rfor i in range(599):\rfor j in range(300):\rif 300 \u0026gt; i - j \u0026gt;= 0:\rmapping[i-j][j] = a\ra += 1\rfor i in range(300):\rif p in mapping[i]:\rp_y = mapping[i].index(p)\rp_x = i\rfor i in range(300):\rif q in mapping[i]:\rq_y = mapping[i].index(q)\rq_x = i\rresult = mapping[p_x+q_x+1][p_y+q_y+1]\rprint(f\u0026#34;#{test_case + 1} {result}\u0026#34;)\r1860. 진기의 최고급 붕어빵 for t in range(int(input())):\rN,M,K=map(int,input().split())\ra=list(map(int,input().split()))\rfor i in range(len(a)):\rif sorted(a)[i]//M*K\u0026lt;i+1:\rresult=\u0026#34;Impossible\u0026#34;\rbreak\relse:\rresult=\u0026#34;Possible\u0026#34;\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r1873. 상호의 배틀필드 for t in range(int(input())):\rH, W = map(int, input().split())\rmove_symbol = [\u0026#34;^\u0026#34;, \u0026#34;v\u0026#34;, \u0026#34;\u0026lt;\u0026#34;, \u0026#34;\u0026gt;\u0026#34;]\rmove_command = [\u0026#34;U\u0026#34;, \u0026#34;D\u0026#34;, \u0026#34;L\u0026#34;, \u0026#34;R\u0026#34;, \u0026#34;S\u0026#34;]\rmove_dir = [[-1, 0], [1, 0], [0, -1], [0, 1]]\rfield = []\rstartpoint = [0, 0, 0]\rfor i in range(H):\ra = list(input())\rfield.append(a)\rfor j in range(len(a)):\rif a[j] in move_symbol:\rstartpoint[0] = i\rstartpoint[1] = j\rstartpoint[2] = move_symbol.index(a[j])\rfield[i][j] = \u0026#39;.\u0026#39;\rN = int(input())\rcommandline = list(input())\rfor i in commandline:\rmove_index = move_command.index(i)\rif move_index \u0026lt; 4:\ri_idx = startpoint[0] + move_dir[move_index][0]\rj_idx = startpoint[1] + move_dir[move_index][1]\rif 0 \u0026lt;= i_idx \u0026lt; H and 0 \u0026lt;= j_idx \u0026lt; W:\rif field[i_idx][j_idx] == \u0026#39;.\u0026#39;:\rstartpoint[0] = i_idx\rstartpoint[1] = j_idx\rstartpoint[2] = move_index\relse:\rn = startpoint[0]\rm = startpoint[1]\rwhile True:\rn += move_dir[startpoint[2]][0]\rm += move_dir[startpoint[2]][1]\rif 0 \u0026lt;= n \u0026lt; H and 0 \u0026lt;= m \u0026lt; W:\rif field[n][m] == \u0026#34;#\u0026#34;:\rbreak\relif field[n][m] == \u0026#34;*\u0026#34;:\rfield[n][m] = \u0026#34;.\u0026#34;\rbreak\relse:\rbreak\rfield[startpoint[0]][startpoint[1]] = move_symbol[startpoint[2]]\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rfor i in range(H):\rprint(f\u0026#34;{\u0026#39;\u0026#39;.join(field[i])}\u0026#34;)\r2805. 농작물 수확하기 for t in range(int(input())):\rN = int(input())\rfarm = [list(map(int, input()))for i in range(N)]\rbase_sum = sum(farm[N//2])\rfor i in range(N//2):\rbase_sum += sum(farm[i][N//2-i:N//2+i+1])\rfor i in range(N//2+1,N):\rbase_sum += sum(farm[i][i-N//2:N-(i-N//2)])\rprint(f\u0026#34;#{t+1} {base_sum}\u0026#34;)\r2806. N-Queen def placeQueen(queen_pos):\rcnt = 0\rn = len(queen_pos)\rif n == N:\rreturn 1\rfor i in range(N):\rfor j in range(n):\rif i == queen_pos[j]:\rbreak\rif n - j == i - queen_pos[j]:\rbreak\rif n - j == queen_pos[j] - i:\rbreak\relse:\rcnt += placeQueen(queen_pos + [i])\rreturn cnt\rfor t in range(int(input())):\rN = int(input())\rprint(f\u0026#34;#{t+1} {placeQueen([])}\u0026#34;)\r2814. 최장 경로 def dfs(a,b):\rvisit[a] = 1\rresult.append(b)\rfor i in node[a]:\rif visit[i] == 0:\rdfs(i,b+1)\rvisit[i] = 0\rfor t in range(int(input())):\rn, m = map(int, input().split())\rnode = dict()\rfor i in range(1,n+1):\rnode[i] = []\rfor i in range(m):\ra, b = map(int, input().split())\rnode[a].append(b)\rnode[b].append(a)\rresult = []\rfor i in range(1,n+1):\rvisit = [0] * (n+1)\rc = 1\rdfs(i,c)\rresult.append(c)\rprint(f\u0026#34;#{t+1} {max(result)}\u0026#34;)\r2817. 부분 수열의 합 for t in range(int(input())):\rN, K = map(int, input().split())\ra = list(map(int, input().split()))\rn = len(a)\rb = []\rresult = 0\rcnt = 0\rfor i in range(1 \u0026lt;\u0026lt; n):\rfor j in range(n+1):\rif i \u0026amp; (1 \u0026lt;\u0026lt; j):\rresult += a[j]\rif result\u0026gt;K:\rcontinue\rif result == K:\rcnt += 1\rresult=0\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r2948. 문자열 교집합 for t in range(int(input())):\rN, M = map(int,input().split())\rset_1 = set(input().split())\rset_2 = set(input().split())\rresult = set_1\u0026amp;set_2\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r3032. 홍준이의 숫자 놀이 def gcd(a, b):\rx,y, u,v = 0,1, 1,0\rwhile a != 0:\rq, r = b//a, b%a\rm, n = x-u*q, y-v*q\rb,a, x,y, u,v = a,r, u,v, m,n\rreturn [x, y]\rfor t in range(int(input())):\rA, B = map(int, input().split())\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, gcd(A,B)))}\u0026#34;)\r3131. 100만 이하의 모든 소수 def prime(n):\ra = [False, False] + [True] * (n - 1) for k in range(2, int(n ** 0.5 + 1.5)):\rif a[k]: a[k*2::k] = [False] * ((n - k) // k) return [x for x in range(n+1) if a[x]]\rprint(\u0026#39; \u0026#39;.join(map(str, prime(10**6))))\r3142. 영준이와 신비한 뿔의 숲 for t in range(int(input())):\rn, m = map(int, input().split())\rx = n - m\ry = 2*m - n\rprint(f\u0026#34;#{t+1} {y} {x}\u0026#34;)\r3233. 정삼각현 분할 for t in range(int(input())):\rn, m = map(int, input().split())\ra = n**2//m**2\rprint(f\u0026#34;#{t+1} {a}\u0026#34;)\r3260. 두 수의 덧셈 for t in range(int(input())):\rN = int(input())\rfarm = [list(map(int, input()))for i in range(N)]\rbase_sum = sum(farm[N//2])\rfor i in range(N//2):\rbase_sum += sum(farm[i][N//2-i:N//2+i+1])\rfor i in range(N//2+1,N):\rbase_sum += sum(farm[i][i-N//2:N-(i-N//2)])\rprint(f\u0026#34;#{t+1} {base_sum}\u0026#34;)\r3304. 최장 공통 부분 def lcs(a,b):\rarr = [[0 for _ in range(len(b)+2)]for _ in range(len(a)+2)]\rfor i in range(1,len(a)+1):\rfor j in range(1,len(b)+1):\rif a[i-1] == b[j-1]:\rarr[i][j] = arr[i-1][j-1]+1\relse:\rarr[i][j] = max(arr[i-1][j],arr[i][j-1])\rreturn arr[len(a)][len(b)]\rfor t in range(int(input())):\ra, b = map(str, input().split())\rprint(f\u0026#34;#{t+1} {lcs(a,b)}\u0026#34;)\r3307. 최장 증가 부분 def lis(a):\rd = [0] * (N)\rfor i in range(1,N): for j in range(i):\rif a[i] \u0026gt; a[j]:\rd[i] = max(d[i],d[j]+1)\rreturn max(d)\rfor t in range(int(input())):\rN = int(input())\ra_list = list(map(int, input().split()))\rprint(f\u0026#34;#{t+1} {lis(a_list)+1}\u0026#34;)\r3282. 0/1 Knapsack def sol(k,n):\ra = [[0 for _ in range(k+2)]for _ in range(n+2)]\rfor i in range(1,n+1):\rfor j in range(1,k+1):\rif v_list[i-1] \u0026gt; j:\ra[i][j] = a[i-1][j]\relse:\ra[i][j] = max(c_list[i-1]+a[i-1][j-v_list[i-1]], a[i-1][j])\rreturn a[n][k]\rfor t in range(int(input())):\rN, K = map(int, input().split())\rsack = [list(map(int, input().split()))for _ in range(N)]\rv_list = []\rc_list = []\rfor i in range(N):\rv_list.append(sack[i][0])\rc_list.append(sack[i][1])\rprint(f\u0026#34;#{t+1} {sol(K,N)}\u0026#34;)\r3314. 보충학습과 평균 for t in range(int(input())):\rscore = list(map(int, input().split()))\rfor i in range(len(score)):\rif score[i] \u0026lt; 40:\rscore[i] = 40\rprint(f\u0026#34;#{t+1} {sum(score)//5}\u0026#34;)\r3376. 파도반 수열 def wave(n):\ra = [1,1,1]\rb = [1] * n\rif n \u0026lt;=3:\rreturn 1\relse:\rfor i in range(3,n):\rb[i] = b[i-2] + b[i-3]\rreturn b[n-1]\rfor t in range(int(input())):\rN = int(input())\rprint(f\u0026#34;#{t+1} {wave(N)}\u0026#34;)\r3408. 세가지합 for t in range(int(input())):\rN = int(input())\rsum_1 = N*(N+1)//2\rsum_2 = N*(N*2)//2\rsum_3 = N*(N*2+2)//2\rprint(f\u0026#34;#{t+1} {sum_1} {sum_2} {sum_3}\u0026#34;)\r3431. 준환이의 운동관리 for t in range(int(input())):\rL, U, X = map(int, input().split())\rif U \u0026lt; X:\rprint(f\u0026#34;#{t+1} {-1}\u0026#34;)\relif L \u0026lt;= X \u0026lt;= U:\rprint(f\u0026#34;#{t+1} {0}\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {L-X}\u0026#34;)\r3456. 직사각형 길이 찾기 for t in range(int(input())):\ra = list(map(int, input().split()))\rfor i in range(3):\rif a.count(a[i])%2==1:\rprint(f\u0026#34;#{t+1} {a[i]}\u0026#34;)\rbreak\r3499. 퍼펙트 셔플 for t in range(int(input())):\rN = int(input())\rcard = list(map(str, input().split()))\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rif len(card) % 2 == 0:\rfor i in range(N//2):\rprint(f\u0026#34;{card[i]} {card[N//2+i]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint()\relse:\rfor i in range(N//2):\rprint(f\u0026#34;{card[i]} {card[N//2+i+1]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint(f\u0026#34;{card[N//2]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint()\r3750. Digit sum for t in range(int(input())):\rprint(f\u0026#34;#{t+1} {(int(input())-1)%9+1}\u0026#34;)\r3809. 화섭이의 정수 나열 for t in range(int(input())):\rn = int(input())\ra = \u0026#39;\u0026#39;\rwhile True:\ra += \u0026#39;\u0026#39;.join(map(str, input().split()))\rif len(a) == n:\rbreak\rprint(a)\rb = 0\rc = 0\rwhile True:\rif str(b) not in a:\rc = b\rbreak\rb += 1\rprint(f\u0026#34;#{t+1} {c}\u0026#34;)\r3975. 승률 비교하기 T = int(input())\rg = []\rfor t in range(T):\ra,b,c,d = map(int, input().split())\re = a / b\rf = c / d\rif e \u0026lt; f:\rg.append(\u0026#34;BOB\u0026#34;)\relif e \u0026gt; f:\rg.append(\u0026#34;ALICE\u0026#34;)\relse:\rg.append(\u0026#34;DRAW\u0026#34;)\rfor t in range(T):\rprint(f\u0026#34;#{t+1} {g[t]}\u0026#34;)\r4047. 영준이의 카드 카운팅 for t in range(int(input())):\ra=input()\rb=[]\rc=1\rd=[a.count(\u0026#34;S\u0026#34;),a.count(\u0026#34;D\u0026#34;),a.count(\u0026#34;H\u0026#34;),a.count(\u0026#34;C\u0026#34;)]\rfor i in range(0,len(a),3):\rb.append(a[i:i+3])\rif len(set(b))\u0026lt;len(b):\rc=0\rprint(f\u0026#34;#{t+1} ERROR\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {13-d[0]} {13-d[1]} {13-d[2]} {13-d[3]}\u0026#34;)\r4299. 태혁이의 사랑은 타이밍 for t in range(int(input())):\rd, h, m = map(int, input().split())\ra = [11, 11, 11]\rresult = 0\rif d - a[0] \u0026lt; 0:\rresult = -1\relif a[0] == d:\rif h - a[1] \u0026lt; 0:\rresult = -1\relse:\rif m - a[2] \u0026lt; 0:\rresult = -1\relse:\rresult += (d-a[0]) * 60 * 24\rresult += (h-a[1]) * 60\rresult += (m-a[2])\relse:\rresult += (d-a[0]) * 60 * 24\rresult += (h-a[1]) * 60\rresult += (m-a[2])\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4371. 항구에 들어오는 배 for t in range(int(input())):\rn = int(input())\rhappyday = []\rfor _ in range(n):\rhappyday.append(int(input())-1)\rdel happyday[0]\rfor i in happyday:\rhappyday=set(happyday)\rhappyday -= set(range(i*2,max(happyday)+1, i))\rcontinue\rprint(f\u0026#34;#{t+1} {len(happyday)}\u0026#34;)\r4406. 모음이 보이지 않는 사람 for t in range(int(input())):\ra = list(input())\rfor i in [\u0026#39;a\u0026#39;,\u0026#39;e\u0026#39;,\u0026#39;i\u0026#39;,\u0026#39;o\u0026#39;,\u0026#39;u\u0026#39;]:\rfor j in range(len(a)):\rif i == a[j]:\ra[j]=\u0026#39;\u0026#39;\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, a))}\u0026#34;)\r4466. 최대 성적표 만들기 for t in range(int(input())):\rn, k = map(int, input().split())\ra = list(map(int, input().split()))\rb = sorted(a,reverse=True)\rresult = sum(b[:k])\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4522. 세상의 모든 팰린드롬 for t in range(int(input())):\ra = list(input())\rfor i in range(len(a)//2):\rif a[i] != a[-1-i]:\rif a[i] == \u0026#39;?\u0026#39; or a[-1-i] == \u0026#39;?\u0026#39;:\rcontinue\relse:\rprint(f\u0026#34;#{t+1} Not exist\u0026#34;)\rbreak\relse:\rprint(f\u0026#34;#{t+1} Exist\u0026#34;)\r4579. 세상의 모든 팰린드롬2 for t in range(int(input())):\ra = list(input())\rresult = \u0026#39;Exist\u0026#39;\rfor i in range(len(a)//2):\rif a[i] != a[-1-i]:\rif a[i] == \u0026#39;*\u0026#39; or a[-1-i] == \u0026#39;*\u0026#39;:\rbreak\relse:\rresult = \u0026#39;Not exist\u0026#39;\rbreak\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4615. 재미있는 오셀로 게임 def limit(a, b, n):\rif a \u0026gt;= 0 and a \u0026lt; n and b \u0026gt;= 0 and b \u0026lt; n:\rreturn True\relse:\rreturn False\rfor t in range(int(input())):\rN, M = map(int, input().split())\rdata = [[0] * N for _ in range(N)]\rdata[N // 2 - 1][N // 2] = 1\rdata[N // 2][N // 2 - 1] = 1\rdata[N // 2 - 1][N // 2 - 1] = 2\rdata[N // 2][N // 2] = 2\rdx = [-1, 0, 1, 1, 1, 0, -1, -1]\rdy = [-1, -1, -1, 0, 1, 1, 1, 0]\rfor _ in range(M):\ra, b, stone = map(int, input().split())\rx = a - 1\ry = b - 1\rdata[x][y] = stone\rfor i in range(8):\rcnt = 0\rnext_x = x + dx[i]\rnext_y = y + dy[i]\rwhile limit(next_x, next_y, N) and stone != data[next_x][next_y] and data[next_x][next_y] != 0:\rcnt += 1\rnext_x = next_x + dx[i]\rnext_y = next_y + dy[i]\rif limit(next_x, next_y, N) and data[next_x][next_y] == stone:\rnext_x = x + dx[i]\rnext_y = y + dy[i]\rfor f in range(cnt):\rdata[next_x][next_y] = stone\rnext_x = next_x + dx[i]\rnext_y = next_y + dy[i]\rcnt1 = 0\rcnt2 = 0\rfor i in range(N):\rfor j in range(N):\rif data[i][j] == 1:\rcnt1 += 1\relif data[i][j] == 2:\rcnt2 += 1\rprint(f\u0026#34;#{t+1} {cnt1} {cnt2}\u0026#34;)\r4676. 늘어지는 소리 만들기 for t in range(int(input())):\rstring = list(input())\rh = int(input())\ridx = list(map(int, input().split()))\ridx_sort =sorted(idx,reverse=True)\rfor i in range(len(idx)):\rstring.insert(idx_sort[i],\u0026#39;-\u0026#39;)\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, string))}\u0026#34;)\r4751. 다솔이의 다이아몬드 장식 for t in range(int(input())):\ra = list(input())\rn = (len(a) * 4) + 1\rb = [\u0026#39;.\u0026#39;,\u0026#39;.\u0026#39;,\u0026#39;#\u0026#39;,\u0026#39;.\u0026#39;]*(n//4)+[\u0026#39;.\u0026#39;]\rc = [\u0026#39;.\u0026#39;,\u0026#39;#\u0026#39;]*(n//2)+[\u0026#39;.\u0026#39;]\rd = [\u0026#39;#\u0026#39;,\u0026#39;.\u0026#39;]*(n//2)+[\u0026#39;#\u0026#39;]\rprint(\u0026#39;\u0026#39;.join(b))\rprint(\u0026#39;\u0026#39;.join(c))\rfor i in range(len(a)):\rd[4*i+2]=a[i]\rprint(\u0026#39;\u0026#39;.join(d))\rprint(\u0026#39;\u0026#39;.join(c))\rprint(\u0026#39;\u0026#39;.join(b))\r4789. 성공적인 공연 기획 for t in range(int(input())):\ra = list(map(int, input()))\rcnt = 0\rresult = 0\rfor i in range(len(a)):\rwhile True:\rif cnt \u0026lt; i:\rcnt += 1\rresult += 1\relse:\rcnt += a[i]\rbreak\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r5162. 두가지 빵의 딜레마 for t in range(int(input())):\ra, b, c = map(int, input().split())\rresult = 0\rif a \u0026lt; b:\rresult = c // a\relse:\rresult = c // b\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r5215. 햄버거 다이어트 for t in range(int(input())):\rn, l = map(int, input().split())\rhamb = [list(map(int, input().split()))for _ in range(n)]\rcal = []\rscore = []\rfor i in range(n):\rscore.append(hamb[i][0])\rcal.append(hamb[i][1])\rboard = [[0 for _ in range(l + 1)] for _ in range(n + 1)]\rfor i in range(1, n + 1):\rfor j in range(1, l + 1):\rif cal[i - 1] \u0026gt; j:\rboard[i][j] = board[i - 1][j]\relse:\rboard[i][j] = max(score[i - 1] + board[i - 1][j - cal[i - 1]], board[i - 1][j])\rprint(f\u0026#34;#{t+1} {board[n][l]}\u0026#34;)\r5356. 의석이의 세로로 말해요 T=int(input())\rfor tc in range(1, T+1):\rarr = [input() for _ in range(5)]\rl = [len(i) for i in arr] # 각 문자열의 길이\r ml = max(l) # 문자열 중 최대길이\r temp = \u0026#34;\u0026#34;\rfor i in range(ml):\rfor j in range(5):\rif l[j] \u0026gt; i: # 자신의 문자열의 길이보다 열번호가 작으면 문자 추가하지 않음\r temp += arr[j][i]\rprint(\u0026#34;#%d%s\u0026#34;%(tc, temp)) 5431. 민석이의 과제 체크하기 for t in range(int(input())):\rn, k = map(int, input().split())\ra = list(map(int, input().split()))\rn_li = list(range(1,n+1))\rfor i in a:\rif i in n_li:\rn_li.remove(i)\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, n_li))}\u0026#34;)\r5515. 2016년 요일 맞추기 for t in range(int(input())):\rm, d = map(int, input().split())\rday = [0,31,29,31,30,31,30,31,31,30,31,30,31]\rdays = 0\rfor i in range(m):\rdays += day[i]\rprint(f\u0026#34;#{t+1} {(days+d+3)%7}\u0026#34;)\r5549. 홀수일까 짝수일까 for t in range(int(input())):\ra = input()\rif int(a[-1])%2 == 0:\rprint(f\u0026#34;{t+1} Even\u0026#34;)\relse:\rprint(f\u0026#34;{t+1} Odd\u0026#34;)\r5601. 쥬스 나누기 for t in range(int(input())):\rn = int(input())\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rfor i in range(n):\rprint(f\u0026#34;1/{n}\u0026#34;, end=\u0026#39; \u0026#39;)\rprint()\r5603. 건초더미 for t in range(int(input())):\rn = int(input())\ra = []\rfor i in range(n):\ra.append(int(input()))\ravg = sum(a)//n\rresult = 0\rfor i in range(n):\rresult += abs(a[i] - avg)\rprint(f\u0026#34;#{t+1} {result//2}\u0026#34;)\r5642. 합 for t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rmax_ = -10000\rsum_ = 0\rfor i in range(n):\rsum_ += a[i]\rif sum_ \u0026gt; max_:\rmax_ = sum_\rif sum_ \u0026lt; 0:\rsum_ = 0\rprint(f\u0026#34;#{t+1} {max_}\u0026#34;)\r5789. 현주의 상자 바꾸기 for t in range(int(input())):\rn, q = map(int, input().split())\rbox = [0 for _ in range(n)]\rfor j in range(1,q+1):\rl, r = map(int, input().split())\rfor i in range(l-1,r):\rbox[i] = j\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, box))}\u0026#34;)\r5948. 새샘이의 7-3-5 게임 for t in range(int(input())):\ra = list(map(int, input().split()))\rb = sorted(a,reverse=True)\rcnt = 0\rresult = []\rfor i in range(7):\rfor j in range(i+1,7):\rfor k in range(j+1,7):\rresult.append(b[i]+b[j]+b[k])\rc = sorted(result,reverse=True)\rv = 0\rfor i in range(len(c)-1):\rif c[i] != c[i+1]:\rcnt += 1\rif cnt == 5:\rv = c[i]\rbreak\rprint(f\u0026#34;#{t+1} {v}\u0026#34;)\r5986. 새샘이와 세 소수 def prime(number):\ra = [False, False] + [True] * (number-1)\rfor (i, e) in enumerate(a):\rif e:\rk = i * 2\rwhile k \u0026lt;= n:\ra[k] =False\rk += i\rreturn [x for (x, y) in enumerate(a) if y]\rfor t in range(int(input())):\rn = int(input())\ra = prime(n)\rcnt = 0\rfor i in range(len(a)):\rfor j in range(i,len(a)):\rfor k in range(j,len(a)):\rif a[i] + a[j] + a[k] == n:\rcnt+=1\relse:\rcontinue\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r6019. 기차 사이의 파리 for t in range(int(input())):\rd,a,b,f = map(int, input().split())\rresult = (d / (a+b))*f\rprint(f\u0026#34;#{t+1}\u0026#34;, \u0026#34;%.10f\u0026#34; %result)\r6190. 정곤이의 단조 증가하는 수 for t in range(int(input())):\rn=int(input())\ra=list(map(int,input().split()))\rf=-1\rfor i in range(n-1):\rfor j in range(i+1,n):\rm=a[i]*a[j]\rif f\u0026gt;m:\rcontinue\rc=m\rb=m%10\rc=c//10\rwhile c:\rif c%10\u0026gt;b:\rbreak\rb=c%10\rc=c//10\rif not c:\rf=m\rprint(f\u0026#34;#{t+1} {f}\u0026#34;)\r6485. 삼성시의 버스 노선 for t in range(int(input())):\rarr = [0]*5001\rfor i in range(int(input())):\ra , b = map(int, input().split())\rfor j in range(a,b+1):\rarr[j] += 1\rp = int(input())\rarr_1 = [0]*p\rfor i in range(p):\rc = int(input())\rarr_1[i] = arr[c]\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr_1))}\u0026#34;)\r6485. for t in range(int(input())):\rarr = [0]*5001\rfor i in range(int(input())):\ra , b = map(int, input().split())\rfor j in range(a,b+1):\rarr[j] += 1\rp = int(input())\rarr_1 = [0]*p\rfor i in range(p):\rc = int(input())\rarr_1[i] = arr[c]\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr_1))}\u0026#34;)\r6692. 다솔이의 월급 상자 for t in range(int(input())):\rN = int(input())\rresult = 0\rfor i in range(N):\ra, b = map(float, input().split())\rresult += a * b\rprint(f\u0026#34;{t+1}\u0026#34;, \u0026#34;%.6f\u0026#34; % result)\r7675. 통역사 성경이 for t in range(int(input())):\rn = int(input())\rarr = [0]*n\rcnt = 0\ra = list(input().split())\rfor i in a:\rflag = 0\rfor j in i:\rif not flag and j.isupper():\rflag = 1\relif j.isdigit() or (flag and j.isupper()):\rflag = 0\rbreak\rif flag:\rarr[cnt] += 1\rif (\u0026#39;.\u0026#39; in i) or (\u0026#39;!\u0026#39; in i) or (\u0026#39;?\u0026#39; in i):\rcnt += 1\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr))}\u0026#34;)\r"
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d4/swea-d4.html",
	"title": "SWEA - Python - D4",
	"tags": [],
	"description": "",
	"content": "1210. Ladder1 for _ in range(10):\rT = input()\rladder = [list(map(int, input().split()))for _ in range(100)]\rj = 0\rfor x in range(100):\rif ladder[99][x] == 2:\rj = x\rstart_p = 0\ri = 99\rwhile i \u0026gt;= 0:\rif j - 1 \u0026gt;= 0 and ladder[i][j-1] == 1:\rwhile 0 \u0026lt;= j - 1 \u0026lt; 100 and ladder[i][j-1] == 1:\rj -= 1\relif j + 1 \u0026lt; 100 and ladder[i][j+1] == 1:\rwhile 0 \u0026lt;= j + 1 \u0026lt; 100 and ladder[i][j+1] == 1:\rj += 1\ri -= 1\rprint(f\u0026#34;#{T} {j}\u0026#34;)\r1211. Ladder2 for _ in range(10):\rt = int(input())\rladder = [list(map(int, input().split()))for _ in range(100)]\rstart_idx = []\rmin_cnt = 10000\rmin_idx = 0\rfor i in range(100):\rif ladder[0][i] == 1:\rstart_idx.append(i)\rfor i in range(100):\rc = i\rr = 0\rcount = 0\rif ladder[r][c] == 1:\rr += 1\rwhile r \u0026lt; 100:\rif c-1 \u0026gt;= 0 and ladder[r][c-1] == 1:\rwhile c-1 \u0026gt;= 0 and ladder[r][c-1] == 1:\rc -= 1\rcount += 1\rr += 1\rcount += 1\relif c+1 \u0026lt;= len(ladder[r])-1 and ladder[r][c+1] == 1:\rwhile c+1 \u0026lt;= len(ladder[r])-1 and ladder[r][c+1] == 1:\rc += 1\rcount += 1\rr += 1\rcount += 1\relse:\rr += 1\rcount += 1\rif min_cnt \u0026gt; count:\rmin_cnt = count\rmin_idx = i\rprint(f\u0026#34;#{t} {min_idx}\u0026#34;)\r1224. 계산기3 def cal(a):\rstack = []\rfor i in a:\rtry:\rif i == \u0026#39;+\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num1+num2)\relif i == \u0026#39;-\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num2-num1)\relif i == \u0026#39;*\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num1*num2)\relif i == \u0026#39;/\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num2//num1)\relif i.isdigit() == True:\rstack.append(int(i))\relif i == \u0026#39;.\u0026#39;:\rreturn stack\rexcept:\rreturn \u0026#39;error\u0026#39;\r# for t in range(int(input())):\r # a = list(input().split())\r # b = cal(a)\r # if len(b) != 1:\r # print(f\u0026#34;#{t+1} error\u0026#34;)\r # else:\r # print(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, b))}\u0026#34;)\r def cal_1(a):\rstack = []\rresult = []\risp = {\u0026#39;(\u0026#39;:0,\u0026#39;+\u0026#39;:1, \u0026#39;-\u0026#39;:1, \u0026#39;*\u0026#39;:2, \u0026#39;/\u0026#39;:2, \u0026#39;)\u0026#39;:3}\rfor i in a:\rif i == \u0026#39;(\u0026#39;:\rstack.append(i)\relif i == \u0026#39;)\u0026#39;:\rwhile stack[-1] != \u0026#39;(\u0026#39;:\rb = stack.pop()\rresult.append(b)\rstack.pop()\relif i in isp:\rwhile len(stack) != 0 and isp[stack[-1]] \u0026gt;= isp[i]:\rresult.append(stack.pop())\rstack.append(i)\relif i.isdigit() == True:\rresult.append(i)\rwhile len(stack) != 0 and stack[-1] != \u0026#39;(\u0026#39;:\rc = stack.pop()\rresult.append(c)\rreturn result\rfor t in range(10):\rn = input()\ra = list(input())\rb = cal_1(a)\rb.append(\u0026#39;.\u0026#39;)\rc = cal(b)\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, c))}\u0026#34;)\r1226. 미로1 for _ in range(10):\rT = input()\rmaze = [list(map(int, input()))for _ in range(16)] flag = 0\rvisit = [[1,1]]\rdx = [-1, 0, 1, 0]\rdy = [0, 1, 0, -1]\rwhile visit != []:\ri, j = visit.pop()\rfor idx in range(4):\rc_i = i + dx[idx]\rc_j = j + dy[idx]\rif maze[c_i][c_j] == 0:\rvisit.append([c_i,c_j])\rmaze[c_i][c_j] = 1\rif maze[c_i][c_j] == 3:\rflag = 1\rbreak\rif flag:\rbreak\rprint(f\u0026#34;#{T} {flag}\u0026#34;)\r1258. 행렬찾기 for t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rresult = []\rfor i in range(n):\rfor j in range(n):\rif a[i][j] == 0:\rcontinue\rc = i\rwhile c \u0026lt; n and a[c][j]:\rr = j\rwhile r \u0026lt; n and a[c][r]:\ra[c][r] = 0\rr += 1\rc += 1\rresult.append([c-i, r-j])\rresult.sort(key=lambda x : (x[0]*x[1], x[0]))\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;, end=\u0026#39; \u0026#39;)\rfor i,j in result:\rprint(i,j,end=\u0026#39; \u0026#39;)\rprint() 1486. 장훈이의 높은 선반 for t in range(int(input())):\rn, b = map(int, input().split())\rheight = list(map(int, input().split()))\rmin_ = 10000*20\rfor i in range(1\u0026lt;\u0026lt;n):\rsum_ = 0\rfor j in range(n):\rif i \u0026amp;(1\u0026lt;\u0026lt;j):\rsum_ += height[j]\rif sum_ \u0026gt;= b and sum_ \u0026lt; min_:\rmin_ = sum_\rprint(f\u0026#34;#{t+1} {min_-b}\u0026#34;)\r1861. 정사각형 방 dt = [(1,0), (0,1), (-1,0), (0,-1)]\rfor t in range(int(input())):\rn = int(input())\rroom = [list(map(int, input().split()))for _ in range(n)]\rmax_value = 0\rresult = n ** 2 + 1\rfor i in range(n):\rfor j in range(n):\rstart_num = room[i][j]\rcnt = 1\rwhile True:\rfor delta in dt:\rdx, dy = i + delta[0], j + delta[1]\rif 0 \u0026lt;= dx \u0026lt; n and 0 \u0026lt;= dy \u0026lt; n and room[dx][dy] - room[i][j] == 1:\rcnt += 1\ri, j = dx, dy\rbreak\relse:\rbreak\rif cnt \u0026gt; max_value:\rmax_value = cnt\rresult = start_num\relif cnt == max_value and start_num \u0026lt; result:\rmax_value = cnt\rresult = start_num\rprint(f\u0026#34;#{t+1} {result} {max_value}\u0026#34;)\r1865. 동철이의 일 분배 def solv(per, sum_val, a=0):\rglobal result\rif sum_val \u0026lt;= result:\rreturn\rif per == n:\rif sum_val \u0026gt; result:\rresult = sum_val\rreturn\rfor i in range(a,n):\rn_list[i],n_list[a] = n_list[a], n_list[i]\rsolv(per+1,sum_val*p[a][n_list[a]]/100,a+1)\rn_list[i],n_list[a] = n_list[a], n_list[i]\rfor t in range(int(input())):\rn = int(input())\rn_list = list(range(n))\rp = [list(map(int, input().split()))for _ in range(n)]\rresult = 0\rsolv(0,1)\rprint(f\u0026#34;#{t+1} {100*result:.6f}\u0026#34;)\r2819. 격자판의 숫자 이어 붙이기 dt = [(-1,0), (0,1), (1,0), (0,-1)]\rdef sol(x,y,num,cnt=0):\rglobal result\rif cnt == 6:\rresult.add(num)\rreturn\rfor delta in dt:\rdx, dy = x + delta[0], y + delta[1]\rif not (0 \u0026lt;= dx \u0026lt; 4 and 0 \u0026lt;= dy \u0026lt; 4):\rcontinue\rsol(dx,dy,num+a[dx][dy], cnt+1) for t in range(int(input())):\ra = [list(map(str, input().split()))for _ in range(4)]\rresult = set()\rfor i in range(4):\rfor j in range(4):\rsol(i,j,a[i][j])\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r3347. 올림픽 종목 투표 for t in range(int(input())):\rn, m = map(int, input().split())\ra = list(map(int,input().split()))\rb = list(map(int,input().split()))\rc = [0] * n\rfor i in range(m):\rfor j in range(n):\rif a[j]\u0026lt;=b[i]:\rc[j] += 1\rbreak\rprint(f\u0026#34;#{t+1} {c.index(max(c))+1}\u0026#34;)\r3752. 가능한 시험 점수 for t in range(int(input())):\rN = int(input())\ra = list(map(int, input().split()))\rsum_score = {0}\rfor i in a:\rfor j in list(sum_score):\rsum_score.add(j+i)\rprint(f\u0026#34;#{t+1} {len(sum_score)}\u0026#34;)\r4408. 자기 방으로 돌아가기 for t in range(int(input())):\rroom = [0] * 400\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rfor i in range(n):\rif a[i][0] \u0026gt; a[i][1]:\ra[i][0], a[i][1] = a[i][1], a[i][0]\rif a[i][0] % 2 == 0:\ra[i][0] += 1\rif a[i][1] % 2:\ra[i][1] += 1\rfor j in range(a[i][0],a[i][1]):\rroom[j] += 1\rprint(f\u0026#34;#{t+1} {max(room)}\u0026#34;)\r5432. 쇠막대기 자르기 for t in range(int(input())):\ra = input()\rb = a.replace(\u0026#39;()\u0026#39;,\u0026#39;-\u0026#39;)\rstack = []\rcnt = 0\rfor i in b:\rif i == \u0026#39;(\u0026#39;:\rcnt += 1\rstack.append(i)\relif i == \u0026#39;)\u0026#39;:\rstack.pop()\relse:\rcnt += len(stack)\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r6109. 추억의 2048게임 def rotation(a):\rfor i in range(n):\rfor j in range(i):\ra[i][j], a[j][i] = a[j][i], a[i][j]\rreturn a\rdef rev(a):\rfor i in range(n):\ra[i] = a[i][::-1]\rreturn a\rdef left(a): for i in range(n):\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rfor j in range(1,n):\rif a[i][j-1] == a[i][j]:\ra[i][j-1] = a[i][j-1]*2\ra[i][j] = 0\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rreturn a\rdef right(a):\rrev(a)\rleft(a)\rreturn rev(a)\rdef up(a):\rrotation(a)\rleft(a)\rreturn rotation(a)\rdef down(a):\rrotation(a)\rright(a)\rreturn rotation(a)\rfor t in range(int(input())):\rn, case = map(str, input().split())\rn = int(n)\ra = [list(map(int, input().split()))for _ in range(n)]\rprint(f\u0026#34;#{t+1}\u0026#34;)\rif case == \u0026#34;left\u0026#34;:\ra = left(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;right\u0026#34;:\ra = right(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;up\u0026#34;:\ra = up(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;down\u0026#34;:\ra = down(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i]))) "
},
{
	"uri": "https://dongyeopgu.github.io/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]