[
{
	"uri": "https://dongyeopgu.github.io/basics.html",
	"title": "About Blog",
	"tags": [],
	"description": "",
	"content": "첫 시작  2020년 1월, 처음 코딩을 배우면서 github.io로 블로그를 한번 만들어 보려는 생각. 배우고 있는 것들을 간단하게 올려볼 생각. 4월, Hugo Theme을 이용해 만드는 중.  "
},
{
	"uri": "https://dongyeopgu.github.io/cont/django_start.html",
	"title": "Django 시작하기",
	"tags": ["django"],
	"description": "",
	"content": "기초  1. django 설치 $ pip install django==2.1.15\r(2.1.15 기준으로 배웠기 때문에)\n2. 프로젝트 시작 $ django-admin startproject {프로젝트 이름}\r그 후에 프로젝트 폴더의 settings.py에서 ALLOWED_HOST = [\u0026#39;*\u0026#39;]로 수정\r3. App 만들기 # manage.py 파일이 있는 폴더에서 터미널 진입 후 bash 에 $ python manage.py startapp {앱 이름}\r # 그 후에 settings.py에서  INSTALLED_APPS = [\r\u0026#39;{앱 이름}\u0026#39; 추가\r]\r4. urls.py 작성 # 프로젝트 이름/urls.py에서 예를 들어 index 페이지를 넣을 경우  from app이름 import views #추가\r urlpatterns =[\rpath(\u0026#39;index/\u0026#39;, views.index),\r]\r## path의 url은 항상 /로 닫기 ##\r 5. views.py 작성 # app 이름/views.py 에서\r def index(request):\rreturn render(request, \u0026#39;index.html\u0026#39;) #기본 형식\r # 만약 html파일에 넣고자 하는 내용이 있을 경우에는\r def index(request):\rsample = \u0026#39;샘플\u0026#39;\rcontext = {\r\u0026#39;sample\u0026#39;: sample,\r}\rreturn render(request, \u0026#39;index.html\u0026#39;, context)\r# 이렇게 쓸 수 있음. 다른 방법으로,\r context를 적지 않고 바로 return render(request, \u0026#39;index.html\u0026#39;, {\u0026#39;sample\u0026#39;:sample})로 쓸 수 있음.\r 함수 정의에서 첫번째 인자는 항상 request로 render에서도 첫번째 인자는 항상 request  6. templates 폴더 만들기  필요한 html 파일을 app이름 폴더 안에 templates 폴더를 만든후 저장. django template language는 https://docs.djangoproject.com/en/3.0/를 이용해서 확인  7. base.html 만들 경우 # 프로젝트명 폴더에 templates 폴더를 만든 후\r # settings.py에서\r TEMPLATES = [\r{\r...\r\u0026#39;DIRS\u0026#39;: [\ros.path.join(BASE_DIR, \u0026#39;templates\u0026#39;)\r], # 추가\r ...\r}\r]\r base.html 작성  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;ko\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r{% block body %}\r{% endblock %}\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r 그리고 app이름 폴더에 있는 templates 안에 있는 html 파일들에 내용 추가  {% extends \u0026#39;base.html\u0026#39; %}\r{% block body %}\r\u0026lt;!-- html 작성 --\u0026gt;\r{% endblock %}\r  Django CRUD Django Paginator Django User(1) Django User(2)  "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/baekjoon.html",
	"title": "백준 문제풀이",
	"tags": ["백준", "baekjoon"],
	"description": "",
	"content": "BAEKJOON 의 알고리즘 문제  BAEKJOON 답  "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2.html",
	"title": "Algorithm 문제풀이",
	"tags": ["백준", "baekjoon", "SWEA"],
	"description": "",
	"content": "여러가지 Algorithm 풀이 Python으로 푼 알고리즘 답 모음  SWEA D3 SWEA D4 백준  "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d3.html",
	"title": "D3 문제풀이",
	"tags": ["SWEA"],
	"description": "",
	"content": "SW Expert Academy의 Python D3 문제  D3 답  "
},
{
	"uri": "https://dongyeopgu.github.io/cont/django_crud.html",
	"title": "Django CRUD",
	"tags": ["django", "create", "read", "update", "delete", "crud"],
	"description": "",
	"content": "CRUD - Create, Read, Update, Delete  1. Model 사용할 경우 1. Model 만들기 (ex: Article이라는 모델을 만들경우) # 프로젝트 명/App이름/models.py\r class Article(models.Model):\rtitle = models.CharField(max_length=140)\rcontent = models.TextField()\rcreated_at = models.DateTimeField(auto_now_add=True)\rupdated_at = models.DateTimeField(auto_now=True)\r models.Model 을 상속받은 클래스를 생성한다. 속성은 내가 구성하고 싶은 테이블의 컬럼의 이름을 지정하고, 데이터 타입에 맞춰서 필드를 정의한다. 위에서 정의된 필드 정보  CharField :  max_length : 필수   DateTimeField  auto_now_add : (선택) 생성시에만 자동으로 해당 시간 값 설정 auto_now : (선택) 수정시마다 자동으로 해당 시간 값 설정   이외의 필드는 https://docs.djangoproject.com/ko/2.1/ref/models/fields/#field-types 여기서 확인    2. Migrations  Migrations are Django’s way of propagating changes you make to your models (adding a field, deleting a model, etc.) into your database schema.\n마이그레이션은 django에서 모델의 변경 사항을 데이터베이스 스키마에 반영하기 위한 방법이다.\n관련 문서\n   정의된 모델을 데이터베이스에 반영하기 위해서 아래 명령어 실행.\n$ python manage.py makemigrations\rMigrations for \u0026#39;articles\u0026#39;:\rarticles/migrations/0001_initial.py\r- Create model Article\r  마이그레이션 파일은 모델의 변경사항은 기록하며, app 별로 있는 migrations/ 폴더에 기록된다. 최초에 0001_initial.py 라는 파일이 생성되어 있을 것이다.\n  생성된 마이그레이션 파일을 데이터베이스에 반영하기 위해서는 아래의 명령어를 입력한다.\n 아래와 같이 많아 보이는 것은 django가 기본적으로 활용하고 있는 데이터베이스 마이그레이션 파일까지 반영되었기 때문이다. (프로젝트 생성과 동시에 python manage.py migrate )  $ python manage.py migrate\rOperations to perform:\rApply all migrations: admin, articles, auth, contenttypes, sessions\rRunning migrations:\rApplying contenttypes.0001_initial... OK\rApplying auth.0001_initial... OK\rApplying admin.0001_initial... OK\rApplying admin.0002_logentry_remove_auto_add... OK\rApplying admin.0003_logentry_add_action_flag_choices... OK\rApplying articles.0001_initial... OK\rApplying contenttypes.0002_remove_content_type_name... OK\rApplying auth.0002_alter_permission_name_max_length... OK\rApplying auth.0003_alter_user_email_max_length... OK\rApplying auth.0004_alter_user_username_opts... OK\rApplying auth.0005_alter_user_last_login_null... OK\rApplying auth.0006_require_contenttypes_0002... OK\rApplying auth.0007_alter_validators_add_error_messages... OK\rApplying auth.0008_alter_user_username_max_length... OK\rApplying auth.0009_alter_user_last_name_max_length... OK\rApplying sessions.0001_initial... OK\r  Migrations 관련 명령어\n$ python manage.py makemigrations\r$ python manage.py showmigrations\r$ python manage.py migrate\r$ python manage.py sqlmigrate article 0001\r  3. admin 등록하기 # 프로젝트 명/app 이름/admin.py\rfrom django.contrib import admin\r# Register your models here.\rfrom .models import Article\radmin.site.register(Article)\r4. Create 만들기 # app이름/views.py\r from django.shortcuts import render, redirect, get_object_or_404\rfrom .models import Article #import뒤에 만든 model 클래스\r def create(request):\rarticle = Article()\rarticle.title = request.POST.get(\u0026#39;title\u0026#39;)\rarticle.content = request.POST.get(\u0026#39;content\u0026#39;)\rarticle.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk) #redirect로 만들어 진 페이지로 이동하게\r def detail(request, pk):\r# article = Article.objects.get(pk=pk)  article = get_object_or_404(Article, pk=pk)\r# Article.objects.get을 써도 되지만 get_object_or_404를 쓸 경우 pk값이 없을 경우 404 나오게\r context = {\r\u0026#39;article\u0026#39;: article\r}\rreturn render(request, \u0026#39;articles/detail.html\u0026#39;, context)\r# app 이름/urls.py\r from django.urls import path\rfrom . import views\rapp_name = \u0026#39;articles\u0026#39; # app_name을 사용해 절대 경로를 사용 하지 않도록함.\r urlpatterns = [\rpath(\u0026#39;create/\u0026#39;, views.create, name=\u0026#39;create\u0026#39;),\rpath(\u0026#39;\u0026lt;int:pk\u0026gt;/\u0026#39;, views.detail, name=\u0026#39;detail\u0026#39;),\r]\r5. Update 만들기 # views.py에 추가\r def update(request, pk):\rarticle = get_object_or_404(Article, pk=pk)\rarticle.title = request.POST.get(\u0026#39;title\u0026#39;)\rarticle.content = request.POST.get(\u0026#39;content\u0026#39;)\rarticle.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\r# urls.py의 urlpatterns에 추가\r path(\u0026#39;\u0026lt;int:pk\u0026gt;/update/\u0026#39;, views.update, name=\u0026#39;update\u0026#39;),\r6. Delete 만들기 # views.py에 추가\r def delete(request, pk):\rarticle = get_object_or_404(Article, pk=pk)\rarticle.delete()\rreturn redirect(\u0026#39;articles:index\u0026#39;)\r# urls.py의 urlpatterns에 추가\r path(\u0026#39;\u0026lt;int:pk\u0026gt;/delete/\u0026#39;, views.delete, name=\u0026#39;delete\u0026#39;),\r2. Form 사용할 경우 1. app이름 폴더 내 forms.py 추가 # 간단한 예\r from django import forms\rfrom .models import Article\rclass ArticleForm(forms.ModelForm):\rtitle = forms.CharField(\rmax_length=100,\rwidget=forms.TextInput(\rattrs={,\r\u0026#39;placeholder\u0026#39;: \u0026#39;제목 입력\u0026#39;\r}\r)\r)\rcontent = forms.CharField(\rwidget=forms.Textarea(\rattrs={\r\u0026#39;placeholder\u0026#39;: \u0026#39;내용 입력\u0026#39;\r}\r)\r)\rclass Meta:\rmodel = Article\rfields = [\u0026#39;title\u0026#39;, \u0026#39;content\u0026#39;]\r attrs의 placeholder는 빈칸일 경우 나타내는 내용  2. views.py에 내용 추가 from .forms import ArticleForm\rdef create(request):\rif request.method == \u0026#39;POST\u0026#39;:\rform = ArticleForm(request.POST)\rif form.is_valid():\rarticle = form.save()\rreturn redirect(\u0026#39;articles:index\u0026#39;)\relse:\rform = ArticleForm()\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;articles/form.html\u0026#39;, context)\rdef update(request, pk):\r# 수정시에는 해당 article 인스턴스를 넘겨줘야한다!\r article = get_object_or_404(Article, pk=pk)\rif request.method == \u0026#39;POST\u0026#39;:\rform = ArticleForm(request.POST, instance=article)\rif form.is_valid():\rarticle = form.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\relse:\rform = ArticleForm(instance=article)\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;articles/form.html\u0026#39;, context)\r update에서 인스턴스를 넘겨주지 않으면 빈칸으로 update 페이지가 나오지만, 인스턴스를 넘겨주면 원래 글의 내용을 가지고 나타냄 form.html 하나를 가지고 create와 update모두 사용하도록 함  \u0026lt;!-- form.html --\u0026gt;\r{% if request.resolver_match.url_name == \u0026#39;create\u0026#39; %}\r\u0026lt;h2\u0026gt;새 글쓰기\u0026lt;/h2\u0026gt;\r{% else %}\r\u0026lt;h2\u0026gt;수정하기\u0026lt;/h2\u0026gt;\r{% endif %}\r\u0026lt;!-- create로 접근했을 경우와 update로 접근했을 경우 다르게 보이도록 설정 --\u0026gt;\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;!-- action이 비어있어도 작동함 views.py --\u0026gt;\r{% csrf_token %} \u0026lt;!-- csrf_token 없이 만들 경우 작동하지 않음 --\u0026gt;\r{% form %}\r\u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;제출\u0026#34;\u0026gt;\r\u0026lt;/form\u0026gt;\r  Django 기초 Django Paginator Django User(1) Django User(2)  "
},
{
	"uri": "https://dongyeopgu.github.io/cont.html",
	"title": "Django 학습",
	"tags": [],
	"description": "",
	"content": "Django 학습 내용  Django 기초 Django CRUD Django Paginator Django User(1) Django User(2)  "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d4.html",
	"title": "D4 문제풀이",
	"tags": ["SWEA"],
	"description": "",
	"content": "SW Expert Academy의 Python D4 문제  D4 답 모의 테스트 답  "
},
{
	"uri": "https://dongyeopgu.github.io/cont/django_paginator.html",
	"title": "Django Paginator",
	"tags": ["django", "paginator", "pagination"],
	"description": "",
	"content": "Paginator 사용하기   게시판 같은 곳에서 리스트의 양이 많아 질 경우 나누어 보여주기 위해서 사용\n여기 적힌 예에서 model은 Review 이고 forms는 ReviewForm이다.\nbootstrap을 사용했음.\n 1. views.py에 내용 추가하기 from django.core.paginator import Paginator\rdef review_list(request):\rreviews = Review.objects.order_by(\u0026#39;-pk\u0026#39;)\rpaginator = Paginator(reviews, 5) #한 페이지 당 몇개 씩 보여줄 지 지정\r page_number = request.GET.get(\u0026#39;page\u0026#39;)\rpage_obj = paginator.get_page(page_number)\rreviews_all = get_list_or_404(Review) #전체 개수를 보기 위해\r total_count = len(reviews_all)\t# 리뷰의 총 개수  total_page = total_count//5\t# 리뷰 총 개수 / 한 페이지에 보여줄 수\r page_range = range(1,total_page+1)\rcontext = {\r\u0026#39;reviews\u0026#39;: reviews,\r\u0026#39;page_obj\u0026#39;: page_obj,\r\u0026#39;page_range\u0026#39;: page_range,\r}\rreturn render(request, \u0026#39;앱이름/review_list.html\u0026#39;, context)\r2. 리스트를 보여줄 html파일 수정 {% for review in page_obj %}\r\u0026lt;div class=\u0026#34;card mb-3 border-info\u0026#34; onclick=\u0026#34;location.href=\u0026#39;/community/{{ review.pk }}/\u0026#39;\u0026#34; style=\u0026#34;cursor:pointer\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;card-header\u0026#34;\u0026gt;\r{{ review.movie_title }}\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt;\r\u0026lt;h5 class=\u0026#34;card-title\u0026#34;\u0026gt;{{ review.title }}\u0026lt;/h5\u0026gt;\r\u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;{{ review.content }} \u0026lt;/p\u0026gt;\r\u0026lt;a href=\u0026#34;{% url \u0026#39;reviews:detail\u0026#39; review.pk %}\u0026#34; class=\u0026#34;btn btn-info float-right\u0026#34;\u0026gt;Go Detail\u0026lt;/a\u0026gt;\r\u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;{{ review.created_at|date:\u0026#34;y.m.d P\u0026#34; }}\u0026lt;/h3\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r{% endfor %}\r\u0026lt;!-- Paginator !--\u0026gt;\r\u0026lt;nav aria-label=\u0026#34;Page navigation\u0026#34;\u0026gt;\r\u0026lt;ul class=\u0026#34;pagination\u0026#34;\u0026gt;\r{% if page_obj.has_previous %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page_obj.previous_page_number }}\u0026#34;\u0026gt;Previous\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt;Previous\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endif %}\r{% for page in page_range %}\r{% if page_obj.number == page %}\r\u0026lt;li class=\u0026#34;page-item active\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page }}\u0026#34;\u0026gt;{{ page }}\u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page }}\u0026#34;\u0026gt;{{ page }}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endif %}\r{% endfor %}\r{% if page_obj.has_next %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page_obj.next_page_number }}\u0026#34;\u0026gt;Next\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt;Next\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endif %}\r\u0026lt;/ul\u0026gt;\r\u0026lt;/nav\u0026gt;\r 현재 페이지에 따라 표시를 다르게 하기 위하여 {% if page_obj.number == page %}을 사용함    Django 기초 Django CRUD Django User(1) Django User(2)  "
},
{
	"uri": "https://dongyeopgu.github.io/cont/django_login.html",
	"title": "Django User (1)",
	"tags": ["django", "sign in", "sign out", "sign up"],
	"description": "",
	"content": "User 관리(sign in, out, up)   로그인 기능을 넣는 방법\nmodel을 만들 필요 없이 django에서 제공하는 user 모델을 사용함\nbootstrap 사용을 기반으로 작성함\n 1. accounts라는 새로운 app을 작성 2. 기본 제공되는 User 모델을 사용하기 때문에 forms.py만 작성 from django.forms import ModelForm\rfrom django.contrib.auth.models import User # django에서 기본 제공하는 model이 있음.\r from django import forms\rclass SignupForm(ModelForm): #회원가입을 제공하는 class이다.\r username = forms.CharField(\rmax_length=20,\rmin_length=6,\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r}\r)\r)\rpassword = forms.CharField(\rmax_length=16,\rmin_length=8,\rwidget=forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r\u0026#39;placeholder\u0026#39;: \u0026#39;8글자 이상, 16글자 이하로 작성해주세요.\u0026#39;\r}\r)\r)\rpassword_confirm = forms.CharField(\rmax_length=16,\rmin_length=8,\rwidget=forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r\u0026#39;placeholder\u0026#39;: \u0026#39;8글자 이상, 16글자 이하로 작성해주세요.\u0026#39;\r}\r)\r)\rlast_name = forms.CharField(\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\rfirst_name = forms.CharField(\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\remail = forms.EmailField(\rwidget=forms.EmailInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\rfield_order=[\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;,\u0026#39;password_confirm\u0026#39;,\u0026#39;last_name\u0026#39;,\u0026#39;first_name\u0026#39;,\u0026#39;email\u0026#39;]\r#field_order는 만들어지는 입력양식의 순서, password 바로 밑에 password_check 양식을 추가하기 위해 사용\r class Meta:\rmodel=User\rwidgets = {\u0026#39;password\u0026#39;:forms.PasswordInput}\rfields = [\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;,\u0026#39;last_name\u0026#39;,\u0026#39;first_name\u0026#39;,\u0026#39;email\u0026#39;]\r#User model에 정의된 username, passwordm last_name, first_name, email을 입력양식으로\r class SigninForm(ModelForm):\rusername = forms.CharField(\rmax_length=20,\rmin_length=6,\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r}\r)\r)\rpassword = forms.CharField(\rmax_length=16,\rmin_length=8,\rwidget=forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\rclass Meta:\rmodel = User\rwidgets = {\u0026#39;password\u0026#39;:forms.PasswordInput}\rfields = [\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;]\r3. urls.py와 views.py 작성 ### urls.py ###\r from django.urls import path, include\rfrom . import views\rapp_name=\u0026#39;accounts\u0026#39;\rurlpatterns = [\rpath(\u0026#39;signup/\u0026#39;, views.signup, name=\u0026#34;signup\u0026#34;),\rpath(\u0026#39;signin/\u0026#39;, views.signin, name=\u0026#34;signin\u0026#34;),\rpath(\u0026#39;signout/\u0026#39;, views.signout, name=\u0026#34;signout\u0026#34;),\rpath(\u0026#39;community/\u0026#39;, include(\u0026#39;community.urls\u0026#39;)),\r]\r### views.py ###\r from django.shortcuts import render, redirect\rfrom django.urls.base import reverse\rfrom django.contrib.auth.models import User\rfrom django.contrib.auth import login, authenticate, logout\r#login은 login처리를 해주며, authenticate는 아이디와 비밀번호가 모두 일치하는 User 객체를 추출\r from .forms import SigninForm, SignupForm\r# Create your views here.\r def signup(request):#역시 GET/POST 방식을 사용하여 구현한다.\r if request.method == \u0026#34;GET\u0026#34;:\rform = SignupForm()\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;accounts/signup.html\u0026#39;, context)\relif request.method == \u0026#34;POST\u0026#34;:\rform = SignupForm(request.POST)\rif form.is_valid():\rif form.cleaned_data[\u0026#39;password\u0026#39;] == form.cleaned_data[\u0026#39;password_confirm\u0026#39;]:\r#cleaned_data는 사용자가 입력한 데이터를 뜻한다.\r #즉 사용자가 입력한 password와 password_check가 맞는지 확인하기위해 작성해주었다.\r new_user = User.objects.create_user(\rform.cleaned_data[\u0026#39;username\u0026#39;],\rform.cleaned_data[\u0026#39;email\u0026#39;],\rform.cleaned_data[\u0026#39;password\u0026#39;]\r)\r#User.object.create_user는 사용자가 입력한 name, email, password를 가지고 아이디를 만든다.\r #바로 .save를 안해주는 이유는 User.object.create를 먼저 해주어야 비밀번호가 암호화되어 저장된다.\r new_user.last_name = form.cleaned_data[\u0026#39;last_name\u0026#39;]\rnew_user.first_name = form.cleaned_data[\u0026#39;first_name\u0026#39;]\r#나머지 입력하지 못한 last_name과, first_name은 따로 지정해준다.\r new_user.save()\rreturn redirect(reverse(\u0026#39;reviews:review_list\u0026#39;))\relse:\rcontext = {\r\u0026#39;form\u0026#39;:form,\r\u0026#39;error\u0026#39;:\u0026#39;비밀번호와 비밀번호 확인이 다릅니다.\u0026#39;\r}\rreturn render(request, \u0026#39;accounts/signup.html\u0026#39;,)\r#password와 password_check가 다를 것을 대비하여 error를 지정해준다.\r else: #form.is_valid()가 아닐 경우, 즉 유효한 값이 들어오지 않았을 경우\r context = {\r\u0026#39;form\u0026#39;:form\r}\rreturn render(request, \u0026#39;accounts/signup.html\u0026#39;, context)\rdef signin(request):\rif request.method == \u0026#34;GET\u0026#34;:\rform = SigninForm()\rcontext = {\r\u0026#39;form\u0026#39;: form,\r}\rreturn render(request, \u0026#39;accounts/signin.html\u0026#39;, context)\relif request.method == \u0026#34;POST\u0026#34;:\rform = SigninForm(request.POST)\rid = request.POST[\u0026#39;username\u0026#39;]\rpw = request.POST[\u0026#39;password\u0026#39;]\ruser = authenticate(username=id, password=pw) # username과 password를 비교, 같으면 해당객체 반환 아니면 none\r if user: # user 값이 있으면\r login(request, user=user) # user값으로 로그인\r return redirect(\u0026#39;reviews:review_list\u0026#39;)\relse:\rcontext = {\r\u0026#39;form\u0026#39; : form,\r\u0026#39;error\u0026#39;: \u0026#39;아이디나 비밀번호가 일치하지 않습니다.\u0026#39;\r}\rreturn render(request, \u0026#39;accounts/signin.html\u0026#39;, context)\rdef signout(request):\rlogout(request)\rreturn redirect(\u0026#39;reviews:review_list\u0026#39;)\r4. 로그인 관련 html을 작성  bootstrap을 사용하여 네비게이션 바에 로그인 상태에 따라 다르게 표시함\n \u0026lt;!-- base.html 일부 --\u0026gt;\r\u0026lt;div class=\u0026#34;collapse navbar-collapse justify-content-between\u0026#34; id=\u0026#34;navbarNav\u0026#34;\u0026gt;\r\u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r{% if request.resolver_match.url_name == \u0026#39;create\u0026#39; %}\r\u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:review_list\u0026#39; %}\u0026#34;\u0026gt;List\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item active\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:create\u0026#39; %}\u0026#34;\u0026gt;New\u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;nav-item active\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:review_list\u0026#39; %}\u0026#34;\u0026gt;List\u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:create\u0026#39; %}\u0026#34;\u0026gt;New\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r{% endif %}\r\u0026lt;/ul\u0026gt;\r\u0026lt;div class=\u0026#34;d-flex flex-row\u0026#34;\u0026gt;\r{% if user.is_authenticated %}\u0026lt;!-- login 된 상태일 경우 --\u0026gt;\r\u0026lt;div class=\u0026#34;p-2\u0026#34;\u0026gt;{{ user.username }}님 환영합니다.\u0026lt;/div\u0026gt;\r\u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item dropdown\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link dropdown-toggle\u0026#34; href=\u0026#34;#\u0026#34; id=\u0026#34;navbarDropdownMenuLink\u0026#34; role=\u0026#34;button\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34; aria-haspopup=\u0026#34;true\u0026#34; aria-expanded=\u0026#34;false\u0026#34;\u0026gt;\rSign out\r\u0026lt;/a\u0026gt;\r\u0026lt;div class=\u0026#34;dropdown-menu\u0026#34; aria-labelledby=\u0026#34;navbarDropdownMenuLink\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signout\u0026#39; %}\u0026#34;\u0026gt;Sign Out\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r{% else %}\r\u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item dropdown\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link dropdown-toggle\u0026#34; href=\u0026#34;#\u0026#34; id=\u0026#34;navbarDropdownMenuLink\u0026#34; role=\u0026#34;button\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34; aria-haspopup=\u0026#34;true\u0026#34; aria-expanded=\u0026#34;false\u0026#34;\u0026gt;\rSign In\r\u0026lt;/a\u0026gt;\r\u0026lt;div class=\u0026#34;dropdown-menu\u0026#34; aria-labelledby=\u0026#34;navbarDropdownMenuLink\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signup\u0026#39; %}\u0026#34;\u0026gt;Sign Up\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signin\u0026#39; %}\u0026#34;\u0026gt;Sign In\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r{% endif %}\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r5. singup.html 작성 \u0026lt;!-- signup.html --\u0026gt;\r{% extends \u0026#39;base.html\u0026#39; %}\r{% load static %}\r{% block body %}\r{% if error %}\r\u0026lt;h3 class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/h3\u0026gt;\r{% endif %}\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r\u0026lt;div class=\u0026#34;form-row mb-3 mt-5\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.username }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.password }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password_confirm\u0026#34;\u0026gt;Password Confirm\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.password_confirm }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;last_name\u0026#34;\u0026gt;Last name\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.last_name }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;last_name\u0026#34;\u0026gt;First name\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.first_name }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;email\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.email }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-info col-12\u0026#34;\u0026gt;SIGN UP\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;a href=\u0026#34;/community/\u0026#34; class=\u0026#34;btn btn-secondary col-12\u0026#34;\u0026gt;CANCEL\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r{% endblock %}\r6. signin.html 작성 \u0026lt;!-- signin.html --\u0026gt;\r{% extends \u0026#39;base.html\u0026#39; %}\r{% load static %}\r{% block body %}\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r\u0026lt;div class=\u0026#34;form-row mb-3 mt-5\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r{% if error %}\r\u0026lt;div class=\u0026#34;d-flex flex-row\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;username\u0026#34; class=\u0026#34;mr-3\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r\u0026lt;p class=\u0026#34;text-danger p-0 m-0\u0026#34;\u0026gt;{{ error }}\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r{% else %}\r\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r{% endif %}\r\u0026lt;div\u0026gt;{{ form.username }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.password }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-info col-12\u0026#34;\u0026gt;SIGN IN\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row justify-content-between\u0026#34;\u0026gt;\r\u0026lt;a href=\u0026#34;/accounts/signup/\u0026#34; class=\u0026#34;btn btn-info col-5\u0026#34;\u0026gt;SIGN UP\u0026lt;/a\u0026gt;\r\u0026lt;a href=\u0026#34;/community/\u0026#34; class=\u0026#34;btn btn-secondary col-5\u0026#34;\u0026gt;CANCEL\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r{% endblock %}\r7. 로그인 페이지를 modal로 변경하기  base.html에서 include를 사용하여 modal 부분을 적은 html을 불러온다.  \u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item dropdown\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link dropdown-toggle\u0026#34; href=\u0026#34;#\u0026#34; id=\u0026#34;navbarDropdownMenuLink\u0026#34; role=\u0026#34;button\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34; aria-haspopup=\u0026#34;true\u0026#34; aria-expanded=\u0026#34;false\u0026#34;\u0026gt;\rSign Up / Sign In\r\u0026lt;/a\u0026gt;\r\u0026lt;div class=\u0026#34;dropdown-menu\u0026#34; aria-labelledby=\u0026#34;navbarDropdownMenuLink\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signup\u0026#39; %}\u0026#34;\u0026gt;Sign Up\u0026lt;/a\u0026gt;\r\u0026lt;a type=\u0026#34;button\u0026#34; class=\u0026#34;dropdown-item\u0026#34; data-toggle=\u0026#34;modal\u0026#34; data-target=\u0026#34;#SIGNIN\u0026#34;\u0026gt;\rSign In\r\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r{% endif %}\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r{% include \u0026#39;modal.html\u0026#39; %}\r modal.html을 작성 후 form action을 통해 만들어 놓은 sigin으로 보내어 로그인  {% load static %}\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;SIGN IN\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;!-- Modal --\u0026gt;\r\u0026lt;div class=\u0026#34;modal fade\u0026#34; id=\u0026#34;SIGNIN\u0026#34; tabindex=\u0026#34;-1\u0026#34; role=\u0026#34;dialog\u0026#34; aria-labelledby=\u0026#34;SIGNINTitle\u0026#34; aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-dialog modal-dialog-centered\u0026#34; role=\u0026#34;document\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-content\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-header\u0026#34;\u0026gt;\r\u0026lt;h5 class=\u0026#34;modal-title\u0026#34; id=\u0026#34;SIGNINTitle\u0026#34;\u0026gt;SIGN IN\u0026lt;/h5\u0026gt;\r\u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;close\u0026#34; data-dismiss=\u0026#34;modal\u0026#34; aria-label=\u0026#34;Close\u0026#34;\u0026gt;\r\u0026lt;span aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\u0026amp;times;\u0026lt;/span\u0026gt;\r\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;modal-body\u0026#34;\u0026gt;\r\u0026lt;form action=\u0026#34;{% url \u0026#39;accounts:signin\u0026#39; %}\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r\u0026lt;div class=\u0026#34;form-row mb-3 mt-5\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r{% if error %}\r\u0026lt;div class=\u0026#34;d-flex flex-row\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;username\u0026#34; class=\u0026#34;mr-3\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r\u0026lt;p class=\u0026#34;text-danger p-0 m-0\u0026#34;\u0026gt;{{ error }}\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r{% else %}\r\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r{% endif %}\r\u0026lt;div\u0026gt;\u0026lt;input type=\u0026#39;text\u0026#39; id=\u0026#39;username\u0026#39; name=\u0026#34;username\u0026#34; class=\u0026#34;form-control\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-6\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;\u0026lt;input type=\u0026#39;password\u0026#39; id=\u0026#39;password\u0026#39; name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;modal-footer mt-5\u0026#34;\u0026gt;\r\u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-secondary\u0026#34; data-dismiss=\u0026#34;modal\u0026#34;\u0026gt;Close\u0026lt;/button\u0026gt;\r\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Sign In\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r참고   내가 여기서 사용한 것은 django에서 기본으로 제공하는 user 모델만 사용했음. 하지만 django에서는 UserCreationForm 이라는 ModelForm도 제공함. 다만, UserCreationForm은 username과 password1, 2만 입력받음.    Django 기초 Django CRUD Django Paginator Django User(2)  "
},
{
	"uri": "https://dongyeopgu.github.io/til.html",
	"title": "TIL",
	"tags": [],
	"description": "",
	"content": "Today I Learned - 단순 기록  2020.04.13 이전에 TIL로 파일을 Github에 올렸지만 Private 폴더.\n문서화를 듬성듬성한 상태로 파일만 있는것이 대부분.\n대부분의 TIL은 알고리즘이기 때문에 Algorithm문제풀이에 올라가있음.\n그렇기에 4월 13일 부터 매일 올리는 것이 목표.\n "
},
{
	"uri": "https://dongyeopgu.github.io/cont/django_change_user.html",
	"title": "Django User (2)",
	"tags": ["django", "sign in", "sign out", "sign up"],
	"description": "",
	"content": "User 관리(change, customizing)   customizing 방법은 여러가지가 있지만, 앞서 사용했던 방법과 다르게 여기서는 AbstractUser를 상속 받아서 User를 customizing후 사용함\nUserChangeForm도 마찬가지로 ChangeForm을 상속받아 customizing 해서 사용함\nbootstrap을 사용하기 위해 widget에 attrs도 추가\n 1. models.py에서 AbstractUser를 상속 from django.db import models from django.contrib.auth.models import AbstractUser # AbstractUser를 가져옴 # Create your models here. class User(AbstractUser): # User 모델을 AbstractUser 상속받음 # 추가할 내용을 작성 Korean_name = models.CharField(max_length=20, blank=True) address = models.CharField(max_length=100, blank=True) phone_number = models.CharField(max_length=11, blank=True) 2. settings.py 에서 AUTH_USER_MODEL 추가(공식문서 참조) # settings.py 에 AUTH_USER_MODEL = \u0026#39;app 이름.User\u0026#39; AUTH_USER_MODEL = \u0026#39;accounts.User\u0026#39; 3. bootstrap을 위한 class: form-control 추가를 위하여 forms.py 작성 from django.contrib.auth.forms import UserCreationForm # 기본 제공하는 modelForm을 사용하기 위해 from django import forms from .models import User\t# 커스터마이징한 User 모델을 불러옴 from django.contrib.auth.forms import UserChangeForm # User 정보를 수정하기 위해 from django.contrib.auth import get_user_model\t# User 정보를 수정할 때 정보를 가져오기 위해 class SignupForm(UserCreationForm):\t# 상속받아 사용할 클래스 선언 def __init__(self, *args, **kwargs):\t# init을 통해 존재하던 필드의 정보를 수정 super().__init__(*args, **kwargs) class_update_fields = [\u0026#39;password1\u0026#39;, \u0026#39;password2\u0026#39;] for field_name in class_update_fields: self.fields[field_name].widget.attrs.update({ \u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39; }) class Meta:\t# Meta 클래스를 통해 새로 추가한 필드의 attrs에서 form-control 추가 model = User\t# Bootstrap을 사용하기 위해서 추가했음 fields = ( \u0026#39;username\u0026#39;, \u0026#39;Korean_name\u0026#39;, \u0026#39;address\u0026#39;, \u0026#39;phone_number\u0026#39;, ) widgets = { \u0026#39;username\u0026#39;: forms.TextInput( attrs={ \u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;, } ), \u0026#39;Korean_name\u0026#39;: forms.TextInput( attrs={ \u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;, } ), \u0026#39;address\u0026#39;: forms.TextInput( attrs={ \u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;, } ), \u0026#39;phone_number\u0026#39;: forms.TextInput( attrs={ \u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;, } ) } class CustomUserChangeForm(UserChangeForm):\t# User 정보를 update하기 위하여  class Meta: model = get_user_model() fields = [\u0026#39;username\u0026#39;, \u0026#39;Korean_name\u0026#39;, \u0026#39;address\u0026#39;, \u0026#39;phone_number\u0026#39;]  메타 클래스에서 password widget을 설정해도 전혀 변화가 없음. 공식 문서에 따르면 ModelForm 클래스에서 명시적으로 선언된 필드는 메타 클래스에서 설정된 속성의 영향을 받지 않는다고 함.\n 4. Migration 실행   model의 변경사항이 있기 때문에 migration을 진행한다\n$ python manage.py makemigrations $ python manage.py migrate   5. views.py와 urls.py에 Update를 추가 #### views.py from django.shortcuts import render, redirect from .forms import CustomUserChangeForm # customizing 한 changeform을 불러옴 def update(request, pk): # 각각의 유저 정보를 얻고 수정하기 위해 pk값을 받아옴 if request.method == \u0026#39;POST\u0026#39;: form = CustomUserChangeForm(request.POST, instance=request.user) # instance를 가져와야 기존에 있던 정보를 토대로 수정할 수 있음, 없을경우 빈칸으로 시작됨 if form.is_valid(): form.save() return redirect(\u0026#39;accounts:index\u0026#39;) # 수정을 완료하면 저장 후 인덱스 페이지로 redirect else: form = CustomUserChangeForm(instance=request.user) context = { \u0026#39;form\u0026#39;: form } return render(request, \u0026#39;accounts/update.html\u0026#39;, context)  Django 기초 Django CRUD Django Paginator Django User(1)  "
},
{
	"uri": "https://dongyeopgu.github.io/hugo-blog.html",
	"title": "Hugo Blog",
	"tags": ["hugo", "hugo-theme-learn", "blog"],
	"description": "",
	"content": "Hugo로 Github Blog 만들기  구글링을 하다보면 Github Page에 만든 블로그를 많이 접했고, 만들면 좋겠다고 생각.\nhugo를 사용한 이유는 Jekyll는 hugo에 비해 반응속도가 느리다는 글을 보았고 직접 느끼기에도 느렸기 때문. 이 글 참고했음.\nMarkdown작성을 연습할 겸, 좋은 연습 대상이라고 판단.\n 현재, 이런 이유로 Hugo를 사용하여 차근차근 Blog를 만들어 나가는 중.\n"
},
{
	"uri": "https://dongyeopgu.github.io/tags/django.html",
	"title": "django",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/",
	"title": "Dongyeop&#39;s Blog",
	"tags": [],
	"description": "",
	"content": "여러가지 해보는 중 Algorithm   SWEA D3 SWEA D4 백준   Django   Django 기초 Django CRUD Django Paginator Django User(1) Django User(2)   Hugo-blog   Hugo로 Blog만들기   "
},
{
	"uri": "https://dongyeopgu.github.io/tags/sign-in.html",
	"title": "sign in",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/sign-out.html",
	"title": "sign out",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/sign-up.html",
	"title": "sign up",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/blog.html",
	"title": "blog",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/hugo.html",
	"title": "hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/hugo-blog/hugo-blog-start.html",
	"title": "Hugo를 이용해 Blog 만들기",
	"tags": ["hugo", "blog"],
	"description": "",
	"content": " 설치 및 실행은 모두 Windows 10에서 함.\n 1. Hugo 설치 및 Theme 정하기  나는 hugo github에서 직접 hugo_0.69.0_Windows-64bit.zip를 다운 받아 사용했다. 다운 받은 후 압축을 풀어 C:\\Hugo\\bin 을 만들어 그 안에 넣어주었고, 시스템 환경 변수에서 Path에 C:\\Hugo\\bin을 추가했다. 그리고 사용할 테마를 선택하며(여기) $ hugo new site 폴더 이름으로 사용할 폴더를 만들었다. github에서 두개의 repo를 만들었다. (하나는 .github.io 로, 하나는 hugo 관련 소스파일 등과 같은 것을 포함할 (위에서 만든 폴더와 동일하게, 나는 myblog라고 함)) $ git submodule add https://github.com/matcornic/hugo-theme-learn.git theme/hugo-theme-learn 으로 사용할 테마를 가져옴(clone으로도 가능)  2. Git 과 연동시키기  C:\\Hugo\\myblog로 이동하여 bash를 실행시켜 $ git init 후 $ git remote add origin https://github.com/DongyeopGu/myblog.git 으로 remote 등록함 만든 github.io를 submodule로 만들기 위해 $ git submodule add http://github.com/DongyeopGu/dongyeopgu.github.io.git public 타이핑. C:\\Hugo\\myblog에 public폴더가 생김  3. 자동으로 업로드 해주는 쉘 작성하기   여기에 쉘 스크립트 작성 법이 나와 있지만, 여기를 따라 쉘 스크립트를 작성. 파일 이름은 deploy.sh\n#!/bin/bash  echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34; # Build the project. hugo -t hugo-theme-learn # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; # Push source and build repos. git push origin master # Come Back up to the Project Root cd .. # blog 저장소 Commit \u0026amp; Push git add . msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; git push origin master   4. 블로그 글 작성하기   hugo theme의 Demo와 Homepage에 작성 법이 나와 있어서 그걸 참고해서 작성함.\n  글을 작성하면서 댓글 기능도 넣고 싶어짐.\n  5. 댓글 기능 넣기  disqus를 이용하는 방법이 공식 문서에 나와 있기에 따라서 만들었음. C:\\Hugo\\myblog\\config.toml에서 disqusShortname = \u0026quot;disqus username\u0026quot;을 추가하고 C:\\Hugo\\myblog\\layouts\\partials에 필요한 html을 넣었음.(Learn 테마의 경우 custom-comments.html과 disqus.html) disqus.html의 경우 disqus 홈페이지에서 알려주는대로 복사, 붙여넣기 했음.  중간에 수정한 것들   github에 push를 할 때 계속 다시 로그인을 해야했기에 Personal Access Token 발급받아 이용. 테마를 정할 때 몇 개를 간단하게 사용해 보며 hugo-extended가 필요해 extended 다운 받았음.  "
},
{
	"uri": "https://dongyeopgu.github.io/tags/hugo-theme-learn.html",
	"title": "hugo-theme-learn",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/20.04.13.html",
	"title": "20.04.13",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/20.04.14.html",
	"title": "20.04.14",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/20.04.15.html",
	"title": "20.04.15",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/til/20.04.13.html",
	"title": "2020.04.13 다시 기록 시작",
	"tags": ["TIL", "20.04.13", "4월"],
	"description": "",
	"content": "  오늘 배운 것들   Django에서 기본 제공하는 User 모델을 이용\n  이를 이용하여 회원가입, 정보 수정하는 방법\n  회원가입시 Django에서 제공하는 UserCreationForm을 사용\n UserCreationForm은 기본적으로 username과 password1, 2를 입력받음      "
},
{
	"uri": "https://dongyeopgu.github.io/til/20.04.14.html",
	"title": "2020.04.14",
	"tags": ["TIL", "20.04.14", "4월"],
	"description": "",
	"content": "오늘 배운 것들  Django  User 모델을 사용하는 것보다 get_user_model 메서드를 사용하는 것을 추천 get_user_model이 더 유연하게 사용할 수 있음. 커스터마이징을 했을 경우에도 쉽게 사용가능 로그인을위해 AuthenticationForm을 사용 회원 탈퇴는 views.py에서 request.user.delete() 이용 Form / ModelForm  Form 제공 GET  context를 넘겨줌   데이터 양식 처리 POST  양식데이터(request.POST) \u0026gt; ModelForm으로 넘겨줌 그 후, 검증       HTTP는 connectless, stateless 그렇기 때문에 정보를 쿠키에 저장  User가 서버로 요청을 보냄 서버가 쿠키와 같이 응답을 보내줌 User가 서버로 요청을 보낼 때 쿠키와 함께 보내줌    "
},
{
	"uri": "https://dongyeopgu.github.io/til/20.04.15.html",
	"title": "2020.04.15",
	"tags": ["TIL", "20.04.15", "4월"],
	"description": "",
	"content": "{{%expand* \u0026ldquo;오늘 공부한 것들 \u0026amp; 생각한 것\u0026rdquo;/%}} - 생각  간단한 웹 서비스 ? 만들며, 배우고 공부한 것을 활용해보자 회원가입을 안해도 이용가능 하도록 (회원가입의 귀찮음\u0026hellip;) 자세한건 프로젝트 repo를 따로 만들어 관리해보자는 생각  - 공부한것  Django QuerySet API 관련. (참고 : Django 공식문서) - 생각한 웹 페이지에서 필요한 것을 넣기 위해(어디서 관련 정보를 봐야하는지 기록정도, 다 외우는것은 힘들기에) Image를 넣기 위한 ImageField 관련 (Django 공식문서)  {{%/* /expand%}}\n"
},
{
	"uri": "https://dongyeopgu.github.io/tags/4%EC%9B%94.html",
	"title": "4월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/baekjoon.html",
	"title": "baekjoon",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/baekjoon/baekjoon.html",
	"title": "BAEKJOON - Python",
	"tags": ["baekjoon", "백준"],
	"description": "",
	"content": "14890. 경사로 def slope(i, c):\rglobal ans\rcnt = 1\rfor j in range(0, N-1):\rd = a[i][j+1]-a[i][j] if c else a[j+1][i]-a[j][i]\rif d == 0:\rcnt += 1\relif d == 1 and cnt \u0026gt;= L:\rcnt = 1\relif d == -1 and cnt \u0026gt;= 0:\rcnt = -L+1\relse:\rreturn\rif cnt \u0026gt;= 0:\rans += 1\rdef solve():\rfor i in range(N):\rslope(i, 1)\rslope(i, 0)\rprint(ans)\rN, L = map(int, input().split())\ra = [list(map(int, input().split())) for _ in range(N)]\rans = 0\rsolve()\r14503. 로봇 청소기 dt = [(-1,0),(0,1),(1,0),(0,-1)] # 북, 동, 남, 서\r def leftdir(d): # 왼쪽 탐색 index 만들기 위해\r if d == 0:\rreturn 3\relse:\rreturn d - 1\rn, m = map(int,input().split())\rr, c, d = map(int, input().split())\rroom = [list(map(int, input().split()))for _ in range(n)]\rcheck = 0\rx = r\ry = c\rwhile True:\rd = d % 4\rif check == 4: # 4가지 방향 탐색 후\r bx = x - dt[d][0] # 뒤로 한칸 가서\r by = y - dt[d][1] if room[bx][by] == 1: # 벽이면 break\r break\relse: x = bx\ry = by\rcheck = 0\rif room[x][y] == 0: # 먼저 청소기 놓은곳 2로 변경\r room[x][y] = 2\rnd = leftdir(d) # 왼쪽 탐색위한 index변경\r nx = x + dt[nd][0]\rny = y + dt[nd][1]\rif room[nx][ny] == 0: # 왼쪽이 0 이면 다시 청소시작\r x = nx\ry = ny\rd = leftdir(d)\rcheck = 0\relse: # 왼쪽 청소거나 벽이면 다시  d = leftdir(d)\rcheck += 1\rcnt = 0\rfor i in range(n):\rfor j in range(m):\rif room[i][j] == 2:\rcnt += 1\rprint(cnt)\r12100. 2048(easy) import copy\rdef rotation(a):\rfor i in range(n):\rfor j in range(i):\ra[i][j], a[j][i] = a[j][i], a[i][j]\rreturn a\rdef rev(a):\rfor i in range(n):\ra[i] = a[i][::-1]\rreturn a\rdef left(a): for i in range(n):\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rfor j in range(1,n):\rif a[i][j-1] == a[i][j]:\ra[i][j-1] = a[i][j-1]*2\ra[i][j] = 0\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rreturn a\rdef right(a):\rrev(a)\rleft(a)\rreturn rev(a)\rdef up(a):\rrotation(a)\rleft(a)\rreturn rotation(a)\rdef down(a):\rrotation(a)\rright(a)\rreturn rotation(a)\rdef my_max(a):\rmax_v = 0\rfor i in range(n):\rfor j in range(n):\rif a[i][j] \u0026gt; max_v:\rmax_v = a[i][j]\rreturn max_v\rdef solv(cnt, a):\rglobal result\rif cnt == 5:\rresult = max(result, my_max(a))\rif cnt\u0026lt;5:\rcopy_a = copy.deepcopy(a)\rup(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rdown(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rleft(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rright(copy_a)\rsolv(cnt+1, copy_a)\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rresult = 0\rsolv(0,a)\rprint(result)\r1012. 유기농 배추 def DFS(y,x):\rdy = [0,1,0,-1]\rdx = [1,0,-1,0]\rboard[y][x] = 0\rfor i in range(4):\rny = y + dy[i]\rnx = x + dx[i]\rif ny \u0026lt; 0 or ny \u0026gt;= N or nx \u0026lt; 0 or nx \u0026gt;= M:\rcontinue\rif board[ny][nx]:\rDFS(ny,nx)\rfor _ in range(int(input())):\rM, N, K = map(int, input().split())\rboard = [[0 for _ in range(M)] for _ in range(N)]\rfor _ in range(K):\rX, Y = map(int, input().split())\rboard[Y][X] = 1\rcnt = 0\rfor i in range(N):\rfor j in range(M):\rif not board[i][j]:\rcontinue\rcnt += 1\rDFS(i,j)\rprint(cnt)\r1244. 스위치 켜고 끄기 n = int(input()) #스위치개수\r switch = list(map(int, input().split()))\rm = int(input()) #사람수\r for _ in range(m):\rstudent = list(map(int, input().split()))\rif student[0] == 1:\rk = student[1] - 1\rwhile k \u0026lt; n:\rswitch[k] = 1 - switch[k]\rk += student[1]\relse:\rj = student[1] - 1\rswitch[j] = 1 - switch[j]\rfor a in range(1,n-1):\rif j - a \u0026gt;= 0 and j + a \u0026lt; n and switch[j - a] == switch[j + a]:\rswitch[j - a] = 1 - switch[j - a]\rswitch[j + a] = 1 - switch[j + a]\relse:\rbreak\rfor i, e in enumerate(switch):\rif i and not (i%20):\rprint()\rprint(e, end=\u0026#39; \u0026#39;)\r2583. 영역구하기 from sys import*\rsetrecursionlimit(10**6)\rdt = ([1, 0], [-1, 0], [0, 1], [0, -1])\rdef solv(y,x):\rglobal cnt\rvisit[y][x] = 1\rcnt += 1\rfor i in range(4):\rnx = x + dt[i][0]\rny = y + dt[i][1]\rif 0 \u0026lt;= nx \u0026lt; n and 0 \u0026lt;= ny \u0026lt; m:\rif arr[ny][nx] == 0 and visit[ny][nx]==0:\rsolv(ny,nx)\rm, n, k = map(int, input().split())\rarr = [[0 for _ in range(n)]for _ in range(m)]\rfor i in range(k):\ra, b, c, d = map(int, input().split())\rfor x in range(a,c):\rfor y in range(b,d):\rarr[y][x] = 1\rarr = list(reversed(arr))\rvisit = [[0 for _ in range(n)]for _ in range(m)]\rresult = []\rfor i in range(m):\rfor j in range(n):\rif arr[i][j] == 0 and visit[i][j] == 0:\rcnt = 0\rsolv(i,j)\rresult.append(cnt)\rprint(len(result))\rprint(\u0026#39; \u0026#39;.join(map(str, sorted(result))))\r2589. 보물섬 dt = [(1,0), (-1,0), (0,1), (0,-1)]\rdef xy(i,j):\rreturn 0 \u0026lt;= i \u0026lt; row and 0 \u0026lt;= j \u0026lt; col and Map[i][j] == \u0026#39;L\u0026#39;\rdef solv(x,y):\rq.append([x,y])\rdist = [[0 for _ in range(col)]for _ in range(row)]\rdist[x][y] = 1\rresult = 0\rwhile q:\ri, j = q.pop(0)\rfor idx in dt:\rnx = i + idx[0]\rny = j + idx[1]\rif xy(nx,ny) and dist[nx][ny] == 0:\rdist[nx][ny] = dist[i][j] + 1\rresult = max(result, dist[nx][ny]) q.append([nx,ny])\rreturn result - 1\rrow, col = map(int, input().split())\rMap = [list(map(str, input()))for _ in range(row)]\rvisit = [[0 for _ in range(col)]for _ in range(row)]\rq = []\rcnt = 0\rfor i in range(row):\rfor j in range(col):\rif Map[i][j] == \u0026#39;L\u0026#39;:\rcnt = max(cnt, solv(i,j))\rprint(cnt)\r"
},
{
	"uri": "https://dongyeopgu.github.io/tags/create.html",
	"title": "create",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/crud.html",
	"title": "crud",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/d3.html",
	"title": "D3",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/d4.html",
	"title": "D4",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/delete.html",
	"title": "delete",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/pagination.html",
	"title": "pagination",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/paginator.html",
	"title": "paginator",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/read.html",
	"title": "read",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/swea.html",
	"title": "SWEA",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d3/swea-d3.html",
	"title": "SWEA - Python - D3",
	"tags": ["SWEA", "D3"],
	"description": "",
	"content": "1240. 단순 2진 암호코드 for t in range(int(input())):\rn = int(input())\rarr = [0]*n\rcnt = 0\ra = list(input().split())\rfor i in a:\rflag = 0\rfor j in i:\rif not flag and j.isupper():\rflag = 1\relif j.isdigit() or (flag and j.isupper()):\rflag = 0\rbreak\rif flag:\rarr[cnt] += 1\rif (\u0026#39;.\u0026#39; in i) or (\u0026#39;!\u0026#39; in i) or (\u0026#39;?\u0026#39; in i):\rcnt += 1\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr))}\u0026#34;)\r1289. 원재의 메모리 복구 for test_case in range(int(input())):\rN = list(map(int, \u0026#39; \u0026#39;.join(input().split())))\rcnt = 0\ra = 0\rif N[0] == 1:\rcnt = 1\relse:\rcnt = 0\rfor i in range(1,len(N)):\rif N[i] != N[i-1]:\rcnt += 1\relse:\rcnt += 0\rprint(f\u0026#34;#{test_case + 1} {cnt}\u0026#34;)\r1491. 원재의 벽 꾸미기 for test_case in range(int(input())):\rN, A, B = map(int, input().split())\ra = []\rfor R in range(1, N):\rfor C in range(1, N):\rif R * C \u0026lt;= N:\rif A*abs(R-C) + B*(N-R*C) \u0026gt;= 0:\ra.append(A*abs(R-C) + B*(N-R*C))\rprint(f\u0026#34;#{test_case} {min(a)}\u0026#34;)\r1493. 수의 새로운 연산 for test_case in range(int(input())):\rp, q = map(int, input().split())\rmapping = [[0 for i in range(300)]for j in range(300)]\ra = 1\rp_x = 0\rp_y = 0\rq_x = 0\rq_y = 0\rfor i in range(599):\rfor j in range(300):\rif 300 \u0026gt; i - j \u0026gt;= 0:\rmapping[i-j][j] = a\ra += 1\rfor i in range(300):\rif p in mapping[i]:\rp_y = mapping[i].index(p)\rp_x = i\rfor i in range(300):\rif q in mapping[i]:\rq_y = mapping[i].index(q)\rq_x = i\rresult = mapping[p_x+q_x+1][p_y+q_y+1]\rprint(f\u0026#34;#{test_case + 1} {result}\u0026#34;)\r1860. 진기의 최고급 붕어빵 for t in range(int(input())):\rN,M,K=map(int,input().split())\ra=list(map(int,input().split()))\rfor i in range(len(a)):\rif sorted(a)[i]//M*K\u0026lt;i+1:\rresult=\u0026#34;Impossible\u0026#34;\rbreak\relse:\rresult=\u0026#34;Possible\u0026#34;\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r1873. 상호의 배틀필드 for t in range(int(input())):\rH, W = map(int, input().split())\rmove_symbol = [\u0026#34;^\u0026#34;, \u0026#34;v\u0026#34;, \u0026#34;\u0026lt;\u0026#34;, \u0026#34;\u0026gt;\u0026#34;]\rmove_command = [\u0026#34;U\u0026#34;, \u0026#34;D\u0026#34;, \u0026#34;L\u0026#34;, \u0026#34;R\u0026#34;, \u0026#34;S\u0026#34;]\rmove_dir = [[-1, 0], [1, 0], [0, -1], [0, 1]]\rfield = []\rstartpoint = [0, 0, 0]\rfor i in range(H):\ra = list(input())\rfield.append(a)\rfor j in range(len(a)):\rif a[j] in move_symbol:\rstartpoint[0] = i\rstartpoint[1] = j\rstartpoint[2] = move_symbol.index(a[j])\rfield[i][j] = \u0026#39;.\u0026#39;\rN = int(input())\rcommandline = list(input())\rfor i in commandline:\rmove_index = move_command.index(i)\rif move_index \u0026lt; 4:\ri_idx = startpoint[0] + move_dir[move_index][0]\rj_idx = startpoint[1] + move_dir[move_index][1]\rif 0 \u0026lt;= i_idx \u0026lt; H and 0 \u0026lt;= j_idx \u0026lt; W:\rif field[i_idx][j_idx] == \u0026#39;.\u0026#39;:\rstartpoint[0] = i_idx\rstartpoint[1] = j_idx\rstartpoint[2] = move_index\relse:\rn = startpoint[0]\rm = startpoint[1]\rwhile True:\rn += move_dir[startpoint[2]][0]\rm += move_dir[startpoint[2]][1]\rif 0 \u0026lt;= n \u0026lt; H and 0 \u0026lt;= m \u0026lt; W:\rif field[n][m] == \u0026#34;#\u0026#34;:\rbreak\relif field[n][m] == \u0026#34;*\u0026#34;:\rfield[n][m] = \u0026#34;.\u0026#34;\rbreak\relse:\rbreak\rfield[startpoint[0]][startpoint[1]] = move_symbol[startpoint[2]]\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rfor i in range(H):\rprint(f\u0026#34;{\u0026#39;\u0026#39;.join(field[i])}\u0026#34;)\r2805. 농작물 수확하기 for t in range(int(input())):\rN = int(input())\rfarm = [list(map(int, input()))for i in range(N)]\rbase_sum = sum(farm[N//2])\rfor i in range(N//2):\rbase_sum += sum(farm[i][N//2-i:N//2+i+1])\rfor i in range(N//2+1,N):\rbase_sum += sum(farm[i][i-N//2:N-(i-N//2)])\rprint(f\u0026#34;#{t+1} {base_sum}\u0026#34;)\r2806. N-Queen def placeQueen(queen_pos):\rcnt = 0\rn = len(queen_pos)\rif n == N:\rreturn 1\rfor i in range(N):\rfor j in range(n):\rif i == queen_pos[j]:\rbreak\rif n - j == i - queen_pos[j]:\rbreak\rif n - j == queen_pos[j] - i:\rbreak\relse:\rcnt += placeQueen(queen_pos + [i])\rreturn cnt\rfor t in range(int(input())):\rN = int(input())\rprint(f\u0026#34;#{t+1} {placeQueen([])}\u0026#34;)\r2814. 최장 경로 def dfs(a,b):\rvisit[a] = 1\rresult.append(b)\rfor i in node[a]:\rif visit[i] == 0:\rdfs(i,b+1)\rvisit[i] = 0\rfor t in range(int(input())):\rn, m = map(int, input().split())\rnode = dict()\rfor i in range(1,n+1):\rnode[i] = []\rfor i in range(m):\ra, b = map(int, input().split())\rnode[a].append(b)\rnode[b].append(a)\rresult = []\rfor i in range(1,n+1):\rvisit = [0] * (n+1)\rc = 1\rdfs(i,c)\rresult.append(c)\rprint(f\u0026#34;#{t+1} {max(result)}\u0026#34;)\r2817. 부분 수열의 합 for t in range(int(input())):\rN, K = map(int, input().split())\ra = list(map(int, input().split()))\rn = len(a)\rb = []\rresult = 0\rcnt = 0\rfor i in range(1 \u0026lt;\u0026lt; n):\rfor j in range(n+1):\rif i \u0026amp; (1 \u0026lt;\u0026lt; j):\rresult += a[j]\rif result\u0026gt;K:\rcontinue\rif result == K:\rcnt += 1\rresult=0\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r2948. 문자열 교집합 for t in range(int(input())):\rN, M = map(int,input().split())\rset_1 = set(input().split())\rset_2 = set(input().split())\rresult = set_1\u0026amp;set_2\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r3032. 홍준이의 숫자 놀이 def gcd(a, b):\rx,y, u,v = 0,1, 1,0\rwhile a != 0:\rq, r = b//a, b%a\rm, n = x-u*q, y-v*q\rb,a, x,y, u,v = a,r, u,v, m,n\rreturn [x, y]\rfor t in range(int(input())):\rA, B = map(int, input().split())\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, gcd(A,B)))}\u0026#34;)\r3131. 100만 이하의 모든 소수 def prime(n):\ra = [False, False] + [True] * (n - 1) for k in range(2, int(n ** 0.5 + 1.5)):\rif a[k]: a[k*2::k] = [False] * ((n - k) // k) return [x for x in range(n+1) if a[x]]\rprint(\u0026#39; \u0026#39;.join(map(str, prime(10**6))))\r3142. 영준이와 신비한 뿔의 숲 for t in range(int(input())):\rn, m = map(int, input().split())\rx = n - m\ry = 2*m - n\rprint(f\u0026#34;#{t+1} {y} {x}\u0026#34;)\r3233. 정삼각현 분할 for t in range(int(input())):\rn, m = map(int, input().split())\ra = n**2//m**2\rprint(f\u0026#34;#{t+1} {a}\u0026#34;)\r3260. 두 수의 덧셈 for t in range(int(input())):\rN = int(input())\rfarm = [list(map(int, input()))for i in range(N)]\rbase_sum = sum(farm[N//2])\rfor i in range(N//2):\rbase_sum += sum(farm[i][N//2-i:N//2+i+1])\rfor i in range(N//2+1,N):\rbase_sum += sum(farm[i][i-N//2:N-(i-N//2)])\rprint(f\u0026#34;#{t+1} {base_sum}\u0026#34;)\r3304. 최장 공통 부분 def lcs(a,b):\rarr = [[0 for _ in range(len(b)+2)]for _ in range(len(a)+2)]\rfor i in range(1,len(a)+1):\rfor j in range(1,len(b)+1):\rif a[i-1] == b[j-1]:\rarr[i][j] = arr[i-1][j-1]+1\relse:\rarr[i][j] = max(arr[i-1][j],arr[i][j-1])\rreturn arr[len(a)][len(b)]\rfor t in range(int(input())):\ra, b = map(str, input().split())\rprint(f\u0026#34;#{t+1} {lcs(a,b)}\u0026#34;)\r3307. 최장 증가 부분 def lis(a):\rd = [0] * (N)\rfor i in range(1,N): for j in range(i):\rif a[i] \u0026gt; a[j]:\rd[i] = max(d[i],d[j]+1)\rreturn max(d)\rfor t in range(int(input())):\rN = int(input())\ra_list = list(map(int, input().split()))\rprint(f\u0026#34;#{t+1} {lis(a_list)+1}\u0026#34;)\r3282. 0/1 Knapsack def sol(k,n):\ra = [[0 for _ in range(k+2)]for _ in range(n+2)]\rfor i in range(1,n+1):\rfor j in range(1,k+1):\rif v_list[i-1] \u0026gt; j:\ra[i][j] = a[i-1][j]\relse:\ra[i][j] = max(c_list[i-1]+a[i-1][j-v_list[i-1]], a[i-1][j])\rreturn a[n][k]\rfor t in range(int(input())):\rN, K = map(int, input().split())\rsack = [list(map(int, input().split()))for _ in range(N)]\rv_list = []\rc_list = []\rfor i in range(N):\rv_list.append(sack[i][0])\rc_list.append(sack[i][1])\rprint(f\u0026#34;#{t+1} {sol(K,N)}\u0026#34;)\r3314. 보충학습과 평균 for t in range(int(input())):\rscore = list(map(int, input().split()))\rfor i in range(len(score)):\rif score[i] \u0026lt; 40:\rscore[i] = 40\rprint(f\u0026#34;#{t+1} {sum(score)//5}\u0026#34;)\r3376. 파도반 수열 def wave(n):\ra = [1,1,1]\rb = [1] * n\rif n \u0026lt;=3:\rreturn 1\relse:\rfor i in range(3,n):\rb[i] = b[i-2] + b[i-3]\rreturn b[n-1]\rfor t in range(int(input())):\rN = int(input())\rprint(f\u0026#34;#{t+1} {wave(N)}\u0026#34;)\r3408. 세가지합 for t in range(int(input())):\rN = int(input())\rsum_1 = N*(N+1)//2\rsum_2 = N*(N*2)//2\rsum_3 = N*(N*2+2)//2\rprint(f\u0026#34;#{t+1} {sum_1} {sum_2} {sum_3}\u0026#34;)\r3431. 준환이의 운동관리 for t in range(int(input())):\rL, U, X = map(int, input().split())\rif U \u0026lt; X:\rprint(f\u0026#34;#{t+1} {-1}\u0026#34;)\relif L \u0026lt;= X \u0026lt;= U:\rprint(f\u0026#34;#{t+1} {0}\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {L-X}\u0026#34;)\r3456. 직사각형 길이 찾기 for t in range(int(input())):\ra = list(map(int, input().split()))\rfor i in range(3):\rif a.count(a[i])%2==1:\rprint(f\u0026#34;#{t+1} {a[i]}\u0026#34;)\rbreak\r3499. 퍼펙트 셔플 for t in range(int(input())):\rN = int(input())\rcard = list(map(str, input().split()))\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rif len(card) % 2 == 0:\rfor i in range(N//2):\rprint(f\u0026#34;{card[i]} {card[N//2+i]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint()\relse:\rfor i in range(N//2):\rprint(f\u0026#34;{card[i]} {card[N//2+i+1]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint(f\u0026#34;{card[N//2]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint()\r3750. Digit sum for t in range(int(input())):\rprint(f\u0026#34;#{t+1} {(int(input())-1)%9+1}\u0026#34;)\r3809. 화섭이의 정수 나열 for t in range(int(input())):\rn = int(input())\ra = \u0026#39;\u0026#39;\rwhile True:\ra += \u0026#39;\u0026#39;.join(map(str, input().split()))\rif len(a) == n:\rbreak\rprint(a)\rb = 0\rc = 0\rwhile True:\rif str(b) not in a:\rc = b\rbreak\rb += 1\rprint(f\u0026#34;#{t+1} {c}\u0026#34;)\r3975. 승률 비교하기 T = int(input())\rg = []\rfor t in range(T):\ra,b,c,d = map(int, input().split())\re = a / b\rf = c / d\rif e \u0026lt; f:\rg.append(\u0026#34;BOB\u0026#34;)\relif e \u0026gt; f:\rg.append(\u0026#34;ALICE\u0026#34;)\relse:\rg.append(\u0026#34;DRAW\u0026#34;)\rfor t in range(T):\rprint(f\u0026#34;#{t+1} {g[t]}\u0026#34;)\r4047. 영준이의 카드 카운팅 for t in range(int(input())):\ra=input()\rb=[]\rc=1\rd=[a.count(\u0026#34;S\u0026#34;),a.count(\u0026#34;D\u0026#34;),a.count(\u0026#34;H\u0026#34;),a.count(\u0026#34;C\u0026#34;)]\rfor i in range(0,len(a),3):\rb.append(a[i:i+3])\rif len(set(b))\u0026lt;len(b):\rc=0\rprint(f\u0026#34;#{t+1} ERROR\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {13-d[0]} {13-d[1]} {13-d[2]} {13-d[3]}\u0026#34;)\r4299. 태혁이의 사랑은 타이밍 for t in range(int(input())):\rd, h, m = map(int, input().split())\ra = [11, 11, 11]\rresult = 0\rif d - a[0] \u0026lt; 0:\rresult = -1\relif a[0] == d:\rif h - a[1] \u0026lt; 0:\rresult = -1\relse:\rif m - a[2] \u0026lt; 0:\rresult = -1\relse:\rresult += (d-a[0]) * 60 * 24\rresult += (h-a[1]) * 60\rresult += (m-a[2])\relse:\rresult += (d-a[0]) * 60 * 24\rresult += (h-a[1]) * 60\rresult += (m-a[2])\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4371. 항구에 들어오는 배 for t in range(int(input())):\rn = int(input())\rhappyday = []\rfor _ in range(n):\rhappyday.append(int(input())-1)\rdel happyday[0]\rfor i in happyday:\rhappyday=set(happyday)\rhappyday -= set(range(i*2,max(happyday)+1, i))\rcontinue\rprint(f\u0026#34;#{t+1} {len(happyday)}\u0026#34;)\r4406. 모음이 보이지 않는 사람 for t in range(int(input())):\ra = list(input())\rfor i in [\u0026#39;a\u0026#39;,\u0026#39;e\u0026#39;,\u0026#39;i\u0026#39;,\u0026#39;o\u0026#39;,\u0026#39;u\u0026#39;]:\rfor j in range(len(a)):\rif i == a[j]:\ra[j]=\u0026#39;\u0026#39;\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, a))}\u0026#34;)\r4466. 최대 성적표 만들기 for t in range(int(input())):\rn, k = map(int, input().split())\ra = list(map(int, input().split()))\rb = sorted(a,reverse=True)\rresult = sum(b[:k])\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4522. 세상의 모든 팰린드롬 for t in range(int(input())):\ra = list(input())\rfor i in range(len(a)//2):\rif a[i] != a[-1-i]:\rif a[i] == \u0026#39;?\u0026#39; or a[-1-i] == \u0026#39;?\u0026#39;:\rcontinue\relse:\rprint(f\u0026#34;#{t+1} Not exist\u0026#34;)\rbreak\relse:\rprint(f\u0026#34;#{t+1} Exist\u0026#34;)\r4579. 세상의 모든 팰린드롬2 for t in range(int(input())):\ra = list(input())\rresult = \u0026#39;Exist\u0026#39;\rfor i in range(len(a)//2):\rif a[i] != a[-1-i]:\rif a[i] == \u0026#39;*\u0026#39; or a[-1-i] == \u0026#39;*\u0026#39;:\rbreak\relse:\rresult = \u0026#39;Not exist\u0026#39;\rbreak\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4615. 재미있는 오셀로 게임 def limit(a, b, n):\rif a \u0026gt;= 0 and a \u0026lt; n and b \u0026gt;= 0 and b \u0026lt; n:\rreturn True\relse:\rreturn False\rfor t in range(int(input())):\rN, M = map(int, input().split())\rdata = [[0] * N for _ in range(N)]\rdata[N // 2 - 1][N // 2] = 1\rdata[N // 2][N // 2 - 1] = 1\rdata[N // 2 - 1][N // 2 - 1] = 2\rdata[N // 2][N // 2] = 2\rdx = [-1, 0, 1, 1, 1, 0, -1, -1]\rdy = [-1, -1, -1, 0, 1, 1, 1, 0]\rfor _ in range(M):\ra, b, stone = map(int, input().split())\rx = a - 1\ry = b - 1\rdata[x][y] = stone\rfor i in range(8):\rcnt = 0\rnext_x = x + dx[i]\rnext_y = y + dy[i]\rwhile limit(next_x, next_y, N) and stone != data[next_x][next_y] and data[next_x][next_y] != 0:\rcnt += 1\rnext_x = next_x + dx[i]\rnext_y = next_y + dy[i]\rif limit(next_x, next_y, N) and data[next_x][next_y] == stone:\rnext_x = x + dx[i]\rnext_y = y + dy[i]\rfor f in range(cnt):\rdata[next_x][next_y] = stone\rnext_x = next_x + dx[i]\rnext_y = next_y + dy[i]\rcnt1 = 0\rcnt2 = 0\rfor i in range(N):\rfor j in range(N):\rif data[i][j] == 1:\rcnt1 += 1\relif data[i][j] == 2:\rcnt2 += 1\rprint(f\u0026#34;#{t+1} {cnt1} {cnt2}\u0026#34;)\r4676. 늘어지는 소리 만들기 for t in range(int(input())):\rstring = list(input())\rh = int(input())\ridx = list(map(int, input().split()))\ridx_sort =sorted(idx,reverse=True)\rfor i in range(len(idx)):\rstring.insert(idx_sort[i],\u0026#39;-\u0026#39;)\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, string))}\u0026#34;)\r4751. 다솔이의 다이아몬드 장식 for t in range(int(input())):\ra = list(input())\rn = (len(a) * 4) + 1\rb = [\u0026#39;.\u0026#39;,\u0026#39;.\u0026#39;,\u0026#39;#\u0026#39;,\u0026#39;.\u0026#39;]*(n//4)+[\u0026#39;.\u0026#39;]\rc = [\u0026#39;.\u0026#39;,\u0026#39;#\u0026#39;]*(n//2)+[\u0026#39;.\u0026#39;]\rd = [\u0026#39;#\u0026#39;,\u0026#39;.\u0026#39;]*(n//2)+[\u0026#39;#\u0026#39;]\rprint(\u0026#39;\u0026#39;.join(b))\rprint(\u0026#39;\u0026#39;.join(c))\rfor i in range(len(a)):\rd[4*i+2]=a[i]\rprint(\u0026#39;\u0026#39;.join(d))\rprint(\u0026#39;\u0026#39;.join(c))\rprint(\u0026#39;\u0026#39;.join(b))\r4789. 성공적인 공연 기획 for t in range(int(input())):\ra = list(map(int, input()))\rcnt = 0\rresult = 0\rfor i in range(len(a)):\rwhile True:\rif cnt \u0026lt; i:\rcnt += 1\rresult += 1\relse:\rcnt += a[i]\rbreak\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r5162. 두가지 빵의 딜레마 for t in range(int(input())):\ra, b, c = map(int, input().split())\rresult = 0\rif a \u0026lt; b:\rresult = c // a\relse:\rresult = c // b\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r5215. 햄버거 다이어트 for t in range(int(input())):\rn, l = map(int, input().split())\rhamb = [list(map(int, input().split()))for _ in range(n)]\rcal = []\rscore = []\rfor i in range(n):\rscore.append(hamb[i][0])\rcal.append(hamb[i][1])\rboard = [[0 for _ in range(l + 1)] for _ in range(n + 1)]\rfor i in range(1, n + 1):\rfor j in range(1, l + 1):\rif cal[i - 1] \u0026gt; j:\rboard[i][j] = board[i - 1][j]\relse:\rboard[i][j] = max(score[i - 1] + board[i - 1][j - cal[i - 1]], board[i - 1][j])\rprint(f\u0026#34;#{t+1} {board[n][l]}\u0026#34;)\r5356. 의석이의 세로로 말해요 T=int(input())\rfor tc in range(1, T+1):\rarr = [input() for _ in range(5)]\rl = [len(i) for i in arr] # 각 문자열의 길이\r ml = max(l) # 문자열 중 최대길이\r temp = \u0026#34;\u0026#34;\rfor i in range(ml):\rfor j in range(5):\rif l[j] \u0026gt; i: # 자신의 문자열의 길이보다 열번호가 작으면 문자 추가하지 않음\r temp += arr[j][i]\rprint(\u0026#34;#%d%s\u0026#34;%(tc, temp)) 5431. 민석이의 과제 체크하기 for t in range(int(input())):\rn, k = map(int, input().split())\ra = list(map(int, input().split()))\rn_li = list(range(1,n+1))\rfor i in a:\rif i in n_li:\rn_li.remove(i)\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, n_li))}\u0026#34;)\r5515. 2016년 요일 맞추기 for t in range(int(input())):\rm, d = map(int, input().split())\rday = [0,31,29,31,30,31,30,31,31,30,31,30,31]\rdays = 0\rfor i in range(m):\rdays += day[i]\rprint(f\u0026#34;#{t+1} {(days+d+3)%7}\u0026#34;)\r5549. 홀수일까 짝수일까 for t in range(int(input())):\ra = input()\rif int(a[-1])%2 == 0:\rprint(f\u0026#34;{t+1} Even\u0026#34;)\relse:\rprint(f\u0026#34;{t+1} Odd\u0026#34;)\r5601. 쥬스 나누기 for t in range(int(input())):\rn = int(input())\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rfor i in range(n):\rprint(f\u0026#34;1/{n}\u0026#34;, end=\u0026#39; \u0026#39;)\rprint()\r5603. 건초더미 for t in range(int(input())):\rn = int(input())\ra = []\rfor i in range(n):\ra.append(int(input()))\ravg = sum(a)//n\rresult = 0\rfor i in range(n):\rresult += abs(a[i] - avg)\rprint(f\u0026#34;#{t+1} {result//2}\u0026#34;)\r5642. 합 for t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rmax_ = -10000\rsum_ = 0\rfor i in range(n):\rsum_ += a[i]\rif sum_ \u0026gt; max_:\rmax_ = sum_\rif sum_ \u0026lt; 0:\rsum_ = 0\rprint(f\u0026#34;#{t+1} {max_}\u0026#34;)\r5789. 현주의 상자 바꾸기 for t in range(int(input())):\rn, q = map(int, input().split())\rbox = [0 for _ in range(n)]\rfor j in range(1,q+1):\rl, r = map(int, input().split())\rfor i in range(l-1,r):\rbox[i] = j\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, box))}\u0026#34;)\r5948. 새샘이의 7-3-5 게임 for t in range(int(input())):\ra = list(map(int, input().split()))\rb = sorted(a,reverse=True)\rcnt = 0\rresult = []\rfor i in range(7):\rfor j in range(i+1,7):\rfor k in range(j+1,7):\rresult.append(b[i]+b[j]+b[k])\rc = sorted(result,reverse=True)\rv = 0\rfor i in range(len(c)-1):\rif c[i] != c[i+1]:\rcnt += 1\rif cnt == 5:\rv = c[i]\rbreak\rprint(f\u0026#34;#{t+1} {v}\u0026#34;)\r5986. 새샘이와 세 소수 def prime(number):\ra = [False, False] + [True] * (number-1)\rfor (i, e) in enumerate(a):\rif e:\rk = i * 2\rwhile k \u0026lt;= n:\ra[k] =False\rk += i\rreturn [x for (x, y) in enumerate(a) if y]\rfor t in range(int(input())):\rn = int(input())\ra = prime(n)\rcnt = 0\rfor i in range(len(a)):\rfor j in range(i,len(a)):\rfor k in range(j,len(a)):\rif a[i] + a[j] + a[k] == n:\rcnt+=1\relse:\rcontinue\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r6019. 기차 사이의 파리 for t in range(int(input())):\rd,a,b,f = map(int, input().split())\rresult = (d / (a+b))*f\rprint(f\u0026#34;#{t+1}\u0026#34;, \u0026#34;%.10f\u0026#34; %result)\r6190. 정곤이의 단조 증가하는 수 for t in range(int(input())):\rn=int(input())\ra=list(map(int,input().split()))\rf=-1\rfor i in range(n-1):\rfor j in range(i+1,n):\rm=a[i]*a[j]\rif f\u0026gt;m:\rcontinue\rc=m\rb=m%10\rc=c//10\rwhile c:\rif c%10\u0026gt;b:\rbreak\rb=c%10\rc=c//10\rif not c:\rf=m\rprint(f\u0026#34;#{t+1} {f}\u0026#34;)\r6485. 삼성시의 버스 노선 for t in range(int(input())):\rarr = [0]*5001\rfor i in range(int(input())):\ra , b = map(int, input().split())\rfor j in range(a,b+1):\rarr[j] += 1\rp = int(input())\rarr_1 = [0]*p\rfor i in range(p):\rc = int(input())\rarr_1[i] = arr[c]\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr_1))}\u0026#34;)\r6485. for t in range(int(input())):\rarr = [0]*5001\rfor i in range(int(input())):\ra , b = map(int, input().split())\rfor j in range(a,b+1):\rarr[j] += 1\rp = int(input())\rarr_1 = [0]*p\rfor i in range(p):\rc = int(input())\rarr_1[i] = arr[c]\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr_1))}\u0026#34;)\r6692. 다솔이의 월급 상자 for t in range(int(input())):\rN = int(input())\rresult = 0\rfor i in range(N):\ra, b = map(float, input().split())\rresult += a * b\rprint(f\u0026#34;{t+1}\u0026#34;, \u0026#34;%.6f\u0026#34; % result)\r7675. 통역사 성경이 for t in range(int(input())):\rn = int(input())\rarr = [0]*n\rcnt = 0\ra = list(input().split())\rfor i in a:\rflag = 0\rfor j in i:\rif not flag and j.isupper():\rflag = 1\relif j.isdigit() or (flag and j.isupper()):\rflag = 0\rbreak\rif flag:\rarr[cnt] += 1\rif (\u0026#39;.\u0026#39; in i) or (\u0026#39;!\u0026#39; in i) or (\u0026#39;?\u0026#39; in i):\rcnt += 1\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr))}\u0026#34;)\r"
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d4/swea-d4.html",
	"title": "SWEA - Python - D4",
	"tags": ["SWEA", "D4"],
	"description": "",
	"content": "1210. Ladder1 for _ in range(10):\rT = input()\rladder = [list(map(int, input().split()))for _ in range(100)]\rj = 0\rfor x in range(100):\rif ladder[99][x] == 2:\rj = x\rstart_p = 0\ri = 99\rwhile i \u0026gt;= 0:\rif j - 1 \u0026gt;= 0 and ladder[i][j-1] == 1:\rwhile 0 \u0026lt;= j - 1 \u0026lt; 100 and ladder[i][j-1] == 1:\rj -= 1\relif j + 1 \u0026lt; 100 and ladder[i][j+1] == 1:\rwhile 0 \u0026lt;= j + 1 \u0026lt; 100 and ladder[i][j+1] == 1:\rj += 1\ri -= 1\rprint(f\u0026#34;#{T} {j}\u0026#34;)\r1211. Ladder2 for _ in range(10):\rt = int(input())\rladder = [list(map(int, input().split()))for _ in range(100)]\rstart_idx = []\rmin_cnt = 10000\rmin_idx = 0\rfor i in range(100):\rif ladder[0][i] == 1:\rstart_idx.append(i)\rfor i in range(100):\rc = i\rr = 0\rcount = 0\rif ladder[r][c] == 1:\rr += 1\rwhile r \u0026lt; 100:\rif c-1 \u0026gt;= 0 and ladder[r][c-1] == 1:\rwhile c-1 \u0026gt;= 0 and ladder[r][c-1] == 1:\rc -= 1\rcount += 1\rr += 1\rcount += 1\relif c+1 \u0026lt;= len(ladder[r])-1 and ladder[r][c+1] == 1:\rwhile c+1 \u0026lt;= len(ladder[r])-1 and ladder[r][c+1] == 1:\rc += 1\rcount += 1\rr += 1\rcount += 1\relse:\rr += 1\rcount += 1\rif min_cnt \u0026gt; count:\rmin_cnt = count\rmin_idx = i\rprint(f\u0026#34;#{t} {min_idx}\u0026#34;)\r1224. 계산기3 def cal(a):\rstack = []\rfor i in a:\rtry:\rif i == \u0026#39;+\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num1+num2)\relif i == \u0026#39;-\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num2-num1)\relif i == \u0026#39;*\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num1*num2)\relif i == \u0026#39;/\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num2//num1)\relif i.isdigit() == True:\rstack.append(int(i))\relif i == \u0026#39;.\u0026#39;:\rreturn stack\rexcept:\rreturn \u0026#39;error\u0026#39;\r# for t in range(int(input())):\r # a = list(input().split())\r # b = cal(a)\r # if len(b) != 1:\r # print(f\u0026#34;#{t+1} error\u0026#34;)\r # else:\r # print(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, b))}\u0026#34;)\r def cal_1(a):\rstack = []\rresult = []\risp = {\u0026#39;(\u0026#39;:0,\u0026#39;+\u0026#39;:1, \u0026#39;-\u0026#39;:1, \u0026#39;*\u0026#39;:2, \u0026#39;/\u0026#39;:2, \u0026#39;)\u0026#39;:3}\rfor i in a:\rif i == \u0026#39;(\u0026#39;:\rstack.append(i)\relif i == \u0026#39;)\u0026#39;:\rwhile stack[-1] != \u0026#39;(\u0026#39;:\rb = stack.pop()\rresult.append(b)\rstack.pop()\relif i in isp:\rwhile len(stack) != 0 and isp[stack[-1]] \u0026gt;= isp[i]:\rresult.append(stack.pop())\rstack.append(i)\relif i.isdigit() == True:\rresult.append(i)\rwhile len(stack) != 0 and stack[-1] != \u0026#39;(\u0026#39;:\rc = stack.pop()\rresult.append(c)\rreturn result\rfor t in range(10):\rn = input()\ra = list(input())\rb = cal_1(a)\rb.append(\u0026#39;.\u0026#39;)\rc = cal(b)\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, c))}\u0026#34;)\r1226. 미로1 for _ in range(10):\rT = input()\rmaze = [list(map(int, input()))for _ in range(16)] flag = 0\rvisit = [[1,1]]\rdx = [-1, 0, 1, 0]\rdy = [0, 1, 0, -1]\rwhile visit != []:\ri, j = visit.pop()\rfor idx in range(4):\rc_i = i + dx[idx]\rc_j = j + dy[idx]\rif maze[c_i][c_j] == 0:\rvisit.append([c_i,c_j])\rmaze[c_i][c_j] = 1\rif maze[c_i][c_j] == 3:\rflag = 1\rbreak\rif flag:\rbreak\rprint(f\u0026#34;#{T} {flag}\u0026#34;)\r1258. 행렬찾기 for t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rresult = []\rfor i in range(n):\rfor j in range(n):\rif a[i][j] == 0:\rcontinue\rc = i\rwhile c \u0026lt; n and a[c][j]:\rr = j\rwhile r \u0026lt; n and a[c][r]:\ra[c][r] = 0\rr += 1\rc += 1\rresult.append([c-i, r-j])\rresult.sort(key=lambda x : (x[0]*x[1], x[0]))\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;, end=\u0026#39; \u0026#39;)\rfor i,j in result:\rprint(i,j,end=\u0026#39; \u0026#39;)\rprint() 1486. 장훈이의 높은 선반 for t in range(int(input())):\rn, b = map(int, input().split())\rheight = list(map(int, input().split()))\rmin_ = 10000*20\rfor i in range(1\u0026lt;\u0026lt;n):\rsum_ = 0\rfor j in range(n):\rif i \u0026amp;(1\u0026lt;\u0026lt;j):\rsum_ += height[j]\rif sum_ \u0026gt;= b and sum_ \u0026lt; min_:\rmin_ = sum_\rprint(f\u0026#34;#{t+1} {min_-b}\u0026#34;)\r1861. 정사각형 방 dt = [(1,0), (0,1), (-1,0), (0,-1)]\rfor t in range(int(input())):\rn = int(input())\rroom = [list(map(int, input().split()))for _ in range(n)]\rmax_value = 0\rresult = n ** 2 + 1\rfor i in range(n):\rfor j in range(n):\rstart_num = room[i][j]\rcnt = 1\rwhile True:\rfor delta in dt:\rdx, dy = i + delta[0], j + delta[1]\rif 0 \u0026lt;= dx \u0026lt; n and 0 \u0026lt;= dy \u0026lt; n and room[dx][dy] - room[i][j] == 1:\rcnt += 1\ri, j = dx, dy\rbreak\relse:\rbreak\rif cnt \u0026gt; max_value:\rmax_value = cnt\rresult = start_num\relif cnt == max_value and start_num \u0026lt; result:\rmax_value = cnt\rresult = start_num\rprint(f\u0026#34;#{t+1} {result} {max_value}\u0026#34;)\r1865. 동철이의 일 분배 def solv(per, sum_val, a=0):\rglobal result\rif sum_val \u0026lt;= result:\rreturn\rif per == n:\rif sum_val \u0026gt; result:\rresult = sum_val\rreturn\rfor i in range(a,n):\rn_list[i],n_list[a] = n_list[a], n_list[i]\rsolv(per+1,sum_val*p[a][n_list[a]]/100,a+1)\rn_list[i],n_list[a] = n_list[a], n_list[i]\rfor t in range(int(input())):\rn = int(input())\rn_list = list(range(n))\rp = [list(map(int, input().split()))for _ in range(n)]\rresult = 0\rsolv(0,1)\rprint(f\u0026#34;#{t+1} {100*result:.6f}\u0026#34;)\r2819. 격자판의 숫자 이어 붙이기 dt = [(-1,0), (0,1), (1,0), (0,-1)]\rdef sol(x,y,num,cnt=0):\rglobal result\rif cnt == 6:\rresult.add(num)\rreturn\rfor delta in dt:\rdx, dy = x + delta[0], y + delta[1]\rif not (0 \u0026lt;= dx \u0026lt; 4 and 0 \u0026lt;= dy \u0026lt; 4):\rcontinue\rsol(dx,dy,num+a[dx][dy], cnt+1) for t in range(int(input())):\ra = [list(map(str, input().split()))for _ in range(4)]\rresult = set()\rfor i in range(4):\rfor j in range(4):\rsol(i,j,a[i][j])\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r3347. 올림픽 종목 투표 for t in range(int(input())):\rn, m = map(int, input().split())\ra = list(map(int,input().split()))\rb = list(map(int,input().split()))\rc = [0] * n\rfor i in range(m):\rfor j in range(n):\rif a[j]\u0026lt;=b[i]:\rc[j] += 1\rbreak\rprint(f\u0026#34;#{t+1} {c.index(max(c))+1}\u0026#34;)\r3752. 가능한 시험 점수 for t in range(int(input())):\rN = int(input())\ra = list(map(int, input().split()))\rsum_score = {0}\rfor i in a:\rfor j in list(sum_score):\rsum_score.add(j+i)\rprint(f\u0026#34;#{t+1} {len(sum_score)}\u0026#34;)\r4408. 자기 방으로 돌아가기 for t in range(int(input())):\rroom = [0] * 400\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rfor i in range(n):\rif a[i][0] \u0026gt; a[i][1]:\ra[i][0], a[i][1] = a[i][1], a[i][0]\rif a[i][0] % 2 == 0:\ra[i][0] += 1\rif a[i][1] % 2:\ra[i][1] += 1\rfor j in range(a[i][0],a[i][1]):\rroom[j] += 1\rprint(f\u0026#34;#{t+1} {max(room)}\u0026#34;)\r5432. 쇠막대기 자르기 for t in range(int(input())):\ra = input()\rb = a.replace(\u0026#39;()\u0026#39;,\u0026#39;-\u0026#39;)\rstack = []\rcnt = 0\rfor i in b:\rif i == \u0026#39;(\u0026#39;:\rcnt += 1\rstack.append(i)\relif i == \u0026#39;)\u0026#39;:\rstack.pop()\relse:\rcnt += len(stack)\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r6109. 추억의 2048게임 def rotation(a):\rfor i in range(n):\rfor j in range(i):\ra[i][j], a[j][i] = a[j][i], a[i][j]\rreturn a\rdef rev(a):\rfor i in range(n):\ra[i] = a[i][::-1]\rreturn a\rdef left(a): for i in range(n):\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rfor j in range(1,n):\rif a[i][j-1] == a[i][j]:\ra[i][j-1] = a[i][j-1]*2\ra[i][j] = 0\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rreturn a\rdef right(a):\rrev(a)\rleft(a)\rreturn rev(a)\rdef up(a):\rrotation(a)\rleft(a)\rreturn rotation(a)\rdef down(a):\rrotation(a)\rright(a)\rreturn rotation(a)\rfor t in range(int(input())):\rn, case = map(str, input().split())\rn = int(n)\ra = [list(map(int, input().split()))for _ in range(n)]\rprint(f\u0026#34;#{t+1}\u0026#34;)\rif case == \u0026#34;left\u0026#34;:\ra = left(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;right\u0026#34;:\ra = right(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;up\u0026#34;:\ra = up(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;down\u0026#34;:\ra = down(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i]))) "
},
{
	"uri": "https://dongyeopgu.github.io/cont_2/d4/swea_%EB%AA%A8%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
	"title": "SWEA - Python - 모의 테스트",
	"tags": ["SWEA", "모의SW 테스트"],
	"description": "",
	"content": "1949. 등산로 조성 dt = [(1,0), (0,1), (-1,0), (0,-1)]\rdef sol(x,y,b,cnt=1):\rglobal max_r\rif max_r \u0026lt; cnt:\rmax_r = cnt\rvisit[x][y] = 1\rfor d in dt:\rdx, dy = x + d[0], y + d[1]\rif not (0 \u0026lt;= dx \u0026lt; n and 0 \u0026lt;= dy \u0026lt; n) or visit[dx][dy] == 1:\rcontinue\rif Map[x][y] \u0026gt; Map[dx][dy]:\rsol(dx,dy,b,cnt+1)\relif b \u0026gt; 0 and Map[x][y] \u0026gt; Map[dx][dy] - k:\rtemp = Map[dx][dy]\rMap[dx][dy] = Map[x][y] - 1\rsol(dx,dy,0,cnt+1)\rMap[dx][dy] = temp\rvisit[x][y] = 0\rfor t in range(int(input())):\rn, k = map(int, input().split())\rMap = [list(map(int, input().split()))for _ in range(n)]\rvisit = [[0 for _ in range(n)]for _ in range(n)]\rtop_height = 0\rtop_idx = []\rfor i in range(n):\rif top_height \u0026lt; max(Map[i]):\rtop_height = max(Map[i])\rfor i in range(n):\rfor j in range(n):\rif Map[i][j] == top_height:\rtop_idx.append((i,j))\rmax_r = 0\rfor top in top_idx:\rsol(top[0],top[1],1)\rprint(f\u0026#34;#{t+1} {max_r}\u0026#34;)\r1953. 탈주범 검거 dx = [0,0,-1,1]\rdy = [-1,1,0,0]\rtunnel_type = {\r1:[[1,3,4,5],[1,3,6,7],[1,2,5,6],[1,2,4,7]],\r2:[[],[],[1,2,5,6],[1,2,4,7]],\r3:[[1,3,4,5],[1,3,6,7],[],[]],\r4:[[],[1,3,6,7],[1,2,5,6],[]],\r5:[[],[1,3,6,7],[],[1,2,4,7]],\r6:[[1,3,4,5],[],[],[1,2,4,7]],\r7:[[1,3,4,5],[],[1,2,5,6],[]]\r}\rfor t in range(int(input())):\rn, m, r, c, l = map(int, input().split())\rtunnel = [list(map(int, input().split()))for _ in range(n)]\rcnt = 1\rstart = [(r,c)]\rtime = 1\rwhile True:\rif time == l:\rbreak\rfor i in range(len(start)):\ra = start.pop(0)\rfor j in range(4):\rif tunnel_type[tunnel[a[0]][a[1]]][j]:\rif 0 \u0026lt;= a[0]+dx[j] \u0026lt; n and 0 \u0026lt;= a[1]+dy[j] \u0026lt; m and tunnel[a[0]+dx[j]][a[1]+dy[j]] != 0:\rif tunnel[a[0]+dx[j]][a[1]+dy[j]] in tunnel_type[tunnel[a[0]][a[1]]][j]:\rif (a[0]+dx[j],a[1]+dy[j]) not in start:\rstart.append((a[0]+dx[j],a[1]+dy[j]))\rcnt += 1\rtunnel[a[0]][a[1]] = 0\rtime += 1\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r4008. 숫자 만들기 def cal(i, numbs):\rglobal max_value, min_value\rif i == n:\rmax_value = max(max_value, numbs)\rmin_value = min(min_value, numbs)\relse:\rif operator[0] != 0:\roperator[0] -= 1\rcal(i+1, numbs + numbers[i])\roperator[0] += 1\rif operator[1] != 0:\roperator[1] -= 1\rcal(i+1, numbs - numbers[i])\roperator[1] += 1\rif operator[2] != 0:\roperator[2] -= 1\rcal(i+1, numbs * numbers[i])\roperator[2] += 1\rif operator[3] != 0:\roperator[3] -= 1\rif numbs \u0026lt; 0 and numbs%numbers[i]:\rcal(i+1, numbs//numbers[i]+1)\relse:\rcal(i+1, numbs//numbers[i])\roperator[3] += 1\rfor t in range(int(input())):\rn = int(input())\roperator = list(map(int, input().split()))\rnumbers = list(map(int, input().split()))\rmin_value = 100000000\rmax_value = -100000000\rcal(1,numbers[0])\rprint(f\u0026#34;#{t+1} {max_value - min_value}\u0026#34;)\r5650. 핀볼 게임 # 방향 상 좌 하 우\r dx = (-1, 0, 1, 0)\rdy = (0, -1, 0, 1)\r# 1번 블록 : 상 \u0026gt; 하, 좌 \u0026gt; 상, 하 \u0026gt; 우, 우 \u0026gt; 좌\r block = ((2, -1, 1, -2), (3, 1, -2, -2), (1, 2, -2, -1), (2, 2, -1, -3), (2, 2, -2, -2))\rdef sol(x,y,d):\rglobal result, n\rcnt = 0\rnx = x\rny = y\rwhile True:\rnx += dx[d]\rny += dy[d]\rif not (n \u0026gt; nx \u0026gt;= 0 and n \u0026gt; ny \u0026gt;= 0): # 벽 만났을 때 튕김(방향은 반대로)\r d = (d + 2) % 4\rcnt += 1\relse: if game_board[nx][ny] == -1 or (nx == x and ny == y):\rresult = max(cnt, result)\rreturn\relif game_board[nx][ny] == 0:\rcontinue\relif 0\u0026lt;game_board[nx][ny] \u0026lt; 6: # 블록 만났을 때\r d += block[game_board[nx][ny]-1][d]\rcnt += 1\relse:\rfor a, b in warmhole[game_board[nx][ny]]: # 웜홀 만났을때 인덱스 변경\r if nx != a or ny != b:\rnx = a\rny = b\rbreak\rfor t in range(int(input())):\rn = int(input())\rgame_board = [list(map(int, input().split()))for _ in range(n)]\rwarmhole = {6:[],7:[],8:[],9:[],10:[]}\rfor i in range(n):\rfor j in range(n):\rif game_board[i][j] \u0026gt; 5:\rwarmhole[game_board[i][j]].append((i,j))\rresult = 0\rfor i in range(n):\rfor j in range(n):\rif game_board[i][j] == 0:\rfor k in range(4):\rsol(i,j,k)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r"
},
{
	"uri": "https://dongyeopgu.github.io/tags/til.html",
	"title": "TIL",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/update.html",
	"title": "update",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/%EB%AA%A8%EC%9D%98sw-%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
	"title": "모의SW 테스트",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dongyeopgu.github.io/tags/%EB%B0%B1%EC%A4%80.html",
	"title": "백준",
	"tags": [],
	"description": "",
	"content": ""
}]