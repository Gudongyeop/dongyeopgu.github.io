[
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94.html",
	"title": "4월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/django/django_start.html",
	"title": "Django 시작하기",
	"tags": ["django"],
	"description": "",
	"content": "기초  1. django 설치 $ pip install django==2.1.15\r(2.1.15 기준으로 배웠기 때문에)\n2. 프로젝트 시작 $ django-admin startproject {프로젝트 이름}\r그 후에 프로젝트 폴더의 settings.py에서 ALLOWED_HOST = [\u0026#39;*\u0026#39;]로 수정\r3. App 만들기 # manage.py 파일이 있는 폴더에서 터미널 진입 후 bash 에 $ python manage.py startapp {앱 이름}\r # 그 후에 settings.py에서  INSTALLED_APPS = [\r\u0026#39;{앱 이름}\u0026#39; 추가\r]\r4. urls.py 작성 # 프로젝트 이름/urls.py에서 예를 들어 index 페이지를 넣을 경우  from app이름 import views #추가\r urlpatterns =[\rpath(\u0026#39;index/\u0026#39;, views.index),\r]\r## path의 url은 항상 /로 닫기 ##\r 5. views.py 작성 # app 이름/views.py 에서\r def index(request):\rreturn render(request, \u0026#39;index.html\u0026#39;) #기본 형식\r # 만약 html파일에 넣고자 하는 내용이 있을 경우에는\r def index(request):\rsample = \u0026#39;샘플\u0026#39;\rcontext = {\r\u0026#39;sample\u0026#39;: sample,\r}\rreturn render(request, \u0026#39;index.html\u0026#39;, context)\r# 이렇게 쓸 수 있음. 다른 방법으로,\r context를 적지 않고 바로 return render(request, \u0026#39;index.html\u0026#39;, {\u0026#39;sample\u0026#39;:sample})로 쓸 수 있음.\r 함수 정의에서 첫번째 인자는 항상 request로 render에서도 첫번째 인자는 항상 request  6. templates 폴더 만들기  필요한 html 파일을 app이름 폴더 안에 templates 폴더를 만든후 저장. django template language는 https://docs.djangoproject.com/en/3.0/를 이용해서 확인  7. base.html 만들 경우 # 프로젝트명 폴더에 templates 폴더를 만든 후\r # settings.py에서\r TEMPLATES = [\r{\r...\r\u0026#39;DIRS\u0026#39;: [\ros.path.join(BASE_DIR, \u0026#39;templates\u0026#39;)\r], # 추가\r ...\r}\r]\r base.html 작성  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;ko\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r{% block body %}\r{% endblock %}\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r 그리고 app이름 폴더에 있는 templates 안에 있는 html 파일들에 내용 추가  {% extends \u0026#39;base.html\u0026#39; %}\r{% block body %}\r\u0026lt;!-- html 작성 --\u0026gt;\r{% endblock %}\r  Django CRUD Django Paginator Django User(1) Django User(2) Django Comment Django M:N Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/server/docker-compose-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0.html",
	"title": "Docker-compose 이용하기",
	"tags": ["Docker"],
	"description": "",
	"content": "Docker-compose를 이용한 배포  Docker compose를 이용하여 배포했던 것 정리.\n혼자 찾아보고 진행했던 내용이기 때문에 정확하지 않을 수 있음.\n 1. docker-compose.yml 파일 만들기  docker 실행 옵션을 미리 작성하고 편하게 사용하기 위함 frontend, backend, database, webserver를 각각 컨테이너로 사용했음 frontend는 vue cli로 backend는 node.js, 웹서버는 nginx, db는 mysql 이용 아래 docker-compose.yml파일은 내가 사용했던 것. 루트 폴더에 작성  version: \u0026#39;3\u0026#39;\rservices:\rfrontend:\rbuild:\rcontext: ./frontend\rdockerfile: Dockerfile\rvolumes:\r- \u0026#39;./frontend:/app\u0026#39;\r- \u0026#39;/app/node_modules\u0026#39;\rports:\r- \u0026#39;8080:8080\u0026#39;\rnginx:\rbuild:\rdockerfile: Dockerfile\rcontext: ./nginx ports:\r- \u0026#39;80:80\u0026#39;\rdepends_on:\r- frontend\rbackend:\rbuild:\rcontext: ./backend\rdockerfile: Dockerfile\rports:\r- \u0026#39;3000:3000\u0026#39;\rvolumes:\r- \u0026#39;./backend/:/app\u0026#39;\r- \u0026#39;/app/node_modules\u0026#39;\rdb:\rimage: mysql:5.7 # docker에서 제공하는 이미지 사용\r restart: always\renvironment:\rMYSQL_DATABASE: \u0026#39;사용할 DB\u0026#39;\r# Password for root access\r MYSQL_ROOT_PASSWORD: \u0026#39;비밀번호\u0026#39;\rports:\r# \u0026lt;Port exposed\u0026gt; : \u0026lt; MySQL Port running inside container\u0026gt;\r - \u0026#39;3306:3306\u0026#39;\rexpose:\r# Opens port 3306 on the container\r - \u0026#39;3306\u0026#39;\r# Where our data will be persisted\r volumes:\r- my-db:/var/lib/mysql\rvolumes:\rmy-db:\r1.1 frontend 부분  build 에 있는 context는 build를 실행할 경로이고 그 경로에 Dockerfile을 작성해 도커 이미지를 지정 아래는 /frontend에 만드는 Dockerfile 예  FROMnode:12.18.2\r\r# set working directory\rWORKDIR/app\r\r# add `/app/node_modules/.bin` to $PATH\rENV PATH /app/node_modules/.bin:$PATH\r\r# install and cache app dependencies\rCOPY package.json /app/package.json\rRUN npm install\r\r# start app\rCMD npm run serve\r volume 부분에서/frontend: /app은 컨테이너 안의 app directory와 연결시킬 루트폴더의 폴더 의미 port는 사용할 포트 지정  1.2 nginx 부분  docker에 있는 nginx 이미지를 사용 /nginx에 default.conf를 생성  upstream frontend {\rserver 내가 사용하는 url or ip:8080;\r}\rserver {\rlisten 80;\rlocation / {\rproxy_pass http://frontend;\rproxy_http_version 1.1;\rproxy_set_header Upgrade $http_upgrade;\rproxy_set_header Connection \u0026quot;Upgrade\u0026quot;;\r}\r}\r /nginx 에 있는 Dockerfile  FROMnginx\rCOPY ./default.conf /etc/nginx/conf.d/default.conf\r1.3 backend 부분  사용한 Dockerfile  FROMnode:12.18.2\r #어플리케이션 폴더를 Workdir로 지정\rWORKDIR/app\r #서버 파일 복사 ADD [어플리케이션파일 위치] [컨테이너내부의 어플리케이션 파일위치]\rADD ./ /app\r #패키지파일들 받기\rCOPY package.json /app/package.json\rRUN npm install\r #배포버젼으로 설정 - 이 설정으로 환경을 나눌 수 있습니다.\rENV NODE_ENV=production\r#서버실행\rCMD npm start\r1.4 DB부분  mysql 이미지 사용  2. 실행하기  docker-compoer build를 먼저 한 후에 docker-compose up을 한다 docker-compose up -d를 하면 실행 후, 콘솔로 나옴 한줄로 바꾸면 docker-compose up -d --build  해결해야할 문제점   docker를 사용할 경우 iptables에서 백엔드로 들어오는 것을 drop시킨 것들이 작동 안함. 그래서 누구나 백엔드 접근이 가능해졌음.\n  docker를 사용하지 않고 백엔드만 npm start 하면 문제없이 drop시킴\n  iptables DOCKER USER에 추가를 해도 안되고, ufw를 사용해도 다 접근 가능했음\n  조금 더 정확한 정보를 확인해야함\n  "
},
{
	"uri": "https://gudongyeop.github.io/node.js/node.js-%EC%8B%9C%EC%9E%91.html",
	"title": "Express를 이용한 백엔드 구축",
	"tags": ["Nodejs", "Node.js", "Express"],
	"description": "",
	"content": "Express 시작  백엔드에서 사용할 Nodejs Express 공부한 내용 정리.\n 1. Express 설치 및 Generator 사용  express generator를 사용하면 스켈레톤 코드 생성됨(Django에서 startproject와 유사함.)  $ npm install express --save\r$ npx express-generator\r$ express --view=pug 사용할 이름\r npx command (available in Node.js 8.2.0)\n--view=pug를 사용안하면 jade파일로 구성됨.\n 2. Routes 이용하기  app.js 기본 구조  var indexRouter = require(\u0026#39;./routes/index\u0026#39;);\r...\rapp.use(\u0026#39;/\u0026#39;, indexRouter);\r...\r 미리 만들어져 있는 index와 같이 새로 만들 route를 routes폴더에 생성 후 app.js에 추가 routes/만들.js 구조  let express = require(\u0026#39;express\u0026#39;);\rlet router = express.Router();\r// Mysql을 사용하기 위해\rlet mysql = require(\u0026#39;mysql\u0026#39;);\rlet client = mysql.createConnection({\ruser: \u0026#39;\u0026#39;,\rpassword: \u0026#39;\u0026#39;,\rdatabase: \u0026#39;\u0026#39;\r})\r//router. 뒤에는 get, post, put, delete 와 같은 method 사용 가능\rrouter.get(\u0026#39;/ddd\u0026#39;, function(req, res, next) {\r// res.render() 는 view 폴더의 pug 파일과 연동\r// 나는 RESTful API로 백엔드로 사용하기 위해 res.json을 사용\r// mysql에서 필요한 데이터를 가져오기 위한 쿼리문 작성  let queryString = \u0026#34;SELECT * FROM tableName;\u0026#34;\rclient.query(queryString, function(err, result, fields) {\rif (err) {\rconsole.log(err)//대부분 쿼리문 오류시\r } else {\rres.json(result)\r}\r})\r})\r function(req, res, next) 에서 req.body, req.query 등 이용하여 body나 query에 담겨있는 정보를 사용할 수 있음 url 부분에 /:string과 같이 사용하면 req.params.string을 사용하여 url 변동에 맞춰 사용 가능  "
},
{
	"uri": "https://gudongyeop.github.io/%EB%8B%A8%EC%88%9C%EA%B8%B0%EB%A1%9D/ssafy-3%EA%B8%B0-%EC%A7%80%EC%9B%90.html",
	"title": "SSAFY 3기 지원",
	"tags": ["SSAFY", "SSAFY3기"],
	"description": "",
	"content": "SSAFY 3기 지원 2017~2018년에 다니던 회사를 그만 두고 재취업을 하기 위해 1년 이상 시간을 보내며 많은 생각을 했고, 고등학교때 부터 생각만 해보았던 개발자를 해야겠다는 결론을 내렸다.\n이미 나이가 30살이 되었기에 독학으로 하기에는 부담이 되었고 SSAFY를 통해 조금이나마 빠르게 배워야겠다는 생각을 했고, 그렇게 2020년 SSAFY 3기로 시작하게 되었다.\n첫 시작은 나름 성공적이었고, 매일매일 멀티캠퍼스로 수업들으러 가는 일이 재밌었다.\n"
},
{
	"uri": "https://gudongyeop.github.io/vue.js/vue.js-%EA%B8%B0%EC%B4%88.html",
	"title": "Vue.js 기초",
	"tags": ["Vue", "Vue.js"],
	"description": "",
	"content": "Vue.js 기초  body태그에 \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Vue.js cdn을 추가하여 사용\n 1. Declarative Rendering(선언적 렌더링) \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r{{ message }}\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rmessage: \u0026#39;message\u0026#39;\r}\r})\r\u0026lt;/script\u0026gt;\r2. 조건문(if) \u0026lt;div id=\u0026#34;using-if\u0026#34;\u0026gt;\r\u0026lt;p v-if=\u0026#34;check\u0026#34;\u0026gt;안녕\u0026lt;/p\u0026gt;\r\u0026lt;!-- 기본적인 자바스크립트 표현 가능 --\u0026gt;\r\u0026lt;p v-if=\u0026#34;check===\u0026#39;안녕\u0026#39;\u0026#34;\u0026gt;안녕\u0026lt;/p\u0026gt;\r\u0026lt;p v-else-if=\u0026#34;check===\u0026#39;반가워\u0026#39;\u0026#34;\u0026gt;반가워\u0026lt;/p\u0026gt;\r\u0026lt;p v-else\u0026gt;안녕 반가워\u0026lt;/p\u0026gt;\r\u0026lt;!-- false일 때만 보여주기 --\u0026gt;\r\u0026lt;p v-if=\u0026#34;!check\u0026#34;\u0026gt;False일때 나타내기\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#using-if\u0026#39;,\rdata: {\rcheck: \u0026#39;안녕\u0026#39;,\r}, })\r\u0026lt;/script\u0026gt;\r3. 반복문(for) \u0026lt;div id=\u0026#34;using-for\u0026#34;\u0026gt;\r\u0026lt;ol class=\u0026#34;check-list\u0026#34;\u0026gt; \u0026lt;!-- class는 지금 여기서 의미 없음--\u0026gt;\r\u0026lt;li v-for=\u0026#34;check in checkList\u0026#34;\u0026gt;{{check}}\u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r\u0026lt;ol\u0026gt; \u0026lt;!-- 배열안의 객체를 사용 --\u0026gt;\r\u0026lt;li v-for=\u0026#34;check in checkList2\u0026#34;\u0026gt;{{check.content}}\u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#using-for\u0026#39;,\rdata: {\rcheckList: [\u0026#39;첫번째\u0026#39;,\u0026#39;두번째\u0026#39;,\u0026#39;세번째\u0026#39;],\rcheckList2: [\r{content: \u0026#39;첫번째\u0026#39;},\r{content: \u0026#39;두번째\u0026#39;},\r{content: \u0026#39;세번째\u0026#39;},\r],\r}, })\r\u0026lt;/script\u0026gt;\r4. v-on 사용  v-on은 이벤트 발동시, methods에 정의된 함수를 호출  \u0026lt;div id=\u0026#39;vue-directive-practice\u0026#39;\u0026gt;\r\u0026lt;button v-on:click=\u0026#34;reversedMessage\u0026#34;\u0026gt;메세지 뒤집기\u0026lt;/button\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;!-- 자바스크립트에서 사용 가능한 모든 이벤트도 가능 --\u0026gt;\r\u0026lt;!-- event 객체가 필요한 경우, $event로 받아올 수 있다. --\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;!-- v-on 축약형 --\u0026gt;\r\u0026lt;!-- ex) @click, @mouseover, @keydown --\u0026gt;\r{{ message }}\r\u0026lt;button @click=\u0026#34;reversedMessage\u0026#34;\u0026gt;메세지 뒤집기2\u0026lt;/button\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#vue-directive-practice\u0026#39;,\rdata: {\rmessage: \u0026#39;Click!!\u0026#39;,\r},\rmethods: { // arrow function 사용 X\r reversedMessage: function(){\rthis.message = this.message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;)\r},\r},\r})\r\u0026lt;/script\u0026gt;\r5. v-bind 사용 \u0026lt;div id=\u0026#34;bind\u0026#34;\u0026gt;\r\u0026lt;a v-bind:href=\u0026#34;google\u0026#34;\u0026gt;Google Link\u0026lt;/a\u0026gt;\r\u0026lt;!--축약형--\u0026gt;\r\u0026lt;a :href=\u0026#34;google\u0026#34;\u0026gt;Google Link\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#bind\u0026#39;,\rdata: {\rgoogle: \u0026#39;https://www.google.com\u0026#39;,\r},\r})\r\u0026lt;/script\u0026gt;\r6. v-model 양방향 바인딩 \u0026lt;div id=\u0026#34;using-v-model\u0026#34;\u0026gt;\r{{ userInput }}\r\u0026lt;input type=\u0026#34;text\u0026#34; v-model=\u0026#34;userInput\u0026#34;\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;!-- v-model 아시안 문자 입력 이슈 --\u0026gt;\r{{ userInput }}\r\u0026lt;input type=\u0026#34;text\u0026#34; @input=\u0026#34;setMessage\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#using-v-model\u0026#39;,\rdata: {\ruserInput: \u0026#39;\u0026#39;,\r},\rmethods: {\rsetMessage: function(event){\rthis.userInput = event.target.value\r},\r}\r})\r\u0026lt;/script\u0026gt;\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94.html",
	"title": "5월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/django/django_crud.html",
	"title": "Django CRUD",
	"tags": ["django", "create", "read", "update", "delete", "crud"],
	"description": "",
	"content": "CRUD - Create, Read, Update, Delete  1. Model 사용할 경우 1. Model 만들기 (ex: Article이라는 모델을 만들경우) # 프로젝트 명/App이름/models.py\r class Article(models.Model):\rtitle = models.CharField(max_length=140)\rcontent = models.TextField()\rcreated_at = models.DateTimeField(auto_now_add=True)\rupdated_at = models.DateTimeField(auto_now=True)\r models.Model 을 상속받은 클래스를 생성한다. 속성은 내가 구성하고 싶은 테이블의 컬럼의 이름을 지정하고, 데이터 타입에 맞춰서 필드를 정의한다. 위에서 정의된 필드 정보  CharField :  max_length : 필수   DateTimeField  auto_now_add : (선택) 생성시에만 자동으로 해당 시간 값 설정 auto_now : (선택) 수정시마다 자동으로 해당 시간 값 설정   이외의 필드는 https://docs.djangoproject.com/ko/2.1/ref/models/fields/#field-types 여기서 확인    2. Migrations  Migrations are Django’s way of propagating changes you make to your models (adding a field, deleting a model, etc.) into your database schema.\n마이그레이션은 django에서 모델의 변경 사항을 데이터베이스 스키마에 반영하기 위한 방법이다.\n관련 문서\n   정의된 모델을 데이터베이스에 반영하기 위해서 아래 명령어 실행.\n$ python manage.py makemigrations\rMigrations for \u0026#39;articles\u0026#39;:\rarticles/migrations/0001_initial.py\r- Create model Article\r  마이그레이션 파일은 모델의 변경사항은 기록하며, app 별로 있는 migrations/ 폴더에 기록된다. 최초에 0001_initial.py 라는 파일이 생성되어 있을 것이다.\n  생성된 마이그레이션 파일을 데이터베이스에 반영하기 위해서는 아래의 명령어를 입력한다.\n 아래와 같이 많아 보이는 것은 django가 기본적으로 활용하고 있는 데이터베이스 마이그레이션 파일까지 반영되었기 때문이다. (프로젝트 생성과 동시에 python manage.py migrate )  $ python manage.py migrate\rOperations to perform:\rApply all migrations: admin, articles, auth, contenttypes, sessions\rRunning migrations:\rApplying contenttypes.0001_initial... OK\rApplying auth.0001_initial... OK\rApplying admin.0001_initial... OK\rApplying admin.0002_logentry_remove_auto_add... OK\rApplying admin.0003_logentry_add_action_flag_choices... OK\rApplying articles.0001_initial... OK\rApplying contenttypes.0002_remove_content_type_name... OK\rApplying auth.0002_alter_permission_name_max_length... OK\rApplying auth.0003_alter_user_email_max_length... OK\rApplying auth.0004_alter_user_username_opts... OK\rApplying auth.0005_alter_user_last_login_null... OK\rApplying auth.0006_require_contenttypes_0002... OK\rApplying auth.0007_alter_validators_add_error_messages... OK\rApplying auth.0008_alter_user_username_max_length... OK\rApplying auth.0009_alter_user_last_name_max_length... OK\rApplying sessions.0001_initial... OK\r  Migrations 관련 명령어\n$ python manage.py makemigrations\r$ python manage.py showmigrations\r$ python manage.py migrate\r$ python manage.py sqlmigrate article 0001\r  3. admin 등록하기 # 프로젝트 명/app 이름/admin.py\rfrom django.contrib import admin\r# Register your models here.\rfrom .models import Article\radmin.site.register(Article)\r4. Create 만들기 # app이름/views.py\r from django.shortcuts import render, redirect, get_object_or_404\rfrom .models import Article #import뒤에 만든 model 클래스\r def create(request):\rarticle = Article()\rarticle.title = request.POST.get(\u0026#39;title\u0026#39;)\rarticle.content = request.POST.get(\u0026#39;content\u0026#39;)\rarticle.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk) #redirect로 만들어 진 페이지로 이동하게\r def detail(request, pk):\r# article = Article.objects.get(pk=pk)  article = get_object_or_404(Article, pk=pk)\r# Article.objects.get을 써도 되지만 get_object_or_404를 쓸 경우 pk값이 없을 경우 404 나오게\r context = {\r\u0026#39;article\u0026#39;: article\r}\rreturn render(request, \u0026#39;articles/detail.html\u0026#39;, context)\r# app 이름/urls.py\r from django.urls import path\rfrom . import views\rapp_name = \u0026#39;articles\u0026#39; # app_name을 사용해 절대 경로를 사용 하지 않도록함.\r urlpatterns = [\rpath(\u0026#39;create/\u0026#39;, views.create, name=\u0026#39;create\u0026#39;),\rpath(\u0026#39;\u0026lt;int:pk\u0026gt;/\u0026#39;, views.detail, name=\u0026#39;detail\u0026#39;),\r]\r5. Update 만들기 # views.py에 추가\r def update(request, pk):\rarticle = get_object_or_404(Article, pk=pk)\rarticle.title = request.POST.get(\u0026#39;title\u0026#39;)\rarticle.content = request.POST.get(\u0026#39;content\u0026#39;)\rarticle.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\r# urls.py의 urlpatterns에 추가\r path(\u0026#39;\u0026lt;int:pk\u0026gt;/update/\u0026#39;, views.update, name=\u0026#39;update\u0026#39;),\r6. Delete 만들기 # views.py에 추가\r def delete(request, pk):\rarticle = get_object_or_404(Article, pk=pk)\rarticle.delete()\rreturn redirect(\u0026#39;articles:index\u0026#39;)\r# urls.py의 urlpatterns에 추가\r path(\u0026#39;\u0026lt;int:pk\u0026gt;/delete/\u0026#39;, views.delete, name=\u0026#39;delete\u0026#39;),\r2. Form 사용할 경우 1. app이름 폴더 내 forms.py 추가 # 간단한 예\r from django import forms\rfrom .models import Article\rclass ArticleForm(forms.ModelForm):\rtitle = forms.CharField(\rmax_length=100,\rwidget=forms.TextInput(\rattrs={,\r\u0026#39;placeholder\u0026#39;: \u0026#39;제목 입력\u0026#39;\r}\r)\r)\rcontent = forms.CharField(\rwidget=forms.Textarea(\rattrs={\r\u0026#39;placeholder\u0026#39;: \u0026#39;내용 입력\u0026#39;\r}\r)\r)\rclass Meta:\rmodel = Article\rfields = [\u0026#39;title\u0026#39;, \u0026#39;content\u0026#39;]\r attrs의 placeholder는 빈칸일 경우 나타내는 내용  2. views.py에 내용 추가 from .forms import ArticleForm\rdef create(request):\rif request.method == \u0026#39;POST\u0026#39;:\rform = ArticleForm(request.POST)\rif form.is_valid():\rarticle = form.save()\rreturn redirect(\u0026#39;articles:index\u0026#39;)\relse:\rform = ArticleForm()\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;articles/form.html\u0026#39;, context)\rdef update(request, pk):\r# 수정시에는 해당 article 인스턴스를 넘겨줘야한다!\r article = get_object_or_404(Article, pk=pk)\rif request.method == \u0026#39;POST\u0026#39;:\rform = ArticleForm(request.POST, instance=article)\rif form.is_valid():\rarticle = form.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\relse:\rform = ArticleForm(instance=article)\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;articles/form.html\u0026#39;, context)\r update에서 인스턴스를 넘겨주지 않으면 빈칸으로 update 페이지가 나오지만, 인스턴스를 넘겨주면 원래 글의 내용을 가지고 나타냄 form.html 하나를 가지고 create와 update모두 사용하도록 함  \u0026lt;!-- form.html --\u0026gt;\r{% if request.resolver_match.url_name == \u0026#39;create\u0026#39; %}\r\u0026lt;h2\u0026gt;새 글쓰기\u0026lt;/h2\u0026gt;\r{% else %}\r\u0026lt;h2\u0026gt;수정하기\u0026lt;/h2\u0026gt;\r{% endif %}\r\u0026lt;!-- create로 접근했을 경우와 update로 접근했을 경우 다르게 보이도록 설정 --\u0026gt;\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;!-- action이 비어있어도 작동함 views.py --\u0026gt;\r{% csrf_token %} \u0026lt;!-- csrf_token 없이 만들 경우 작동하지 않음 --\u0026gt;\r{% form %}\r\u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;제출\u0026#34;\u0026gt;\r\u0026lt;/form\u0026gt;\r  Django 기초 Django Paginator Django User(1) Django User(2) Django Comment Django M:N Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/node.js/express-mysql.html",
	"title": "Express와 MySQL",
	"tags": ["Nodejs", "Node.js", "Express", "Mysql"],
	"description": "",
	"content": "Express \u0026amp; MySQL  프로젝트 진행하며 찾은 내용들 정리\n 1. MySQL 사용  npm install mysql 으로 mysql모듈 설치  var mysql = require(\u0026#39;mysql\u0026#39;);\r// 기본적으로 이렇게 사용\rlet client = mysql.createConnection({\ruser: \u0026#39;\u0026#39;,\rpassword: \u0026#39;\u0026#39;,\rdatabase: \u0026#39;\u0026#39;,\r})\r 프로젝트를 진행하며 사용한 코드 샘플  router.post(\u0026#39;/measure\u0026#39;, function(req, res, next) {\rlet info = req.body\rlet temp = info.temp\rlet datetime = info.datetime\rlet serial = info.serial\rlet studentNumber = null\rclient.query(`SELECT no FROM student WHERE serial = \u0026#34;${serial}\u0026#34;;`, function(err, result, fields) {\rif (err) {\rconsole.log(err)\r} else {\rstudentNumber = result[0].no\rclient.query(`INSERT INTO temperature (temp, datetime, stu_no) VALUE (\u0026#34;${temp}\u0026#34;, \u0026#34;${datetime}\u0026#34;, \u0026#34;${studentNumber}\u0026#34;);`, function(err, result) {\rif (err) {\rconsole.log(err)\r} else {\rres.json(\u0026#34;완료\u0026#34;)\r}\r})\r}\r})\r})\r2. 만났던 오류  Vue.js \u0026lt;\u0026ndash;\u0026gt; Node.js \u0026lt;\u0026ndash;\u0026gt; MySQL에서 timezone 때문에 시간이 안맞는 오류가 발생 MySQL에서 timezone을 한국으로 바꾸고 데이터를 저장하고 가져와도 +0900이 아닌 000Z가 계속 붙어서 왔음. 그리고 이미 Vue에선 moment로 timezone을 서울로 바꿔서 사용 중이었기 때문에 18시간이 더해지는 결과가 발생. 쉬운 방법으로 node.js에서 mysql에서 가져온 datetime을 string으로 바꿔 시간 계산을 하여 필요한 시간을 가져다 씀  let client = mysql.createConnection({\ruser: \u0026#39;\u0026#39;,\rhost: \u0026#39;서버\u0026#39;,\rport: 3306,\rpassword: \u0026#39;\u0026#39;,\rdatabase: \u0026#39;\u0026#39;,\rtimezone: \u0026#39;+09:00\u0026#39;,\rdateStrings: \u0026#39;date\u0026#39;\r})\r...\rlet reGrouped = []\rgrouped.forEach(e =\u0026gt; {\rlet tem = {\r\u0026#34;student_number\u0026#34;: e.student_number,\r\u0026#34;student_name\u0026#34;: e.student_info.name,\r\u0026#34;student_gisu\u0026#34;: e.student_info.gisu,\r\u0026#34;student_area\u0026#34;: e.student_info.area,\r\u0026#34;student_part\u0026#34;: e.student_info.part,\r\u0026#34;student_class\u0026#34;: e.student_info.stu_class,\r}\re.temp_info.forEach(el =\u0026gt; {\rconsole.log(el.datetime);\rlet measuringHour = el.datetime.substr(11,2)\rmeasuringHour *= 1\r// console.log(measuringHour)\r // console.log(dateChange.length)\r if (8\u0026lt;= measuringHour \u0026amp;\u0026amp; measuringHour \u0026lt;= 10) {\rtem[\u0026#34;morning_temp\u0026#34;] = el.temperature\rtem[\u0026#34;morning_time\u0026#34;]= el.datetime\r} else if (11 \u0026lt;= measuringHour \u0026amp;\u0026amp; measuringHour \u0026lt;= 14) {\rtem[\u0026#34;lunch_temp\u0026#34;] = el.temperature\rtem[\u0026#34;lunch_time\u0026#34;]= el.datetime\r}\r})\rreGrouped.push(tem)\r})\rres.json(reGrouped);\r.....\r 이런식으로 사용했음\n "
},
{
	"uri": "https://gudongyeop.github.io/vue.js/vue-cli3.html",
	"title": "Vue CLI",
	"tags": ["Vue", "Vue.js"],
	"description": "",
	"content": "Vue CLI3 설치   공식 문서\n   설치 순서 (Windows10)\n$ npm install -g @vue/cli\r$ vue --version # 버젼확인\r  프로젝트 생성 및 실행  $ vue create \u0026lt;프로젝트 명\u0026gt;\r$ cd \u0026lt;프로젝트명\u0026gt; # 프로젝트 폴더로 이동\r$ npm run serve\r프로젝트 정리    src/App.vue에서 필요없는 기본코드 삭제(아래처럼)\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rname: \u0026#39;App\u0026#39;,\rcomponents: {},\r//여기에 data, methods 등 넣으면 됨\r }\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  컴포넌트 사용 방법   컴포넌트 생성 : components폴더에 .vue만들기(PascalCase로 이름만들기) 불러오기 : import 컴포넌트이름 from 경로 등록하기 : components 속성에 등록 사용하기 : \u0026lt;template\u0026gt; 내부에 html 태그처럼 추가  컴포넌트 기초 만들기    .vue파일 만들고 vue + tab 또는 \u0026lt; + tab으로 기초 작성\n  \u0026lt;template\u0026gt; 태그 안에 \u0026lt;div\u0026gt;안에 넣어줘야함\n  App.vue에서 연결\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;Index/\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport Index from \u0026#39;./components/Index.vue\u0026#39;\rexport default {\rname: \u0026#39;App\u0026#39;,\rcomponents: {\rIndex,\r}\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  components에서 data 작성 시 data: function () {}으로 작성\n  lodash 사용하여 샘플링 기능 추가\n$ npm i lodash\r  Vue-Router  공식 문서 참조\n 설치  $ vue add router\r컴포넌트 사용하기   컴포넌트를 만든다. 컴포넌트를 가져온다. 컴포넌트를 등록. 컴포넌트 사용. views폴더에 .vue파일 작성  router 폴더   index를 만들었을 때\n import Vue from \u0026#39;vue\u0026#39;\rimport VueRouter from \u0026#39;vue-router\u0026#39;\rimport Index from \u0026#39;../views/Index.vue\u0026#39;\rVue.use(VueRouter)\rconst routes = [\r{\rpath: \u0026#39;/\u0026#39;,\rname: \u0026#39;Index\u0026#39;,\rcomponents: Index\r},\r]\rconst router = new VueRouter({\rmode: \u0026#39;history\u0026#39;,\rbase: process.env.BASE_URL,\rroutes\r})\rexport default router\rHistory Mode   SPA의 단점은 주소가 바뀌지 않는다는 것. 주소가 바뀌지 않는다는 것은 사용자가 어떤 페이지에 요청을 보내 응답을 받았는지에 대한 history 관리를 할 수 없다는 뜻. 초창기에는 주소 뒤에 #(해쉬)또는 #!(해쉬뱅)을 붙이고 뒤에 하위 주소를 넣었다 (history mode off 하면 확인 가능) 브라우저에서 제공하는 주소 API를 사용해 주소를 바꾼다. 이를 위해 사용하는 것이 history API다.  "
},
{
	"uri": "https://gudongyeop.github.io/server/%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%9C-ubuntu-%EB%AA%85%EB%A0%B9%EC%96%B4.html",
	"title": "많이 사용한 Ubuntu 명령어",
	"tags": ["Ubuntu"],
	"description": "",
	"content": "명령어  나중에 생각안날때 보려고 만든 Ubuntu 18.04 에서 배포시 많이 사용했던 명령어들\n  netstat -nlpt 현재 listen 중인 포트 확인 netstat -nat로도 확인 가능 netstat -nap | grep 포트 번호 특정 포트 확인 fuser -k -n tcp 포트번호 포트번호에서 사용중인 프로세스 죽이기 vi로 파일을 읽고 수정했을 때 :wq저장후 닫기 :qa 저장안하고 닫기 :qa! qa안될때 docker ps 현재 켜져있는 docker 확인 docker stop 뒤에 docker ps `으로 감싸면 실행중인 docker 파일들 종료 docker-compose build --no-cache 캐시 이용 안하고 build iptables -L --line-numbers iptable 룰 번호 확인 iptables -D chain이름 숫자 위에서 확인한 번호 룰 삭제할 때 iptables -I chain이름 -p tcp -s 허용할 ip --dport 포트번호 -j ACCEPT 지정한 포트 번호 특정 IP 허용 맨 윗줄에 룰 삽입  SSH 접속 느릴 때  vi /etc/ssh/sshd_config로 sshd_config 파일 수정  GSSAPIAuthentication no 주석 해제 UseDNS no주석 해제 $ service sshd restart 로 재시작    "
},
{
	"uri": "https://gudongyeop.github.io/%EB%8B%A8%EC%88%9C%EA%B8%B0%EB%A1%9D/%EC%BD%94%EB%A1%9C%EB%82%98...html",
	"title": "코로나...",
	"tags": ["SSAFY", "SSAFY3기", "망할코로나"],
	"description": "",
	"content": "코로나로 인한 온라인 수업  갑자기 터진 코로나로 인해 모든 수업이 온라인으로 변경됨.\n 코로나로 인해 오프라인으로 열심히 참석하던 수업들이 모두 온라인 수업으로 변경되었고, 알고리즘 스터디 등 열정적으로 시작하던 개발자가 되는 목표가 잠시 흔들렸다.\n하지만 온라인 수업의 장점도 있었고, 결국 재밌게 마칠 수 있었다.\n"
},
{
	"uri": "https://gudongyeop.github.io/%EB%8B%A8%EC%88%9C%EA%B8%B0%EB%A1%9D/2%ED%95%99%EA%B8%B0-%EC%8B%9C%EC%9E%91.html",
	"title": "2학기 시작",
	"tags": ["SSAFY", "SSAFY3기", "SSAFY 2학기"],
	"description": "",
	"content": "SSAFY 2학기 시작  잠시 주춤해진 코로나로 인해 온/오프라인 수업 병행\n 다양한 프로젝트를 경험해 볼 수 있는 2학기가 시작되었고 오프라인으로 사람들을 만나서 프로젝트를 할 수 있어서 값진 경험이 되었다.\n"
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94.html",
	"title": "6월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/django/django_paginator.html",
	"title": "Django Paginator",
	"tags": ["django", "paginator", "pagination"],
	"description": "",
	"content": "Paginator 사용하기   게시판 같은 곳에서 리스트의 양이 많아 질 경우 나누어 보여주기 위해서 사용\n여기 적힌 예에서 model은 Review 이고 forms는 ReviewForm이다.\nbootstrap을 사용했음.\n 1. views.py에 내용 추가하기 from django.core.paginator import Paginator\rdef review_list(request):\rreviews = Review.objects.order_by(\u0026#39;-pk\u0026#39;)\rpaginator = Paginator(reviews, 5) #한 페이지 당 몇개 씩 보여줄 지 지정\r page_number = request.GET.get(\u0026#39;page\u0026#39;)\rpage_obj = paginator.get_page(page_number)\rreviews_all = get_list_or_404(Review) #전체 개수를 보기 위해\r total_count = len(reviews_all)\t# 리뷰의 총 개수  total_page = total_count//5\t# 리뷰 총 개수 / 한 페이지에 보여줄 수\r page_range = range(1,total_page+1)\rcontext = {\r\u0026#39;reviews\u0026#39;: reviews,\r\u0026#39;page_obj\u0026#39;: page_obj,\r\u0026#39;page_range\u0026#39;: page_range,\r}\rreturn render(request, \u0026#39;앱이름/review_list.html\u0026#39;, context)\r2. 리스트를 보여줄 html파일 수정 {% for review in page_obj %}\r\u0026lt;div class=\u0026#34;card mb-3 border-info\u0026#34; onclick=\u0026#34;location.href=\u0026#39;/community/{{ review.pk }}/\u0026#39;\u0026#34; style=\u0026#34;cursor:pointer\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;card-header\u0026#34;\u0026gt;\r{{ review.movie_title }}\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt;\r\u0026lt;h5 class=\u0026#34;card-title\u0026#34;\u0026gt;{{ review.title }}\u0026lt;/h5\u0026gt;\r\u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;{{ review.content }} \u0026lt;/p\u0026gt;\r\u0026lt;a href=\u0026#34;{% url \u0026#39;reviews:detail\u0026#39; review.pk %}\u0026#34; class=\u0026#34;btn btn-info float-right\u0026#34;\u0026gt;Go Detail\u0026lt;/a\u0026gt;\r\u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;{{ review.created_at|date:\u0026#34;y.m.d P\u0026#34; }}\u0026lt;/h3\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r{% endfor %}\r\u0026lt;!-- Paginator !--\u0026gt;\r\u0026lt;nav aria-label=\u0026#34;Page navigation\u0026#34;\u0026gt;\r\u0026lt;ul class=\u0026#34;pagination\u0026#34;\u0026gt;\r{% if page_obj.has_previous %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page_obj.previous_page_number }}\u0026#34;\u0026gt;Previous\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt;Previous\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endif %}\r{% for page in page_range %}\r{% if page_obj.number == page %}\r\u0026lt;li class=\u0026#34;page-item active\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page }}\u0026#34;\u0026gt;{{ page }}\u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page }}\u0026#34;\u0026gt;{{ page }}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endif %}\r{% endfor %}\r{% if page_obj.has_next %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;?page={{ page_obj.next_page_number }}\u0026#34;\u0026gt;Next\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;page-item\u0026#34;\u0026gt;\u0026lt;a class=\u0026#34;page-link\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt;Next\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endif %}\r\u0026lt;/ul\u0026gt;\r\u0026lt;/nav\u0026gt;\r 현재 페이지에 따라 표시를 다르게 하기 위하여 {% if page_obj.number == page %}을 사용함    Django 기초 Django CRUD Django User(1) Django User(2) Django Comment Django M:N Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/server/https-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0.html",
	"title": "https 사용하기",
	"tags": ["ssl", "certbot", "https"],
	"description": "",
	"content": "https 사용하기(docker, nginx 사용)  처음에 openssl 로 .key 와 .cert를 만들어 사용했지만 인증되지 않았기 때문에 https가 나왔음. 그래서 certbot을 이용하여 다시 인증키를 발급받아 사용.\n 1. certbot 이용하여 키 발급  certbot certonly --standalone -d 도메인이름 으로 키 발급 발급이 완료되면 /etc/letsencrypt/live/도메인이름 경로에 cert.pem chain.pem fullchain.pem privkey.pem 파일들이 생김  2. Nginx 설정  나는 default.conf에서 설정하여 실행시켰음 생성된 파일을 다른 폴더에 넣어서 사용했음  upstream client {\rserver 도메인이름;\r}\rserver {\rlisten 80;\rserver_name 도메인이름;\rreturn 301 https://$host$request_uri;\r}\rserver {\rlisten 443 ssl;\rserver_name 도메인이름; ssl_certificate /ssl/fullchain1.pem;\rssl_certificate_key /ssl/privkey1.pem;\rlocation / {\rproxy_pass http://도메인이름;\rproxy_http_version 1.1;\rproxy_set_header Upgrade $http_upgrade;\rproxy_set_header Connection \u0026quot;Upgrade\u0026quot;;\r}\r}\r3. Docker-compose.yml 수정  default.conf 파일을 docker-compose.yml과 같은 경로에 넣어서 실행시켰음.  nginx:\rrestart: always\rimage: nginx:latest ports:\r- \u0026#39;80:80\u0026#39; - \u0026#39;443:443\u0026#39;\rvolumes:\r- \u0026#39;./default.conf:/etc/nginx/conf.d/default.conf\u0026#39;\r- \u0026#39;/새로 만든 폴더/ssl/:/ssl/\u0026#39;\r  구글링을 통해 필요하다고 생각하는 부분만 넣어서 사용했기 때문에 정확하지 않을 수 있음. 이론 공부도 함께 해야할 듯.\n "
},
{
	"uri": "https://gudongyeop.github.io/%EB%8B%A8%EC%88%9C%EA%B8%B0%EB%A1%9D/2%ED%95%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%AA%A8%EB%91%90-%EC%99%84%EB%A3%8C.html",
	"title": "2학기 프로젝트 완료",
	"tags": ["SSAFY", "SSAFY3기", "SSAFY 2학기"],
	"description": "",
	"content": "SSAFY 2학기 프로젝트 완료  2학기의 모든 프로젝트를 잘 마칠 수 있었고, 많은 발전이 생겼다.\n 다양한 프로젝트들을 하며 좋은 경험을 했고, 하고 싶은 분야와 재밌는 분야 및 앞으로 무엇을 더 공부할지 정할 수 있게 되었다.\n"
},
{
	"uri": "https://gudongyeop.github.io/til/7%EC%9B%94.html",
	"title": "7월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/django/django_login.html",
	"title": "Django User (1)",
	"tags": ["django", "sign in", "sign out", "sign up"],
	"description": "",
	"content": "User 관리(sign in, out, up)   로그인 기능을 넣는 방법\nmodel을 만들 필요 없이 django에서 제공하는 user 모델을 사용함\nbootstrap 사용을 기반으로 작성함\n 1. accounts라는 새로운 app을 작성 2. 기본 제공되는 User 모델을 사용하기 때문에 forms.py만 작성 from django.forms import ModelForm\rfrom django.contrib.auth.models import User # django에서 기본 제공하는 model이 있음.\r from django import forms\rclass SignupForm(ModelForm): #회원가입을 제공하는 class이다.\r username = forms.CharField(\rmax_length=20,\rmin_length=6,\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r}\r)\r)\rpassword = forms.CharField(\rmax_length=16,\rmin_length=8,\rwidget=forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r\u0026#39;placeholder\u0026#39;: \u0026#39;8글자 이상, 16글자 이하로 작성해주세요.\u0026#39;\r}\r)\r)\rpassword_confirm = forms.CharField(\rmax_length=16,\rmin_length=8,\rwidget=forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r\u0026#39;placeholder\u0026#39;: \u0026#39;8글자 이상, 16글자 이하로 작성해주세요.\u0026#39;\r}\r)\r)\rlast_name = forms.CharField(\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\rfirst_name = forms.CharField(\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\remail = forms.EmailField(\rwidget=forms.EmailInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\rfield_order=[\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;,\u0026#39;password_confirm\u0026#39;,\u0026#39;last_name\u0026#39;,\u0026#39;first_name\u0026#39;,\u0026#39;email\u0026#39;]\r#field_order는 만들어지는 입력양식의 순서, password 바로 밑에 password_check 양식을 추가하기 위해 사용\r class Meta:\rmodel=User\rwidgets = {\u0026#39;password\u0026#39;:forms.PasswordInput}\rfields = [\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;,\u0026#39;last_name\u0026#39;,\u0026#39;first_name\u0026#39;,\u0026#39;email\u0026#39;]\r#User model에 정의된 username, passwordm last_name, first_name, email을 입력양식으로\r class SigninForm(ModelForm):\rusername = forms.CharField(\rmax_length=20,\rmin_length=6,\rwidget=forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r}\r)\r)\rpassword = forms.CharField(\rmax_length=16,\rmin_length=8,\rwidget=forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r)\rclass Meta:\rmodel = User\rwidgets = {\u0026#39;password\u0026#39;:forms.PasswordInput}\rfields = [\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;]\r3. urls.py와 views.py 작성 ### urls.py ###\r from django.urls import path, include\rfrom . import views\rapp_name=\u0026#39;accounts\u0026#39;\rurlpatterns = [\rpath(\u0026#39;signup/\u0026#39;, views.signup, name=\u0026#34;signup\u0026#34;),\rpath(\u0026#39;signin/\u0026#39;, views.signin, name=\u0026#34;signin\u0026#34;),\rpath(\u0026#39;signout/\u0026#39;, views.signout, name=\u0026#34;signout\u0026#34;),\rpath(\u0026#39;community/\u0026#39;, include(\u0026#39;community.urls\u0026#39;)),\r]\r### views.py ###\r from django.shortcuts import render, redirect\rfrom django.urls.base import reverse\rfrom django.contrib.auth.models import User\rfrom django.contrib.auth import login, authenticate, logout\r#login은 login처리를 해주며, authenticate는 아이디와 비밀번호가 모두 일치하는 User 객체를 추출\r from .forms import SigninForm, SignupForm\r# Create your views here.\r def signup(request):#역시 GET/POST 방식을 사용하여 구현한다.\r if request.method == \u0026#34;GET\u0026#34;:\rform = SignupForm()\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;accounts/signup.html\u0026#39;, context)\relif request.method == \u0026#34;POST\u0026#34;:\rform = SignupForm(request.POST)\rif form.is_valid():\rif form.cleaned_data[\u0026#39;password\u0026#39;] == form.cleaned_data[\u0026#39;password_confirm\u0026#39;]:\r#cleaned_data는 사용자가 입력한 데이터를 뜻한다.\r #즉 사용자가 입력한 password와 password_check가 맞는지 확인하기위해 작성해주었다.\r new_user = User.objects.create_user(\rform.cleaned_data[\u0026#39;username\u0026#39;],\rform.cleaned_data[\u0026#39;email\u0026#39;],\rform.cleaned_data[\u0026#39;password\u0026#39;]\r)\r#User.object.create_user는 사용자가 입력한 name, email, password를 가지고 아이디를 만든다.\r #바로 .save를 안해주는 이유는 User.object.create를 먼저 해주어야 비밀번호가 암호화되어 저장된다.\r new_user.last_name = form.cleaned_data[\u0026#39;last_name\u0026#39;]\rnew_user.first_name = form.cleaned_data[\u0026#39;first_name\u0026#39;]\r#나머지 입력하지 못한 last_name과, first_name은 따로 지정해준다.\r new_user.save()\rreturn redirect(reverse(\u0026#39;reviews:review_list\u0026#39;))\relse:\rcontext = {\r\u0026#39;form\u0026#39;:form,\r\u0026#39;error\u0026#39;:\u0026#39;비밀번호와 비밀번호 확인이 다릅니다.\u0026#39;\r}\rreturn render(request, \u0026#39;accounts/signup.html\u0026#39;,)\r#password와 password_check가 다를 것을 대비하여 error를 지정해준다.\r else: #form.is_valid()가 아닐 경우, 즉 유효한 값이 들어오지 않았을 경우\r context = {\r\u0026#39;form\u0026#39;:form\r}\rreturn render(request, \u0026#39;accounts/signup.html\u0026#39;, context)\rdef signin(request):\rif request.method == \u0026#34;GET\u0026#34;:\rform = SigninForm()\rcontext = {\r\u0026#39;form\u0026#39;: form,\r}\rreturn render(request, \u0026#39;accounts/signin.html\u0026#39;, context)\relif request.method == \u0026#34;POST\u0026#34;:\rform = SigninForm(request.POST)\rid = request.POST[\u0026#39;username\u0026#39;]\rpw = request.POST[\u0026#39;password\u0026#39;]\ruser = authenticate(username=id, password=pw) # username과 password를 비교, 같으면 해당객체 반환 아니면 none\r if user: # user 값이 있으면\r login(request, user=user) # user값으로 로그인\r return redirect(\u0026#39;reviews:review_list\u0026#39;)\relse:\rcontext = {\r\u0026#39;form\u0026#39; : form,\r\u0026#39;error\u0026#39;: \u0026#39;아이디나 비밀번호가 일치하지 않습니다.\u0026#39;\r}\rreturn render(request, \u0026#39;accounts/signin.html\u0026#39;, context)\rdef signout(request):\rlogout(request)\rreturn redirect(\u0026#39;reviews:review_list\u0026#39;)\r4. 로그인 관련 html을 작성  bootstrap을 사용하여 네비게이션 바에 로그인 상태에 따라 다르게 표시함\n \u0026lt;!-- base.html 일부 --\u0026gt;\r\u0026lt;div class=\u0026#34;collapse navbar-collapse justify-content-between\u0026#34; id=\u0026#34;navbarNav\u0026#34;\u0026gt;\r\u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r{% if request.resolver_match.url_name == \u0026#39;create\u0026#39; %}\r\u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:review_list\u0026#39; %}\u0026#34;\u0026gt;List\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item active\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:create\u0026#39; %}\u0026#34;\u0026gt;New\u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r{% else %}\r\u0026lt;li class=\u0026#34;nav-item active\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:review_list\u0026#39; %}\u0026#34;\u0026gt;List\u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;{% url \u0026#39;reviews:create\u0026#39; %}\u0026#34;\u0026gt;New\u0026lt;/a\u0026gt;\r\u0026lt;/li\u0026gt;\r{% endif %}\r\u0026lt;/ul\u0026gt;\r\u0026lt;div class=\u0026#34;d-flex flex-row\u0026#34;\u0026gt;\r{% if user.is_authenticated %}\u0026lt;!-- login 된 상태일 경우 --\u0026gt;\r\u0026lt;div class=\u0026#34;p-2\u0026#34;\u0026gt;{{ user.username }}님 환영합니다.\u0026lt;/div\u0026gt;\r\u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item dropdown\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link dropdown-toggle\u0026#34; href=\u0026#34;#\u0026#34; id=\u0026#34;navbarDropdownMenuLink\u0026#34; role=\u0026#34;button\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34; aria-haspopup=\u0026#34;true\u0026#34; aria-expanded=\u0026#34;false\u0026#34;\u0026gt;\rSign out\r\u0026lt;/a\u0026gt;\r\u0026lt;div class=\u0026#34;dropdown-menu\u0026#34; aria-labelledby=\u0026#34;navbarDropdownMenuLink\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signout\u0026#39; %}\u0026#34;\u0026gt;Sign Out\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r{% else %}\r\u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item dropdown\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link dropdown-toggle\u0026#34; href=\u0026#34;#\u0026#34; id=\u0026#34;navbarDropdownMenuLink\u0026#34; role=\u0026#34;button\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34; aria-haspopup=\u0026#34;true\u0026#34; aria-expanded=\u0026#34;false\u0026#34;\u0026gt;\rSign In\r\u0026lt;/a\u0026gt;\r\u0026lt;div class=\u0026#34;dropdown-menu\u0026#34; aria-labelledby=\u0026#34;navbarDropdownMenuLink\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signup\u0026#39; %}\u0026#34;\u0026gt;Sign Up\u0026lt;/a\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signin\u0026#39; %}\u0026#34;\u0026gt;Sign In\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r{% endif %}\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r5. singup.html 작성 \u0026lt;!-- signup.html --\u0026gt;\r{% extends \u0026#39;base.html\u0026#39; %}\r{% load static %}\r{% block body %}\r{% if error %}\r\u0026lt;h3 class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/h3\u0026gt;\r{% endif %}\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r\u0026lt;div class=\u0026#34;form-row mb-3 mt-5\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.username }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.password }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password_confirm\u0026#34;\u0026gt;Password Confirm\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.password_confirm }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;last_name\u0026#34;\u0026gt;Last name\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.last_name }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;col-6\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;last_name\u0026#34;\u0026gt;First name\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.first_name }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;email\u0026#34;\u0026gt;Email\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.email }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-info col-12\u0026#34;\u0026gt;SIGN UP\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;a href=\u0026#34;/community/\u0026#34; class=\u0026#34;btn btn-secondary col-12\u0026#34;\u0026gt;CANCEL\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r{% endblock %}\r6. signin.html 작성 \u0026lt;!-- signin.html --\u0026gt;\r{% extends \u0026#39;base.html\u0026#39; %}\r{% load static %}\r{% block body %}\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r\u0026lt;div class=\u0026#34;form-row mb-3 mt-5\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r{% if error %}\r\u0026lt;div class=\u0026#34;d-flex flex-row\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;username\u0026#34; class=\u0026#34;mr-3\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r\u0026lt;p class=\u0026#34;text-danger p-0 m-0\u0026#34;\u0026gt;{{ error }}\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r{% else %}\r\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r{% endif %}\r\u0026lt;div\u0026gt;{{ form.username }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;{{ form.password }}\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-3\u0026#34;\u0026gt;\r\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-info col-12\u0026#34;\u0026gt;SIGN IN\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row justify-content-between\u0026#34;\u0026gt;\r\u0026lt;a href=\u0026#34;/accounts/signup/\u0026#34; class=\u0026#34;btn btn-info col-5\u0026#34;\u0026gt;SIGN UP\u0026lt;/a\u0026gt;\r\u0026lt;a href=\u0026#34;/community/\u0026#34; class=\u0026#34;btn btn-secondary col-5\u0026#34;\u0026gt;CANCEL\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r{% endblock %}\r7. 로그인 페이지를 modal로 변경하기  base.html에서 include를 사용하여 modal 부분을 적은 html을 불러온다.  \u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt;\r\u0026lt;li class=\u0026#34;nav-item dropdown\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;nav-link dropdown-toggle\u0026#34; href=\u0026#34;#\u0026#34; id=\u0026#34;navbarDropdownMenuLink\u0026#34; role=\u0026#34;button\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34; aria-haspopup=\u0026#34;true\u0026#34; aria-expanded=\u0026#34;false\u0026#34;\u0026gt;\rSign Up / Sign In\r\u0026lt;/a\u0026gt;\r\u0026lt;div class=\u0026#34;dropdown-menu\u0026#34; aria-labelledby=\u0026#34;navbarDropdownMenuLink\u0026#34;\u0026gt;\r\u0026lt;a class=\u0026#34;dropdown-item\u0026#34; href=\u0026#34;{% url \u0026#39;accounts:signup\u0026#39; %}\u0026#34;\u0026gt;Sign Up\u0026lt;/a\u0026gt;\r\u0026lt;a type=\u0026#34;button\u0026#34; class=\u0026#34;dropdown-item\u0026#34; data-toggle=\u0026#34;modal\u0026#34; data-target=\u0026#34;#SIGNIN\u0026#34;\u0026gt;\rSign In\r\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r{% endif %}\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r{% include \u0026#39;modal.html\u0026#39; %}\r modal.html을 작성 후 form action을 통해 만들어 놓은 sigin으로 보내어 로그인  {% load static %}\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;SIGN IN\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;!-- Modal --\u0026gt;\r\u0026lt;div class=\u0026#34;modal fade\u0026#34; id=\u0026#34;SIGNIN\u0026#34; tabindex=\u0026#34;-1\u0026#34; role=\u0026#34;dialog\u0026#34; aria-labelledby=\u0026#34;SIGNINTitle\u0026#34; aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-dialog modal-dialog-centered\u0026#34; role=\u0026#34;document\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-content\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-header\u0026#34;\u0026gt;\r\u0026lt;h5 class=\u0026#34;modal-title\u0026#34; id=\u0026#34;SIGNINTitle\u0026#34;\u0026gt;SIGN IN\u0026lt;/h5\u0026gt;\r\u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;close\u0026#34; data-dismiss=\u0026#34;modal\u0026#34; aria-label=\u0026#34;Close\u0026#34;\u0026gt;\r\u0026lt;span aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\u0026amp;times;\u0026lt;/span\u0026gt;\r\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;modal-body\u0026#34;\u0026gt;\r\u0026lt;form action=\u0026#34;{% url \u0026#39;accounts:signin\u0026#39; %}\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r\u0026lt;div class=\u0026#34;form-row mb-3 mt-5\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r{% if error %}\r\u0026lt;div class=\u0026#34;d-flex flex-row\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;username\u0026#34; class=\u0026#34;mr-3\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r\u0026lt;p class=\u0026#34;text-danger p-0 m-0\u0026#34;\u0026gt;{{ error }}\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r{% else %}\r\u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt;\r{% endif %}\r\u0026lt;div\u0026gt;\u0026lt;input type=\u0026#39;text\u0026#39; id=\u0026#39;username\u0026#39; name=\u0026#34;username\u0026#34; class=\u0026#34;form-control\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;form-row mb-6\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;col-12\u0026#34;\u0026gt;\r\u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;div\u0026gt;\u0026lt;input type=\u0026#39;password\u0026#39; id=\u0026#39;password\u0026#39; name=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;modal-footer mt-5\u0026#34;\u0026gt;\r\u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-secondary\u0026#34; data-dismiss=\u0026#34;modal\u0026#34;\u0026gt;Close\u0026lt;/button\u0026gt;\r\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Sign In\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r참고   내가 여기서 사용한 것은 django에서 기본으로 제공하는 user 모델만 사용했음. 하지만 django에서는 UserCreationForm 이라는 ModelForm도 제공함. 다만, UserCreationForm은 username과 password1, 2만 입력받음.    Django 기초 Django CRUD Django Paginator Django User(2) Django Comment Django M:N Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/server/nginx-%ED%8C%8C%EC%9D%BC-%EC%97%85%EB%A1%9C%EB%93%9C-%EC%9A%A9%EB%9F%89-%EC%84%A4%EC%A0%95.html",
	"title": "Nginx 파일 업로드 용량 설정",
	"tags": ["Nginx"],
	"description": "",
	"content": "Docker-compose \u0026amp; Nginx  Docker-compose와 Nginx 사용하며 파일 업로드시 용량이 클 경우 해결하기 위한 방법\n   default.conf 파일\n....\rserver {\rlisten 443 ssl;\rserver_name frontend;\rssl on; ssl_certificate /ssl/fullchain.pem;\rssl_certificate_key /ssl/privkey.pem; access_log /var/log/nginx/data-access.log combined;\rlocation / {\rproxy_pass http://frontend;\rproxy_set_header Host $host;\rproxy_http_version 1.1;\rproxy_set_header Upgrade $http_upgrade;\rclient_max_body_size 20M;\r......\r  default.conf 에서 location 부분에 client_max_body_size \u0026lt;용량\u0026gt;; 추가\n  "
},
{
	"uri": "https://gudongyeop.github.io/django/django_change_user.html",
	"title": "Django User (2)",
	"tags": ["django", "sign in", "sign out", "sign up"],
	"description": "",
	"content": "User 관리(change, customizing)   customizing 방법은 여러가지가 있지만, 앞서 사용했던 방법과 다르게 여기서는 AbstractUser를 상속 받아서 User를 customizing후 사용함\nUserChangeForm도 마찬가지로 ChangeForm을 상속받아 customizing 해서 사용함\nbootstrap을 사용하기 위해 widget에 attrs도 추가\n 1. models.py에서 AbstractUser를 상속 from django.db import models\rfrom django.contrib.auth.models import AbstractUser # AbstractUser를 가져옴\r # Create your models here.\r class User(AbstractUser): # User 모델을 AbstractUser 상속받음\r # 추가할 내용을 작성\r Korean_name = models.CharField(max_length=20, blank=True)\raddress = models.CharField(max_length=100, blank=True)\rphone_number = models.CharField(max_length=11, blank=True)\r2. settings.py 에서 AUTH_USER_MODEL 추가(공식문서 참조) # settings.py 에 AUTH_USER_MODEL = \u0026#39;app 이름.User\u0026#39;\r AUTH_USER_MODEL = \u0026#39;accounts.User\u0026#39;\r3. bootstrap을 위한 class: form-control 추가를 위하여 forms.py 작성 from django.contrib.auth.forms import UserCreationForm # 기본 제공하는 modelForm을 사용하기 위해\r from django import forms\rfrom .models import User\t# 커스터마이징한 User 모델을 불러옴\r from django.contrib.auth.forms import UserChangeForm # User 정보를 수정하기 위해\r from django.contrib.auth import get_user_model\t# User 정보를 수정할 때 정보를 가져오기 위해\r class SignupForm(UserCreationForm):\t# 상속받아 사용할 클래스 선언\r def __init__(self, *args, **kwargs):\t# init을 통해 존재하던 필드의 정보를 수정\r super().__init__(*args, **kwargs)\rclass_update_fields = [\u0026#39;password1\u0026#39;, \u0026#39;password2\u0026#39;]\rfor field_name in class_update_fields:\rself.fields[field_name].widget.attrs.update({\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r})\rclass Meta:\t# Meta 클래스를 통해 새로 추가한 필드의 attrs에서 form-control 추가\r model = User\t# Bootstrap을 사용하기 위해서 추가했음\r fields = (\r\u0026#39;username\u0026#39;,\r\u0026#39;Korean_name\u0026#39;,\r\u0026#39;address\u0026#39;,\r\u0026#39;phone_number\u0026#39;,\r)\rwidgets = {\r\u0026#39;username\u0026#39;: forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r),\r\u0026#39;Korean_name\u0026#39;: forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r),\r\u0026#39;address\u0026#39;: forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r),\r\u0026#39;phone_number\u0026#39;: forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;,\r}\r)\r}\rclass CustomUserChangeForm(UserChangeForm):\t# User 정보를 update하기 위하여  class Meta:\rmodel = get_user_model()\rfields = [\u0026#39;username\u0026#39;, \u0026#39;Korean_name\u0026#39;, \u0026#39;address\u0026#39;, \u0026#39;phone_number\u0026#39;]\r 메타 클래스에서 password widget을 설정해도 전혀 변화가 없음. 공식 문서에 따르면 ModelForm 클래스에서 명시적으로 선언된 필드는 메타 클래스에서 설정된 속성의 영향을 받지 않는다고 함.\n 4. Migration 실행   model의 변경사항이 있기 때문에 migration을 진행한다\n$ python manage.py makemigrations\r$ python manage.py migrate\r  5. views.py와 urls.py에 Update를 추가 #### views.py\r from django.shortcuts import render, redirect\rfrom .forms import CustomUserChangeForm # customizing 한 changeform을 불러옴\r def update(request, pk): # 각각의 유저 정보를 얻고 수정하기 위해 pk값을 받아옴\r if request.method == \u0026#39;POST\u0026#39;:\rform = CustomUserChangeForm(request.POST, instance=request.user) # instance를 가져와야 기존에 있던 정보를 토대로 수정할 수 있음, 없을경우 빈칸으로 시작됨\r if form.is_valid():\rform.save()\rreturn redirect(\u0026#39;accounts:index\u0026#39;) # 수정을 완료하면 저장 후 인덱스 페이지로 redirect\r else:\rform = CustomUserChangeForm(instance=request.user)\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;accounts/update.html\u0026#39;, context)\r Django 기초 Django CRUD Django Paginator Django User(1) Django Comment Django M:N Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/til/8%EC%9B%94.html",
	"title": "8월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/basics.html",
	"title": "About Blog",
	"tags": [],
	"description": "",
	"content": "첫 시작  2020년 1월, 처음 코딩을 배우면서 github.io로 블로그를 한번 만들어 보려는 생각. 배우고 있는 것들을 간단하게 올려볼 생각. 4월, Hugo Theme을 이용해 만드는 중.  "
},
{
	"uri": "https://gudongyeop.github.io/server/docker-compose%EB%A1%9C-django-%EC%82%AC%EC%9A%A9.html",
	"title": "Docker-compose로 Django 사용",
	"tags": ["Django", "Docker-compose", "Gunicorn"],
	"description": "",
	"content": "Docker-compose \u0026amp; Django \u0026amp; Gunicorn  Docker-compose로 Django \u0026amp; Gunicorn 사용하기\n   Dockerfile\nFROMpython:3.6.9\rENV PYTHONUNBUFFERED 1\rRUN mkdir /backend\rWORKDIR/backend\rADD requirements.txt /backend/\rRUN pip install --upgrade pip\rRUN pip install -r requirements.txt\rADD . /backend/\r  docker-compose.yml\nbackend:\rbuild: context: ./backend\rdockerfile: Dockerfile\rrestart: always\renv_file:\r- ./backend/.env\rexpose:\r- \u0026#34;8001\u0026#34;\rvolumes:\r- \u0026#39;./backend:/backend\u0026#39;\rcommand:\r\u0026#34;gunicorn --workers=2 --bind=0.0.0.0:8001 backend.wsgi:application\u0026#34;\r 내부 접속만 열기위한 설정  backend-dev:\rbuild: context: ./backend\rdockerfile: Dockerfile\rrestart: always\renv_file:\r- ./backend/.env\rports:\r- \u0026#34;8000:8000\u0026#34;\rvolumes:\r- \u0026#39;./backend:/backend\u0026#39;\rcommand:\r\u0026#34;gunicorn --workers=2 --bind=0.0.0.0:8000 backend.wsgi:application\u0026#34;\r 포트 8000은 외부 접속을 할 수 있도록 하여 개발 중 서버에 있는 DB를 사용    expose를 사용하여 컨테이너 내부의 포트만 사용해 컨테이너 내부 IP 172.xxxxx로 서버에서만 접속 가능하도록 했음\n  명령어 docker inspect \u0026lt;컨테이너 id\u0026gt; 로 내부 IP 를 확인 후 vue.config.js에서 proxy를 사용하여 프록시 설정까지 해줌.\n 사용 예)  module.exports = {\rdevServer: {\rdisableHostCheck: true,\rproxy: {\r\u0026#39;/api\u0026#39; : {\rtarget: \u0026#39;http://172.19.0.4:8001\u0026#39;,\r.......\r 컨테이너 중지 후 다시 킬 경우 내부 IP가 변동될 수 있기 때문에 확인하여 수정하거나 내부 IP를 고정시키는 방법을 봐야함.    "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/baekjoon.html",
	"title": "백준 문제풀이",
	"tags": ["백준", "baekjoon"],
	"description": "",
	"content": "BAEKJOON 의 알고리즘 문제  BAEKJOON 답  "
},
{
	"uri": "https://gudongyeop.github.io/%EB%8B%A8%EC%88%9C%EA%B8%B0%EB%A1%9D/%EC%9B%B9-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A1%9C-%EC%B7%A8%EC%97%85.html",
	"title": "웹 개발자로 취업",
	"tags": ["SSAFY", "SSAFY3기", "SSAFY 2학기"],
	"description": "",
	"content": "웹 개발자로 취업  프로젝트를 잘 마침과 동시에 웹 개발자로 취업\n 백엔드와 서버에 관심이 많았고 스타트업에서 일을 시작하고 싶었기에 스타트업 위주로 하고 싶은 일을 할 수 있는 곳들로 많은 서류를 제출했고, 많은 탈락을 경험하며 결국 원하는 업무와 환경을 제공해주는 곳에 취업을 하게 되었다.\n"
},
{
	"uri": "https://gudongyeop.github.io/django/django_comment.html",
	"title": "Django Comment",
	"tags": ["django", "comment", "1:N"],
	"description": "",
	"content": "Django 댓글 작성 \u0026amp; 삭제  게시글의 model은 Article로 만들었을 경우임. ForeignKey를 사용.\n 1. 댓글 작성  models.py에서 댓글 설정을 위한 class를 만든다.(user 설정을 안했을 경우)  class Comment(models.Model):\rarticle = models.ForeignKey(Article, on_delete=models.CASCADE)\r#on_delete=models.CASCADE는 ForeignKeyField가 삭제 될때 인스턴스도 같이 삭제\r content = models.TextField()\r forms.py에도 추가  from django import forms\rfrom .models import Comment\rclass CommentForm(forms.ModelForm):\rclass Meta:\rmodel = Comment\rfields = [\u0026#39;content\u0026#39;]\r# fields를 __all__로 해도 됨(all로 했을 경우에는 댓글 작성시 모든 값을 잘 입력 해야한다. *all로 하고 필요한 값을 입력 안했을 경우 저장이 되지 않음)\r  makemigrations와 migrate를 해야함\n  views.py에서 댓글 작성하는 함수를 추가  from .models import Article, Comment\rfrom .forms import ArticleForm, CommentForm\rdef comments_create(request, article_pk):\rarticle = get_object_or_404(Article, article_pk=pk)\rif request.method==\u0026#39;POST\u0026#39;:\rform = CommentForm(request.POST)\rif form.is_valid():\rcomment = form.save(commit=False)\rcomment.article = article\rcomment.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\relse:\rform = CommentForm()\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;articles/comments_create.html\u0026#39;, context)\r commit=False을 사용 하면 간단하게 db에 당장 저장하지 않고 지연시켜 중복 저장을 방지. 그렇기에 comment.article=article 을 통해 not null 에러가 발생하지 않게 해준다.\n  urls.py에도 추가  path(\u0026#39;\u0026lt;int:article_pk\u0026gt;/comments/\u0026#39;, views.comments_create, name=\u0026#39;comments_create\u0026#39;),\r html 작성  \u0026lt;!-- 먼저 게시글을 보여주는 html에서 댓글을 나오게 하기 위해 --\u0026gt;\r{% for comment in article.comment_set.all %}\r\u0026lt;li\u0026gt;{{ comment.content }}\u0026lt;/li\u0026gt;\r{% endfor %}\r\u0026lt;!-- 댓글을 작성하는 html을 만들경우 --\u0026gt;\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r{{ form.content }}\r\u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;작성\u0026#34;\u0026gt;\r\u0026lt;/form\u0026gt;\r2. 댓글 삭제  views.py에 삭제하는 함수 추가  def comments_delete(request, comment_pk,article_pk):\rcomment = get_object_or_404(Comment, pk=comment_pk)\rarticle = get_object_or_404(Article, pk=article_pk)\rcomment.delete()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\r urls.py  path(\u0026#39;\u0026lt;int:article_pk\u0026gt;/comments/\u0026lt;int:comment_pk\u0026gt;/delete\u0026#39;, views.comments_delete, name=\u0026#39;comments_delete\u0026#39;)\r 댓글나오는 html  {% for comment in article.comment_set.all %}\r\u0026lt;li\u0026gt;{{ comment.content }}\u0026lt;a href=\u0026#34;{% url \u0026#39;articles:comments_delete\u0026#39; article.pk comment.pk %}\u0026#34;\u0026gt;삭제\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endfor %}\r  Django 기초 Django CRUD Django Paginator Django User(1) Django User(2) Django M:N Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/project.html",
	"title": "Project",
	"tags": [],
	"description": "",
	"content": "완료한 프로젝트   Django를 이용한 간단한 웹페이지 구현\nGithub repo 주소\n  Django와 vue를 이용한 영화 추천 사이트\nGithub repo 주소\n[배포 중단]\n  비접촉 체온 측정(IoT 프로젝트)\nGithub repo 주소\n[배포 중단]\n  수상한 동물 사전(AI 이용한 동물 판단)\nGithub repo 주소\n[배포 중단]\n  정수리영역 점수(재미로 보는 탈모진단)\nGithub repo 주소\n[배포 중단]\n  현재 다른 개인 프로젝트 진행중\n  "
},
{
	"uri": "https://gudongyeop.github.io/til/9%EC%9B%94.html",
	"title": "9월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/django/django_like_follow.html",
	"title": "Django M:N",
	"tags": ["django", "like", "follow", "M:N"],
	"description": "",
	"content": "Django M:N model  Django에서 좋아요 기능이나 팔로우 기능처럼 M:N 관계 만들기\nManyToManyField 이용\n  좋아요 기능을 위한 model 추가(게시글 모델)  # 좋아요 기능을 위한 article_like_users 테이블 생성\r class 좋아요 기능을 추가할 클래스 명:\r like_users = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name=\u0026#39;like_articles\u0026#39;)\r# 팔로우 기능을 위한   팔로우 기능을 위한 model 추가(User 모델을 Customizing)  class User(AbstractUser):\rfollowers = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name=\u0026#39;followings\u0026#39;)\r 게시글 app의 views.py에서 좋아요 기능 설정  def like(request, pk):\rarticle = get_object_or_404(Article, pk=pk)\r# 좋아요를 누르면, \u0026gt;\u0026gt; DB에 존재할 경우\r if article.like_users.filter(id=request.user.pk).exists():\rarticle.like_users.remove(request.user) # 좋아요 취소\r else:\t#좋아요 누르지 않았다면\r article.like_users.add(request.user)\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\r 계정 관련 app의 views.py에서 팔로우 기능 설정  def follow(request, username):\rUser = get_user_model()\ruser = get_object_or_404(User, username=username)\rif user != request.user:\rif user.followers.filter(username=request.user.username).exists():\ruser.followers.remove(request.user)\relse:\ruser.followers.add(request.user)\rreturn redirect(\u0026#39;accounts:profile\u0026#39;, user.username)\r html 작성   좋아요를 위한 html\n ...\r{% for article in articles %}\r\u0026lt;ul\u0026gt;\r\u0026lt;li\u0026gt;{{ article.title }}\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;!-- 좋아요를 눌렀을 경우 --\u0026gt;\r{% if request.user in article.like_users.all %}\r\u0026lt;a href=\u0026#34;{% url \u0026#39;articles:like\u0026#39; article.pk %}\u0026#34;\u0026gt;\r\u0026lt;!-- 좋아요 표시를 위한 아이콘이나 사진을 넣음 --\u0026gt;\r\u0026lt;/a\u0026gt;\r\u0026lt;!-- 좋아요를 다시 눌러 취소할 경우 --\u0026gt;\r{% else %}\r\u0026lt;a href=\u0026#34;{% url \u0026#39;articles:like\u0026#39; article.pk %}\u0026#34;\u0026gt;\r\u0026lt;!-- 좋아요 표시를 위한 아이콘이나 사진을 넣음 --\u0026gt;\r\u0026lt;/a\u0026gt;\r{% endif %}\r\u0026lt;!-- 좋아요를 누른 사람을 카운트하기 위해 --\u0026gt;\r\u0026lt;p style=\u0026#34;display: inline;\u0026#34;\u0026gt;{{ article.like_users.count }}명이 좋아합니다.\u0026lt;/p\u0026gt;\r\u0026lt;hr\u0026gt;\r{% endfor %}\r...\r 팔로우 기능을 위한 html\n ...\r\u0026lt;!-- 자기 자신을 팔로우 하지 않기 위해 request 유저가 팔로우할 user가 아닐 경우--\u0026gt;\r{% if request.user != user %} {% if request.user in user.followers.all %}\u0026lt;!--팔로우 상태일 경우 --\u0026gt;\r\u0026lt;a href=\u0026#34;{% url \u0026#39;accounts:follow\u0026#39; user.username %}\u0026#34;\u0026gt;팔로우 취소\u0026lt;/a\u0026gt;\r{% else %}\r\u0026lt;a href=\u0026#34;{% url \u0026#39;accounts:follow\u0026#39; user.username %}\u0026#34;\u0026gt;팔로우\u0026lt;/a\u0026gt;\r{% endif %}\r{% endif %}\r\u0026lt;p\u0026gt;팔로워: {{ user.followers.all.count }}명\u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt;팔로잉: {{ user.followings.all.count }}명\u0026lt;/p\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;h3\u0026gt;작성한 글 목록\u0026lt;/h3\u0026gt;\r{% for article in user.article_set.all %}\r\u0026lt;p\u0026gt;{{ article.title }}\u0026lt;/p\u0026gt;\r{% endfor %}\r\u0026lt;h3\u0026gt;좋아요한 글 목록\u0026lt;/h3\u0026gt;\r{% for article in user.like_articles.all %}\r\u0026lt;p\u0026gt;{{ article.title }}\u0026lt;/p\u0026gt;\r{% endfor %}\r...\r 이 html에서 template tag인 with를 사용하면 user.followers.all을 조금더 간단하게 이름을 변경해 사용 가능하다\n   Django 기초 Django CRUD Django Paginator Django User(1) Django User(2) Django Comment Django REST Framework  "
},
{
	"uri": "https://gudongyeop.github.io/django/django_rest_api.html",
	"title": "Django REST Framework",
	"tags": ["django", "REST API", "REST Framework"],
	"description": "",
	"content": "Django Rest Framework(DRF) 1. REST API(DRF: Django Rest Framework)  REST API를 활용하면 백 엔드와 프론트 엔드 분리가 쉽고 코드의 재활용성이 좋다. REST API를 사용하기 위해서 먼저 설치가 필요  $ pip install djangorestframework\r settings.py에서 INSTALLED_APPS에 'rest_framework'추가 app 폴더에 serializers.py 파일을 만들고 내용 추가  # serializers.py\r from rest_framework import serializers\rfrom .models import * #필요한 모델이름 넣어주기\r class \u0026lt;모델명\u0026gt;Serializer(serializers.ModelSerializer):\rclass Meta:\rmodel = \u0026lt;모델명\u0026gt;\rfields = [\u0026#39;필요한 필드\u0026#39;]\r views.py에 필요한 내용 추가  from django.shortcuts import render, get_object_or_404\rfrom rest_framework.response import Response\rfrom rest_framework.decorators import api_view\rfrom .models import *\rfrom .serializers import *\r@api_view([\u0026#39;GET\u0026#39;]) #method에 따라 다르게 적어주면 됨 (GET, POST 등)\r def list(request):\t#예를 들어 목록을 보여준다고 할때\r 변수명 = 모델명.objects.all()\t#queryset\r serializer = 모델명Serializer(변수명, many=True)\t#위에서 만든 이름임, many=True는 1:N 경우, queryset을 json으로 변환\r return Response(serializer.data)\r@api_view([\u0026#39;GET\u0026#39;])\rdef detail(request, pk):\r변수명 = get_object_or_404(모델명,pk=pk)\rserializer = 모델명DetailSerializer(변수명)\t#serializers.py에서 detail을 위한 모델명DetailSerializer를 만든 후 사용\r return Response(serializer.data)\r# Create 경우\r @api_view([\u0026#39;POST\u0026#39;])\rdef create(request):\rserializer = 모델명Serializer(data=request.data)\rif serializer.is_valid():\rserializer.save()\rreturn Response(serializer.data)\r# Update, Delete\r @api_view([\u0026#39;PUT\u0026#39;, \u0026#39;DELETE\u0026#39;])\rdef comment_edit(request, pk):\r변수명 = get_object_or_404(모델명, pk=pk)\rif request.method == \u0026#39;PUT\u0026#39;:\rserializer = 모델명Serializer(변수명, data=request.data)\rif serializer.is_valid():\rserializer.save()\rreturn Response(\u0026#39;성공적으로 수정이 완료 되었습니다.\u0026#39;)\rreturn Response(status=status.HTTP_400_BAD_REQUEST) # 상태까지 나타내기 위함  if request.method == \u0026#39;DELETE\u0026#39;:\rcomment.delete()\rreturn Response(\u0026#39;성공적으로 삭제 되었습니다.\u0026#39;, status=status.HTTP_204_NO_CONTENT)\r views.py에서 작성한 이름대로 urls.py에 추가    Django 기초 Django CRUD Django Paginator Django User(1) Django User(2) Django Comment Django M:N  "
},
{
	"uri": "https://gudongyeop.github.io/django/django_image_upload.html",
	"title": "Django Image Upload",
	"tags": ["django", "Image", "Upload"],
	"description": "",
	"content": "Django에서 Image Upload  POST요청을 통해 Vue.js에서 Django로 이미지 전송.\n 기본 세팅  settings.py에서 아래 추가  MEDIA_URL = \u0026#39;/api/\u0026#39; # 기본 api url을 통일 시켜 번거로움을 줄이기 위해 /api/로 설정했음\r MEDIA_ROOT = os.path.join(BASE_DIR, \u0026#39;media\u0026#39;) # 이미지 파일이 저장되는 기본 위치를 media폴더로 설정\r  이미지 url도 다른 application과 같이 api로 시작하게 만들기 위해 MEDIA_URL을 /api/로 설정\n  urls.py  from django.contrib import admin\rfrom django.urls import path, include\rfrom django.conf.urls.static import static\rfrom django.conf import settings\rurlpatterns = [\rpath(\u0026#39;admin/\u0026#39;, admin.site.urls),\rpath(\u0026#39;api/accounts/\u0026#39;, include(\u0026#39;accounts.urls\u0026#39;)),\rpath(\u0026#39;api/articles/\u0026#39;, include(\u0026#39;articles.urls\u0026#39;)),\rpath(\u0026#39;api/images/\u0026#39;, include(\u0026#39;images.urls\u0026#39;)),\r]\rurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)  urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) 을 추가함\n 1. Image를 Base64로 받아서 저장하는 방법  순서  Vue 에서 Image를 base64로 인코딩 인코딩한 정보를 django로 보냄 django에서 디코딩하여 저장   views.py  import base64\rimport os\rfrom datetime import datetime\r@api_view([\u0026#39;POST\u0026#39;])\rdef upload_image(request):\rimg_string = request.data[\u0026#39;img_base64\u0026#39;] # POST요청을 통해 받은 base64정보\r imgdata = base64.b64decode(img_string) # 디코딩\r now = datetime.now()\rnow = datetime.timestamp(now)\rfilename = f\u0026#39;temp_image_{request.user}.jpg\u0026#39; # DB에 저장하지 않고 사용한다음 지우기 위해\r with open(filename, \u0026#39;wb\u0026#39;) as f:\rf.write(imgdata)\t# 디코딩한 이미지를 사용하기 위해 잠시 저장\r #### 이미지를 사용하는 코드 #####\r os.remove(filename) # 이미지를 사용한 후 삭제\r return Response({\u0026#39;result\u0026#39; : result})\r@api_view([\u0026#39;POST\u0026#39;])\r@permission_classes([IsAuthenticated])\rdef save_image(request):\rimg_string = request.data[\u0026#39;img_base64\u0026#39;]\rimg_result = request.data[\u0026#39;result\u0026#39;]\rimgdata = base64.b64decode(img_string)\rnow = datetime.now()\rnow = datetime.timestamp(now)\rfilename = f\u0026#39;{img_result}_{request.user}_{now}.jpg\u0026#39;\rdir_list = os.listdir(settings.MEDIA_ROOT+\u0026#39;/users/\u0026#39;) if str(request.user) not in dir_list:\ros.makedirs(settings.MEDIA_ROOT+\u0026#39;/users/\u0026#39;+f\u0026#39;{request.user}/\u0026#39;)\rmedia_root = settings.MEDIA_ROOT+\u0026#39;/users/\u0026#39;+f\u0026#39;{request.user}/\u0026#39;+filename # 각각 user이름의 폴더에 이미지 저장한 후 db에 저장하기 위해\r with open(media_root, \u0026#39;wb\u0026#39;) as f:\rf.write(imgdata)\ranimal = get_object_or_404(Animal, english_name=img_result)\ranimal_image = AnimalImage.objects.create(\rupload_image=f\u0026#39;users/{request.user}/{filename}\u0026#39;,\ranimal=animal,\rupload_user=request.user\r)\r 이미지 경로를 설정하지 않은 경우 BASE_DIR에 저장됨\n 2. Image를 파일로 받아서 저장하는 방법  순서  vue에서 formData로 보낼 파일을 넣어줌 django에서 파일정보를 받아 저장   vue(vuetify 사용했음)  \u0026lt;v-file-input v-model=\u0026#34;files\u0026#34; multiple name=\u0026#34;files\u0026#34; \u0026gt;\u0026lt;/v-file-input\u0026gt; \u0026lt;!-- 여러파일 보낼경우 multiple 사용 --\u0026gt;\r\u0026lt;script\u0026gt;\rimport axios from \u0026#39;axios\u0026#39;\rexport default {\rdata() {\rreturn {\rfiles: null\r}\r},\rmethods: {\rsendImages() {\rlet info = new formData()\rinfo.append(\u0026#39;files\u0026#39;, this.files)\rif (this.files===null) { // 파일을 보내지 않을 경우\r info.append(\u0026#39;files\u0026#39;, [])\r} else {\rfor (let i = 0; i \u0026lt; this.files.length; i++) { // 파일이 하나 이상인 경우\r info.append(\u0026#39;files\u0026#39;, this.files[i]);\r}\r}\rconst token = sessionStorage.getItem(\u0026#34;token\u0026#34;) // token을 세션에 저장시켜 사용했기 때문에\r let config = {\rheaders: {\r\u0026#39;Content-Type\u0026#39;: \u0026#39;multipart/form-data\u0026#39;, // Content-Type을 변경해야 파일이 전송됨\r \u0026#39;Authorization\u0026#39;: `token ${token}`\r}\r}\raxios.post(\r`${process.env.VUE_APP_BACKEND_URL}요청 보낼 URL`, info, config)\r.then((res) =\u0026gt; {\rconsole.log(res) // 필요한 것 넣어서 쓰면됨\r })\r}\r}\r}\r\u0026lt;/script\u0026gt;\r models.py(위에서 한 방법과 다르게 바로 models.py에서 사용자별 폴더를 생성해 저장하는 방법)  def user_directory_path(instance, filename):\rreturn \u0026#39;users/{0}/{1}\u0026#39;.format(instance.upload_user.username, filename) # user를 upload_user로 저장했기 때문에 instance.upload_user로 사용함\r def user_path(instance):\rreturn \u0026#39;users/{0}\u0026#39;.format(instance.upload_user.username)\rclass HairImage(models.Model):\rupload_date = models.DateTimeField(auto_now_add=True) # 업로드 시간\r upload_user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE) # 업로드 유저\r upload_image = models.ImageField(upload_to=user_directory_path, blank=True) # 이미지 경로\r def delete(self, *args, **kargs): # DB 를 삭제하면 저장한 이미지도 삭제되도록 하기 위해\r if self.upload_image:\rimg_path = f\u0026#39;{settings.MEDIA_ROOT}/{user_path}\u0026#39;\ros.remove(os.path.join(img_path, self.upload_image.path))\rsuper(HairImage, self).delete(*args, **kargs)\r views.py  @api_view([\u0026#39;POST\u0026#39;])\r@permission_classes([IsAuthenticated])\rdef analyze_image(request):\rsrc = request.FILES[\u0026#39;files\u0026#39;] # 파일이 하나일 경우\r #for img in request.FILES.getlist(\u0026#39;files\u0026#39;): # 파일이 여러개일 경우\r # upload_img = UploadImage.objects.create(image=img, .....)\r ########\r ########\r uploaded_image = HairImage.objects.create(upload_image=src, upload_user=request.user)\r########\r ########\r return Response(\u0026#39;response할 내용\u0026#39;)\r  Django 기초 Django CRUD Django Paginator Django User(1) Django User(2) Django Comment Django M:N  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm.html",
	"title": "Algorithm 문제풀이",
	"tags": ["백준", "baekjoon", "SWEA"],
	"description": "",
	"content": "여러가지 Algorithm 풀이 Python으로 푼 알고리즘 답 모음  SWEA D3 SWEA D4 백준  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d3.html",
	"title": "D3 문제풀이",
	"tags": ["SWEA"],
	"description": "",
	"content": "SW Expert Academy의 Python D3 문제  D3 답  "
},
{
	"uri": "https://gudongyeop.github.io/django/django_fbv_cbv.html",
	"title": "Django FBV vs CBV",
	"tags": ["django", "FBV", "CBV"],
	"description": "",
	"content": "Django FBV vs CBV  FBV CBV 차이\n  FBV(Function Based View)  장점  구현이 간단함 읽기 편함 직관적인 코드 데코레이터 사용이 간단함   단점  확장 / 재사용이 힘듬     CBV(Class Based View)  장점  확장에 용의(재사용) 다중 상속 Mixin등 사용 가능 HTTP Method가 클래스 안에서 나누어 처리 강력한 Generic Class View 가 있음   단점  읽기 어려움(코드 흐름이 암시적) 상속되고 믹스되면서 코드 이해를 위해 찾아다녀야함 데코레이터 사용시 별로도 import 하거나 Method 생성       "
},
{
	"uri": "https://gudongyeop.github.io/django/django_channels.html",
	"title": "Django Channels",
	"tags": ["django", "channels", "websocket"],
	"description": "",
	"content": "Django Channels  Django Channels는 프레임워크에서 비동기 작업 및 웹 소켓 프로토콜을 지원하기 위한 패키지. 이를 통해 실시간 기능을 구현하고 사용자와 웹 애플리케이션 간의 양방향 통신을 제공.\n Channels 주요 개념  Consumer  Consumer는 Django Channels에서 주요 구성 요소, 웹 소켓 연결에 대한 이벤트를 처리하는 코드를 작성.   Routing  Routing은 어떤 Consumer가 어떤 웹 소켓 연결을 처리해야 하는지를 결정하는 부분. Routing은 URL 경로 또는 패턴을 Consumer와 연결하는 역할.   Channel Layer  Channel Layer는 Django Channels의 핵심 요소, 메시지 전달을 관리하고 다른 프로세스 간 통신을 가능하게 함. Channel Layer는 Redis, RabbitMQ, ASGI 프로세스 등 다양한 백엔드를 사용하여 구성 가능.    기본 사용 방법  Django Channels 설치: pip install channels ASGI 설정: Django 프로젝트의 settings.py 파일에서 ASGI 관련 설정을 추가. Channels를 사용하기 위해 ASGI_APPLICATION 설정을 수정. Consumer 작성: Consumer는 웹 소켓 연결에 대한 이벤트를 처리. CBV/FBV로 Consumer를 작성. Routing 설정: routing.py 파일을 생성하고, URL 경로 또는 패턴과 Consumer를 연결.   "
},
{
	"uri": "https://gudongyeop.github.io/django.html",
	"title": "Django 학습",
	"tags": [],
	"description": "",
	"content": "Django 학습 내용  Django 기초 Django CRUD Django Paginator Django User(1) Django User(2) Django Comment Django M:N Django REST Framework Django Image Upload Django FBV vs CBV Django Channels  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4.html",
	"title": "D4 문제풀이",
	"tags": ["SWEA"],
	"description": "",
	"content": "SW Expert Academy의 Python D4 문제  D4 답 모의 테스트 답  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6.html",
	"title": "D4~6 문제풀이",
	"tags": ["SWEA"],
	"description": "",
	"content": "SW Expert Academy의 D4~D6 문제 "
},
{
	"uri": "https://gudongyeop.github.io/hugo-blog.html",
	"title": "Hugo Blog",
	"tags": ["hugo", "hugo-theme-learn", "blog"],
	"description": "",
	"content": "Hugo로 Github Blog 만들기  구글링을 하다보면 Github Page에 만든 블로그를 많이 접했고, 만들면 좋겠다고 생각.\nhugo를 사용한 이유는 Jekyll는 hugo에 비해 반응속도가 느리다는 글을 보았고 직접 느끼기에도 느렸기 때문. 이 글 참고했음.\nMarkdown작성을 연습할 겸, 좋은 연습 대상이라고 판단.\n 현재, 이런 이유로 Hugo를 사용하여 차근차근 Blog를 만들어 나가는 중.\n"
},
{
	"uri": "https://gudongyeop.github.io/vue.js.html",
	"title": "Vue",
	"tags": ["Vue", "Vue.js"],
	"description": "",
	"content": "Vue 학습 내용  학습한 Vue 내용 정리\n "
},
{
	"uri": "https://gudongyeop.github.io/node.js.html",
	"title": "Node.js / Express.js",
	"tags": ["Node", "Node.js", "Express", "Express.js"],
	"description": "",
	"content": "Node.js, Express.js  Node.js, Express.js 내용 정리\n "
},
{
	"uri": "https://gudongyeop.github.io/server.html",
	"title": "Server 관련",
	"tags": ["Server", "AWS", "Ubuntu"],
	"description": "",
	"content": "Server 관련 내용  Ubuntu로 웹 사이트 배포 관련 내용\n "
},
{
	"uri": "https://gudongyeop.github.io/til.html",
	"title": "I Learned",
	"tags": [],
	"description": "",
	"content": "I Learned - 단순 기록  수업들었던 내용들 정리.\n "
},
{
	"uri": "https://gudongyeop.github.io/%EB%8B%A8%EC%88%9C%EA%B8%B0%EB%A1%9D.html",
	"title": "단순 기록",
	"tags": [],
	"description": "",
	"content": "단순 기록  2020년 30살에 개발자를 목표로 시작.\n  SSAFY 3기에 지원 열심히 다니다가 중간에 코로나로 인한 모든 수업 온라인 진행 2학기 프로젝트 시작 개발자가 너무 하고 싶어짐 모든 프로젝트 완료 웹 개발자로 취업성공   크게 보았을 때 일단 목표를 잘 시작한 것 같음.\n "
},
{
	"uri": "https://gudongyeop.github.io/",
	"title": "Dongyeop&#39;s Blog",
	"tags": [],
	"description": "",
	"content": "Project    Django를 이용한 간단한 웹페이지 구현\nGithub repo 주소\n  Django와 vue를 이용한 영화 추천 사이트\nGithub repo 주소\n[배포중단]\n  비접촉 체온 측정(IoT 프로젝트)\nGithub repo 주소\n[배포 중단]\n  수상한 동물 사전(AI 이용한 동물 판단)\nGithub repo 주소\n[배포 중단]\n  정수리영역 점수(재미로 보는 탈모진단)(진행중)\nhttps://정수리영역점수.kro.kr\n   Algorithm  바로 가기\n Django  바로가기\n Hugo-blog  Hugo로 Blog만들기\n Vue  바로가기\n Node.js/Express.js  바로가기\n Server 관련  바로가기\n "
},
{
	"uri": "https://gudongyeop.github.io/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/vue.html",
	"title": "Vue",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/vue.js.html",
	"title": "Vue.js",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/1n.html",
	"title": "1:N",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/comment.html",
	"title": "comment",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/django.html",
	"title": "django",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/sign-in.html",
	"title": "sign in",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/sign-out.html",
	"title": "sign out",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/sign-up.html",
	"title": "sign up",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/blog.html",
	"title": "blog",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/hugo.html",
	"title": "hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/hugo-blog/hugo-blog-start.html",
	"title": "Hugo를 이용해 Blog 만들기",
	"tags": ["hugo", "blog"],
	"description": "",
	"content": " 설치 및 실행은 모두 Windows 10에서 함.\n 1. Hugo 설치 및 Theme 정하기  나는 hugo github에서 직접 hugo_0.69.0_Windows-64bit.zip를 다운 받아 사용했다. 다운 받은 후 압축을 풀어 C:\\Hugo\\bin 을 만들어 그 안에 넣어주었고, 시스템 환경 변수에서 Path에 C:\\Hugo\\bin을 추가했다. 그리고 사용할 테마를 선택하며(여기) $ hugo new site 폴더 이름으로 사용할 폴더를 만들었다. github에서 두개의 repo를 만들었다. (하나는 .github.io 로, 하나는 hugo 관련 소스파일 등과 같은 것을 포함할 (위에서 만든 폴더와 동일하게, 나는 myblog라고 함)) $ git submodule add https://github.com/matcornic/hugo-theme-learn.git theme/hugo-theme-learn 으로 사용할 테마를 가져옴(clone으로도 가능)  2. Git 과 연동시키기  C:\\Hugo\\myblog로 이동하여 bash를 실행시켜 $ git init 후 $ git remote add origin https://github.com/Gudongyeop/myblog.git 으로 remote 등록함 만든 github.io를 submodule로 만들기 위해 $ git submodule add http://github.com/Gudongyeop/gudongyeop.github.io.git public 타이핑. C:\\Hugo\\myblog에 public폴더가 생김  3. 자동으로 업로드 해주는 쉘 작성하기   여기에 쉘 스크립트 작성 법이 나와 있지만, 여기를 따라 쉘 스크립트를 작성. 파일 이름은 deploy.sh\n#!/bin/bash\r echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34;\r# Build the project.\rhugo -t hugo-theme-learn\r# Go To Public folder\rcd public\r# Add changes to git.\rgit add .\r# Commit changes.\rmsg=\u0026#34;rebuilding site `date`\u0026#34;\rif [ $# -eq 1 ]\rthen msg=\u0026#34;$1\u0026#34;\rfi\rgit commit -m \u0026#34;$msg\u0026#34;\r# Push source and build repos.\rgit push origin master\r# Come Back up to the Project Root\rcd ..\r# blog 저장소 Commit \u0026amp; Push\rgit add .\rmsg=\u0026#34;rebuilding site `date`\u0026#34;\rif [ $# -eq 1 ]\rthen msg=\u0026#34;$1\u0026#34;\rfi\rgit commit -m \u0026#34;$msg\u0026#34;\rgit push origin master\r  4. 블로그 글 작성하기   hugo theme의 Demo와 Homepage에 작성 법이 나와 있어서 그걸 참고해서 작성함.\n  글을 작성하면서 댓글 기능도 넣고 싶어짐.\n  5. 댓글 기능 넣기  disqus를 이용하는 방법이 공식 문서에 나와 있기에 따라서 만들었음. C:\\Hugo\\myblog\\config.toml에서 disqusShortname = \u0026quot;disqus username\u0026quot;을 추가하고 C:\\Hugo\\myblog\\layouts\\partials에 필요한 html을 넣었음.(Learn 테마의 경우 custom-comments.html과 disqus.html) disqus.html의 경우 disqus 홈페이지에서 알려주는대로 복사, 붙여넣기 했음.  중간에 수정한 것들   github에 push를 할 때 계속 다시 로그인을 해야했기에 Personal Access Token 발급받아 이용. 테마를 정할 때 몇 개를 간단하게 사용해 보며 hugo-extended가 필요해 extended 다운 받았음.  "
},
{
	"uri": "https://gudongyeop.github.io/tags/hugo-theme-learn.html",
	"title": "hugo-theme-learn",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.13.html",
	"title": "20.04.13",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.14.html",
	"title": "20.04.14",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.15.html",
	"title": "20.04.15",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.16.html",
	"title": "20.04.16",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.17.html",
	"title": "20.04.17",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.18.html",
	"title": "20.04.18",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.19.html",
	"title": "20.04.19",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.20.html",
	"title": "20.04.20",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.21.html",
	"title": "20.04.21",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.22.html",
	"title": "20.04.22",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.23.html",
	"title": "20.04.23",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.24.html",
	"title": "20.04.24",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.25.html",
	"title": "20.04.25",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.26.html",
	"title": "20.04.26",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.27.html",
	"title": "20.04.27",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.28.html",
	"title": "20.04.28",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.29.html",
	"title": "20.04.29",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.04.30.html",
	"title": "20.04.30",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.01.html",
	"title": "20.05.01",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.02.html",
	"title": "20.05.02",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.03.html",
	"title": "20.05.03",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.04.html",
	"title": "20.05.04",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.05.html",
	"title": "20.05.05",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.06.html",
	"title": "20.05.06",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.07.html",
	"title": "20.05.07",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.08.html",
	"title": "20.05.08",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.09.html",
	"title": "20.05.09",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.10.html",
	"title": "20.05.10",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.11.html",
	"title": "20.05.11",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.12.html",
	"title": "20.05.12",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.13.html",
	"title": "20.05.13",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.14.html",
	"title": "20.05.14",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.15.html",
	"title": "20.05.15",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.17.html",
	"title": "20.05.17",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.18.html",
	"title": "20.05.18",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.19.html",
	"title": "20.05.19",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.20.html",
	"title": "20.05.20",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.21.html",
	"title": "20.05.21",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.22.html",
	"title": "20.05.22",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.23.html",
	"title": "20.05.23",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.24.html",
	"title": "20.05.24",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.25.html",
	"title": "20.05.25",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.26.html",
	"title": "20.05.26",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.27.html",
	"title": "20.05.27",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.28.html",
	"title": "20.05.28",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.29.html",
	"title": "20.05.29",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.30.html",
	"title": "20.05.30",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.05.31.html",
	"title": "20.05.31",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.01.html",
	"title": "20.06.01",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.02.html",
	"title": "20.06.02",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.03.html",
	"title": "20.06.03",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.04.html",
	"title": "20.06.04",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.05.html",
	"title": "20.06.05",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.06.html",
	"title": "20.06.06",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.07.html",
	"title": "20.06.07",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.08.html",
	"title": "20.06.08",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.06.09.html",
	"title": "20.06.09",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.07.01.html",
	"title": "20.07.01",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.07.02.html",
	"title": "20.07.02",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/20.07.03.html",
	"title": "20.07.03",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.13.html",
	"title": "2020.04.13 다시 기록 시작",
	"tags": ["TIL", "20.04.13", "4월"],
	"description": "",
	"content": "오늘 배운 것들   Django에서 기본 제공하는 User 모델을 이용\n  이를 이용하여 회원가입, 정보 수정하는 방법\n  회원가입시 Django에서 제공하는 UserCreationForm을 사용\n UserCreationForm은 기본적으로 username과 password1, 2를 입력받음    "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.14.html",
	"title": "2020.04.14",
	"tags": ["TIL", "20.04.14", "4월", "Django"],
	"description": "",
	"content": "오늘 배운 것들  Django  User 모델을 사용하는 것보다 get_user_model 메서드를 사용하는 것을 추천 get_user_model이 더 유연하게 사용할 수 있음. 커스터마이징을 했을 경우에도 쉽게 사용가능 로그인을위해 AuthenticationForm을 사용 회원 탈퇴는 views.py에서 request.user.delete() 이용 Form / ModelForm  Form 제공 GET  context를 넘겨줌   데이터 양식 처리 POST  양식데이터(request.POST) \u0026gt; ModelForm으로 넘겨줌 그 후, 검증       HTTP는 connectless, stateless 그렇기 때문에 정보를 쿠키에 저장  User가 서버로 요청을 보냄 서버가 쿠키와 같이 응답을 보내줌 User가 서버로 요청을 보낼 때 쿠키와 함께 보내줌    "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.15.html",
	"title": "2020.04.15",
	"tags": ["TIL", "20.04.15", "4월"],
	"description": "",
	"content": "오늘 공부한 것들 \u0026amp; 생각한 것 - 생각  간단한 웹 서비스 ? 만들며, 배우고 공부한 것을 활용해보자 회원가입을 안해도 이용가능 하도록 (회원가입의 귀찮음\u0026hellip;) 자세한건 프로젝트 repo를 따로 만들어 관리해보자는 생각  - 공부한것  Django QuerySet API 관련. (참고 : Django 공식문서) - 생각한 웹 페이지에서 필요한 것을 넣기 위해(어디서 관련 정보를 봐야하는지 기록정도, 다 외우는것은 힘들기에) Image를 넣기 위한 ImageField 관련 (Django 공식문서)  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.04.16.html",
	"title": "2020.04.16",
	"tags": ["20.04.16", "4월", "Algorithm"],
	"description": "",
	"content": "오늘 공부한 것  Algorithm 문제 풀이 (Tree) SWEA-노드의 합  class BinaryTree:\rdef __init__(self, n):\rself.n = n\rself.node_list = [0] *(n+1)\rdef insert(self, num1, num2):\rself.node_list[num1] = num2\rdef leaf(self, node):\rif node * 2 \u0026gt; n:\rself.sum += self.node_list[node]\relse:\rself.leaf(node * 2)\rif node * 2 != n:\rself.leaf(node * 2 + 1)\rdef result(self, l):\rself.sum = 0\rself.leaf(l)\rreturn self.sum\rfor t in range(int(input())):\rn, m, l = map(int, input().split())\rbin_tree = BinaryTree(n)\rfor i in range(m):\rnum1, num2 = map(int, input().split())\rbin_tree.insert(num1, num2)\rprint(f\u0026#34;#{t+1} {bin_tree.result(l)}\u0026#34;)\r subtree  class Node:\rdef __init__(self, data):\rself.data = data\rself.left = None\rself.right = None\rclass BinaryTree:\rdef __init__(self, cnt):\rself.node_list = [None]\rfor i in range(e+1):\rself.node_list.append(Node(i))\rdef insert(self, node, data):\rif self.node_list[node].left == None:\rself.node_list[node].left = self.node_list[data]\relse:\rself.node_list[node].right = self.node_list[data]\rdef count(self, node):\rself.cnt += 1\rif node.left != None:\rself.count(node.left)\relif node.right != None:\rself.count(node.right)\rdef result(self, num):\rself.cnt = 0\rself.count(self.node_list[num])\rreturn self.cnt\rfor t in range(int(input())):\re, n = map(int, input().split())\rnumbers = list(map(int, input().split()))\rbin_tree = BinaryTree(e)\rfor i in range(e):\rbin_tree.insert(numbers[2*i], numbers[2*i+1])\rprint(f\u0026#34;#{t+1} {bin_tree.result(n)}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.16.html",
	"title": "2020.04.16",
	"tags": ["TIL", "20.04.16", "4월", "Algorithm"],
	"description": "",
	"content": "오늘 공부한 것  Algorithm 문제 풀이 (Tree) SWEA-노드의 합  class BinaryTree:\rdef __init__(self, n):\rself.n = n\rself.node_list = [0] *(n+1)\rdef insert(self, num1, num2):\rself.node_list[num1] = num2\rdef leaf(self, node):\rif node * 2 \u0026gt; n:\rself.sum += self.node_list[node]\relse:\rself.leaf(node * 2)\rif node * 2 != n:\rself.leaf(node * 2 + 1)\rdef result(self, l):\rself.sum = 0\rself.leaf(l)\rreturn self.sum\rfor t in range(int(input())):\rn, m, l = map(int, input().split())\rbin_tree = BinaryTree(n)\rfor i in range(m):\rnum1, num2 = map(int, input().split())\rbin_tree.insert(num1, num2)\rprint(f\u0026#34;#{t+1} {bin_tree.result(l)}\u0026#34;)\r subtree  class Node:\rdef __init__(self, data):\rself.data = data\rself.left = None\rself.right = None\rclass BinaryTree:\rdef __init__(self, cnt):\rself.node_list = [None]\rfor i in range(e+1):\rself.node_list.append(Node(i))\rdef insert(self, node, data):\rif self.node_list[node].left == None:\rself.node_list[node].left = self.node_list[data]\relse:\rself.node_list[node].right = self.node_list[data]\rdef count(self, node):\rself.cnt += 1\rif node.left != None:\rself.count(node.left)\relif node.right != None:\rself.count(node.right)\rdef result(self, num):\rself.cnt = 0\rself.count(self.node_list[num])\rreturn self.cnt\rfor t in range(int(input())):\re, n = map(int, input().split())\rnumbers = list(map(int, input().split()))\rbin_tree = BinaryTree(e)\rfor i in range(e):\rbin_tree.insert(numbers[2*i], numbers[2*i+1])\rprint(f\u0026#34;#{t+1} {bin_tree.result(n)}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.17.html",
	"title": "2020.04.17",
	"tags": ["TIL", "20.04.17", "4월"],
	"description": "",
	"content": "오늘 생각한 것(혼자해보는 프로젝트)  지금 까지 배운 django로 간단한 물건 예약신청 웹페이지를 만들려 하다보니 필요한게 많았음 회원가입인듯 아닌듯 만들기 위한 생각이 필요했음 신청과 동시에 회원가입을 하는 방향으로 생각했음 관련 파일은 따로 project로 올릴 예정  "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.18.html",
	"title": "2020.04.18",
	"tags": ["TIL", "20.04.18", "4월", "Django"],
	"description": "",
	"content": "오늘 공부한 것  AuthenticationForm을 커스터 마이징할 때 class Meta를 통해 attr을 작성 할 경우 원하는 대로 동작하지 않는다. 그렇기 때문에 init을 통해 attr을 추가해야 한다. 아래의 코드는 오늘 사용한 예  class myAuthenticationForm(AuthenticationForm):\rdef __init__(self, *args, **kwargs):\rsuper(myAuthenticationForm, self).__init__(*args, **kwargs)\rself.fields[\u0026#39;username\u0026#39;].widget = forms.TextInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r}\r)\rself.fields[\u0026#39;password\u0026#39;].widget = forms.PasswordInput(\rattrs={\r\u0026#39;class\u0026#39;: \u0026#39;form-control\u0026#39;\r}\r) class Meta:\rmodel = User\rfields = [\u0026#39;username\u0026#39;,\u0026#39;password\u0026#39;]\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.19.html",
	"title": "2020.04.19",
	"tags": ["TIL", "20.04.19", "4월"],
	"description": "",
	"content": "오늘 공부한 것  어제에 이어서 신청 완료시 메일을 발송하게 만들려고 함 django에서 email보내는 것도 지원을 하기때문에 아래 코드를 이용했음 먼저 settings.py에서 아래 코드를 추가  EMAIL_HOST = \u0026#34;smtp.gmail.com\u0026#34;\rEMAIL_HOST_USER = \u0026#39;내 gmail 주소@gmail.com\u0026#39;\rEMAIL_HOST_PASSWORD = \u0026#39;내 gmail 비밀번호\u0026#39;\rEMAIL_PORT = 587\rEMAIL_USE_TLS = True\r views.py에서 아래 코드 이용(공식문서의 example) 여기 참고  from django.core.mail import send_mail\rsend_mail(\r\u0026#39;Subject here\u0026#39;,\r\u0026#39;Here is the message.\u0026#39;,\r\u0026#39;from@example.com\u0026#39;,\r[\u0026#39;to@example.com\u0026#39;],\rfail_silently=False,\r)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.20.html",
	"title": "2020.04.20",
	"tags": ["TIL", "20.04.20", "4월", "DB", "SQL"],
	"description": "",
	"content": "오늘 배운 것 SQL 관련 1. Database 기본  RDBMS  데이터베이스를 관리하는 시스템  빠르고 효율적으로 관리하기 위해   RDBMS(Relational Database Management System)  관계형 데이버 베이스 관리 시스템 table(relation) 활용     기본 용어  스키마: DB의 자료 구조와 제약 조건에 대한 전반적인 명세를 기술한 것 테이블 : 열과 행을 사용해 조직한 데이터 요소들 집합 열(column)/필드(field)/속성(attribute) 행(row)/tuple/레코드(record) PK(Primary key):  각 행의 고유값으로 저장된 레코드를 고유하게 식별할 수 있는 값 중복되는 값이 없으면 다 pk로 사용 가능 == unique한 값에 부여      2. SQL   RDBMS에서 데이터를 관리하기 위해 설계된 프로그래밍 언어\n  자료의 검색, 관리, 데이터베이스 스키마 생성과 수정, 접근 관리\n  기본 정의\n DDL(Data Definintion Language) 데이터 정의 언어  RDBMS의 구조를 정의 CREATE(테이블 생성), DROP(테이블 삭제), ALTER(테이블 수정), TRUNCATE(테이블 초기화)   DML데이터 조작 언어  데이터를 저장,수정,삭제,조회 INSERT, UPDATE, DELETE, SELECT   DCL 데이터 제어 언어  사용자의 권한 제어를 위해 사용 GRANT, REVOKE, COMMIT, ROLLBACK      3. 기본 활용  Example  -- CREATE- TABLE 생성\rCREATE TABLE classmates(\rid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\rname TEXT NOT NULL,\rage INTEGER NOT NULL\r);\r-- DROP - TABLE 삭제\rDROP TABLE classmates;\r-- SELECT - 데이터 조회\rSELECT id FROM classmates;\rSELECT name FROM classmates;\rSELECT name, age FROM classmates;\r-- LIMIT 사용\rSELECT * FROM classmates LIMIT 1;\r-- OFFSET\rSELECT * FROM classmates LIMIT 1 OFFSET 2;\r-- DISTINCT 중복되지 않도록 출력\rSELECT DISTINCT name FROM classmates;\r-- INSERT - 테이블 삽입\rINSERT INTO classmates (name, age) VALUES(\u0026#39;구동엽\u0026#39;, \u0026#39;30\u0026#39;);\rINSERT INTO classmates VALUES(2,\u0026#39;구동엽\u0026#39;,20); -- 이렇게 넣어도 됨\r\r-- DELETE\rDELETE FROM classmates WHERE id = 1;\r-- UPDATE\rUPDATE classmates SET name = \u0026#39;rrr\u0026#39; WHERE id=2;\r-- WHERE\rSELECT * FROM classmates WHERE name=\u0026#39;dfdf\u0026#39; AND age=30;\r-- COUNT, AVG, MAX\rSELECT COUNT(*) FROM classmates;\rSELECT MAX(age) FROM classmates;\rSELECT AVG(age) FROM classmates;\r--LIKE(%, _) %는 숫자 제한 없이 _는 개수 맞춰서 사용\rSELECT * FROM classmates WHERE name LIKE \u0026#39;김%\u0026#39;;\rSELECT * FROM classmates WHERE name LIKE \u0026#39;%엽\u0026#39;;\rSELECT * FROM classmates WHERE age LIKE \u0026#39;3_\u0026#39;;\r-- ORDER BY\rSELECT * FROM classmates ORDER BY name ASC; --오름차순\rSELECT * FROM classmates ORDER BY name DESC; --내림차순\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.21.html",
	"title": "2020.04.21",
	"tags": ["TIL", "20.04.21", "4월", "Django"],
	"description": "",
	"content": "오늘 배운 것 Django 댓글 작성 \u0026amp; 삭제  게시글의 model은 Article로 만들었을 경우임. ForeignKey를 사용.\n   댓글 작성\n  models.py에서 댓글 설정을 위한 class를 만든다.(user 설정을 안했을 경우)\nclass Comment(models.Model):\rarticle = models.ForeignKey(Article, on_delete=models.CASCADE)\r#on_delete=models.CASCADE는 ForeignKeyField가 삭제 될때 인스턴스도 같이 삭제\r content = models.TextField()\r  forms.py에도 추가\nfrom django import forms\rfrom .models import Comment\rclass CommentForm(forms.ModelForm):\rclass Meta:\rmodel = Comment\rfields = [\u0026#39;content\u0026#39;]\r# fields를 __all__로 해도 됨(all로 했을 경우에는 댓글 작성시 모든 값을 잘 입력 해야한다. *all로 하고 필요한 값을 입력 안했을 경우 저장이 되지 않음)\r  makemigrations와 migrate를 해야함    views.py에서 댓글 작성하는 함수를 추가\nfrom .models import Article, Comment\rfrom .forms import ArticleForm, CommentForm\rdef comments_create(request, article_pk):\rarticle = get_object_or_404(Article, article_pk=pk)\rif request.method==\u0026#39;POST\u0026#39;:\rform = CommentForm(request.POST)\rif form.is_valid():\rcomment = form.save(commit=False)\rcomment.article = article\rcomment.save()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\relse:\rform = CommentForm()\rcontext = {\r\u0026#39;form\u0026#39;: form\r}\rreturn render(request, \u0026#39;articles/comments_create.html\u0026#39;, context)\r commit=False을 사용 하면 간단하게 db에 당장 저장하지 않고 지연시켜 중복 저장을 방지. 그렇기에 comment.article=article 을 통해 not null 에러가 발생하지 않게 해준다.\n   urls.py에도 추가\npath(\u0026#39;\u0026lt;int:article_pk\u0026gt;/comments/\u0026#39;, views.comments_create, name=\u0026#39;comments_create\u0026#39;),\r  html 작성\n\u0026lt;!-- 먼저 게시글을 보여주는 html에서 댓글을 나오게 하기 위해 --\u0026gt;\r{% for comment in article.comment_set.all %}\r\u0026lt;li\u0026gt;{{ comment.content }}\u0026lt;/li\u0026gt;\r{% endfor %}\r\u0026lt;!-- 댓글을 작성하는 html을 만들경우 --\u0026gt;\r\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt;\r{% csrf_token %}\r{{ form.content }}\r\u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;작성\u0026#34;\u0026gt;\r\u0026lt;/form\u0026gt;\r    댓글 삭제\n  views.py에 삭제하는 함수 추가\ndef comments_delete(request, comment_pk,article_pk):\rcomment = get_object_or_404(Comment, pk=comment_pk)\rarticle = get_object_or_404(Article, pk=article_pk)\rcomment.delete()\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\r  urls.py\npath(\u0026#39;\u0026lt;int:article_pk\u0026gt;/comments/\u0026lt;int:comment_pk\u0026gt;/delete\u0026#39;, views.comments_delete, name=\u0026#39;comments_delete\u0026#39;)\r  댓글나오는 html\n{% for comment in article.comment_set.all %}\r\u0026lt;li\u0026gt;{{ comment.content }}\u0026lt;a href=\u0026#34;{% url \u0026#39;articles:comments_delete\u0026#39; article.pk comment.pk %}\u0026#34;\u0026gt;삭제\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{% endfor %}\r    "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.22.html",
	"title": "2020.04.22",
	"tags": ["TIL", "20.04.22", "4월"],
	"description": "",
	"content": "오늘 한 것 간단한 Django 프로젝트  페어프로그래밍으로 간단하게 로그인 후 게시글을 작성하고 댓글을 작성할 수 있는 페이지를 만들었음\n "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.23.html",
	"title": "2020.04.23",
	"tags": ["TIL", "20.04.23", "4월"],
	"description": "",
	"content": "오늘 배운 것 Computational Thinking  SW Expert Academy에 있는 Computational Thinking 학습\n   수와 표현\n 명제 관련 예)   문제 12 : n^2 이 3의 배수이면 n은 3의 배수이다.\n\u0026ndash;\u0026gt; 대우 : n이 3의 배수가 아니면 n^2도 3의 배수가 아니다.\n  n = 3m + 1 일경우 n^2 = 9m^2 + 6m + 1 = 3(3m^2 + 2m) + 1\n  n = 3m + 2 일경우 n^2 = 9m^2 + 12m +4 = 3(3m^2 + 4m + 1) + 1\n대우가 참이기 때문에 기존 명제도 참\n     집합과 조합\n 집합 조합    "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.24.html",
	"title": "2020.04.24",
	"tags": ["TIL", "20.04.24", "4월"],
	"description": "",
	"content": "오늘한 것 Django 복습  Django에서 간단한 User 생성, 로그인, 로그아웃 구현 복습\n댓글 위한 모델 작성 복습\n  댓글 작성을 위해 ForeignKey 사용 (1:N 관계)  "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.25.html",
	"title": "2020.04.25",
	"tags": ["TIL", "20.04.25", "4월"],
	"description": "",
	"content": "오늘한 것 Django PJT 추가  혼자 만들어보는 웹 페이지에서 사용자들을 위한 Q\u0026amp;A 페이지 작성\n "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.26.html",
	"title": "2020.04.26",
	"tags": ["TIL", "20.04.26", "4월", "Django"],
	"description": "",
	"content": "오늘한 것 Django PJT 추가  Q\u0026amp;A 페이지에서 댓글 추가\n  댓글 작성 위해 1:N 관계 모델 작성  from django.db import models\rfrom django.conf import settings\r# 사진 및 정보를 업로드 하기 위한 모델 정의\r class QandA(models.Model):\rtitle = models.CharField(max_length=100)\ruser =models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\rcontent = models.TextField()\rclass Reply(models.Model):\rcontent = models.TextField()\rQandA = models.ForeignKey(QandA, on_delete=models.CASCADE)\ruser = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\r ForeignKey를 이용하여 1:N관계 설정 후 migration\n "
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.27.html",
	"title": "2020.04.27",
	"tags": ["TIL", "20.04.27", "4월"],
	"description": "",
	"content": "오늘 배운 것 이미지 업로드  ImageField를 활용하여 업로드\n  단순히 ImageField를 사용하기 위해서는 pillow패키지를 설치해야 한다.  $ pip install pillow\r Resizing 하기 위해서는 pilkit, django-imagekit 패키지를 설치  $ pip install pilkit django-imagekit\r ImageField를 사용할 app의 models.py를 수정  class \u0026lt;사용할 모델\u0026gt;:\r image = models.ImageField() # 저장하지 않고 잘라서 표현할 때(ex. thumbnail)\r image_thumbnail = ImageSpecField(source=\u0026#39;image\u0026#39;,\rprocessors=[Thumbnail(300, 300)],\rformat=\u0026#39;JPEG\u0026#39;,\roptions={\u0026#39;quality\u0026#39;: 60})  Image 파일을 저장할 경로 설정 settings.py  # 미디어 파일을 저장하기 위한 루트 경로\r MEDIA_ROOT = os.path.join(BASE_DIR, \u0026#39;media\u0026#39;)\rMEDIA_URL = \u0026#39;/media/\u0026#39;\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.28.html",
	"title": "2020.04.28",
	"tags": ["TIL", "20.04.28", "4월", "Django"],
	"description": "",
	"content": "오늘 배운 것 M:N 모델  Django에서 좋아요 기능이나 팔로우 기능처럼 M:N 관계 만들기\nManyToManyField 이용\n  좋아요 기능을 위한 model 추가(게시글 모델)  # 좋아요 기능을 위한 article_like_users 테이블 생성\r class 좋아요 기능을 추가할 클래스 명:\r like_users = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name=\u0026#39;like_articles\u0026#39;)\r# 팔로우 기능을 위한   팔로우 기능을 위한 model 추가(User 모델을 Customizing)  class User(AbstractUser):\rfollowers = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name=\u0026#39;followings\u0026#39;)\r 게시글 app의 views.py에서 좋아요 기능 설정  def like(request, pk):\rarticle = get_object_or_404(Article, pk=pk)\r# 좋아요를 누르면, \u0026gt;\u0026gt; DB에 존재할 경우\r if article.like_users.filter(id=request.user.pk).exists():\rarticle.like_users.remove(request.user) # 좋아요 취소\r else:\t#좋아요 누르지 않았다면\r article.like_users.add(request.user)\rreturn redirect(\u0026#39;articles:detail\u0026#39;, article.pk)\r 계정 관련 app의 views.py에서 팔로우 기능 설정  def follow(request, pk):\rUser = get_user_model()\r# 팔로우 당하는 사람\r user = get_object_or_404(User, pk=pk)\rif user != request.user:\r# 팔로우를 요청한 사람 =\u0026gt; request.user\r # 팔로우가 되어 있다면,\r if user.followers.filter(pk=request.user.pk).exists():\r# 삭제\r user.followers.remove(request.user)\relse:\r# 추가\r user.followers.add(request.user)\rreturn redirect(\u0026#39;accounts:detail\u0026#39;, user.pk)\r"
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.04.29.html",
	"title": "2020.04.29",
	"tags": ["20.04.29", "4월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA. 5185 [파이썬 S/W 문제해결 구현] 1일차 - 이진수\n 알고리즘 풀이 for t in range(int(input())):\rn, num = map(str, input().split())\rprint(f\u0026#39;#{t+1}\u0026#39;,end=\u0026#34; \u0026#34;)\rfor a in num:\rb = \u0026#39;0x\u0026#39;+ a.lower()\rhex_num = int(a, 16) # 16진수를 10진수로\r print(\u0026#34;{0:b}\u0026#34;.format(hex_num).zfill(4), end=\u0026#34;\u0026#34;) # 10진수를 2진수로 바꾸면서 (4자리씩)\r print()\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.29.html",
	"title": "2020.04.29",
	"tags": ["TIL", "20.04.29", "4월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA. 5185 [파이썬 S/W 문제해결 구현] 1일차 - 이진수\n 알고리즘 풀이 for t in range(int(input())):\rn, num = map(str, input().split())\rprint(f\u0026#39;#{t+1}\u0026#39;,end=\u0026#34; \u0026#34;)\rfor a in num:\rb = \u0026#39;0x\u0026#39;+ a.lower()\rhex_num = int(a, 16) # 16진수를 10진수로\r print(\u0026#34;{0:b}\u0026#34;.format(hex_num).zfill(4), end=\u0026#34;\u0026#34;) # 10진수를 2진수로 바꾸면서 (4자리씩)\r print()\r"
},
{
	"uri": "https://gudongyeop.github.io/til/4%EC%9B%94/20.04.30.html",
	"title": "2020.04.30",
	"tags": ["TIL", "20.04.30", "4월", "Django"],
	"description": "",
	"content": "오늘 한 것  혼자 해보는 PJT에서 paginator 추가 및 댓글 작성 시 발생한 오류 수정\n  views.py 에서  @require_POST\r@login_required\rdef reply_create(request, qanda_pk):\rqanda = get_object_or_404(QandA, pk=qanda_pk)\rform = ReplyForm(request.POST)\rif form.is_valid():\rreply=form.save(commit=False)\rreply.user = request.user\rreply.QandA = qanda\rreply.save()\rreturn redirect(\u0026#39;reservation:QandA_detail\u0026#39;,qanda.pk)\r reply.QandA = qanda에서 QandA 모델을 qanda로 불러와서 NOT NULL 오류 발생했었음.\n  paginator 추가 코드  def QandA_list(request):\rQandAs = QandA.objects.order_by(\u0026#39;-pk\u0026#39;) paginator = Paginator(QandAs, 4) #한 페이지 당 몇개 씩 보여줄 지 지정\r page_number = request.GET.get(\u0026#39;page\u0026#39;)\rpage_obj = paginator.get_page(page_number)\rreviews_all = get_list_or_404(QandA)\rtotal_count = len(reviews_all)\rtotal_page = total_count//4 + 1\rpage_range = range(1,total_page+1)\rcontext = {\r\u0026#39;QandAs\u0026#39; : QandAs,\r\u0026#39;page_obj\u0026#39;: page_obj,\r\u0026#39;page_range\u0026#39;: page_range,\r}\rreturn render(request, \u0026#39;reservation/QandA.html\u0026#39;, context)\r"
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.01.html",
	"title": "2020.05.01",
	"tags": ["20.05.01", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 알고리즘 문제풀이\n  [파이썬 S/W 문제해결 구현] 1일차 - 이진수2  for t in range(int(input())):\rn = float(input())\rresult = \u0026#39;\u0026#39;\rcnt = 0\rwhile True:\ra = n * 2\rresult += str(int(a))\rn = a - int(a)\rcnt += 1\rif n == 0.0:\rbreak\rif cnt \u0026gt; 13:\rbreak\rif cnt \u0026gt; 13:\rprint(f\u0026#34;#{t+1} overflow\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.01.html",
	"title": "2020.05.01",
	"tags": ["TIL", "20.05.01", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 알고리즘 문제풀이\n  [파이썬 S/W 문제해결 구현] 1일차 - 이진수2  for t in range(int(input())):\rn = float(input())\rresult = \u0026#39;\u0026#39;\rcnt = 0\rwhile True:\ra = n * 2\rresult += str(int(a))\rn = a - int(a)\rcnt += 1\rif n == 0.0:\rbreak\rif cnt \u0026gt; 13:\rbreak\rif cnt \u0026gt; 13:\rprint(f\u0026#34;#{t+1} overflow\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.02.html",
	"title": "2020.05.02",
	"tags": ["TIL", "20.05.02", "5월"],
	"description": "",
	"content": "오늘 한 것  프로젝트를 PythonAnywhere를 통해 올릴 것인지 고민.\nC/C++ 혼자 공부하기(일단 알고리즘을 푸는 위주로 할 생각)\n  Django로 만든 것을 PythonAnywhere에 올리기 위해 \u0026ldquo;파이썬 웹 프로그래밍\u0026rdquo; 책을 봄  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.03.html",
	"title": "2020.05.03",
	"tags": ["TIL", "20.05.03", "5월", "DB"],
	"description": "",
	"content": "오늘 한 것  sqlite3 DB파일을 csv로 변환하기\n  혼자 하는 PJT의 User를 포함한 db가 있는 폴더에서 sqlite3 실행  $ sqlite3 db.sqlite3\rsqlite\u0026gt; .table # 테이블 확인하면 accounts_user가 있음\raccounts_user django_admin_log\raccounts_user_groups django_content_type\r 여기 있는 accounts_user에서 필요한 정보만 csv로 만들기 위해 아래 명령어 입력  sqlite\u0026gt; .headers on\rsqlite\u0026gt; .mode csv\rsqlite\u0026gt; .output dataout.csv\rsqlite\u0026gt; select * from accounts_user;\r 원하는 정보를 csv파일로 만들 수 있음.   하지만 엑셀에서 바로 csv파일을 열면 인코딩이 UTF-8이기때문에 한글이 깨지는 문제가 발생한다.\n쉽게 변경하는 방법 중 하나는 csv파일을 notepad로 열고 인코딩을 ANSI로 바꿔 저장하면 된다.\n "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.04.html",
	"title": "2020.05.04",
	"tags": ["TIL", "20.05.04", "5월"],
	"description": "",
	"content": "오늘 한 것  ERD 이용하여 DB모델 구조 설정 erdcloud.com 이용 위 내용을 바탕으로 Django에서 model 만들기 Django query 개선  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.05.html",
	"title": "2020.05.05",
	"tags": ["TIL", "20.05.05", "5월"],
	"description": "",
	"content": "오늘 한 것  PJT 메인 화면 꾸미기 Heroku 사용법 익히기  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.06.html",
	"title": "2020.05.06",
	"tags": ["20.05.06", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제 풀이  # 최소합\r dx, dy = [0,1], [1,0]\rdef dfs(x,y):\rglobal min_num, result\rvisit[x][y] = 1\rif result \u0026lt; min_num:\rreturn\rif x == n-1 and y == n-1:\rresult = min_num\rreturn\rfor i in range(2):\rnx = x + dx[i]\rny = y + dy[i]\rif 0 \u0026lt;= nx \u0026lt; n and 0 \u0026lt;= ny \u0026lt; n and visit[nx][ny] == 0:\rmin_num += a[nx][ny]\rdfs(nx,ny)\rvisit[nx][ny] = 0\rmin_num -= a[nx][ny]\rfor t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rvisit = [[0 for _ in range(n)]for _ in range(n)]\rmin_num = a[0][0]\rresult = 10000000\rdfs(0,0)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r# 전자카트\r def sol(a,b,c):\rif b == n-1:\rc += arr[a][0]\rresult.append(c)\relse:\rfor i in range(1,n):\rif not visit[i]:\rc += arr[a][i]\rvisit[i]=1\rsol(i,b+1,c)\rvisit[i]=0\rc -= arr[a][i]\rfor t in range(int(input())):\rn = int(input())\rarr = [list(map(int, input().split()))for _ in range(n)]\rvisit = [0]*n\rresult = []\rsol(0,0,0)\rprint(f\u0026#34;#{t+1} {min(result)}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.06.html",
	"title": "2020.05.06",
	"tags": ["TIL", "20.05.06", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제 풀이  # 최소합\r dx, dy = [0,1], [1,0]\rdef dfs(x,y):\rglobal min_num, result\rvisit[x][y] = 1\rif result \u0026lt; min_num:\rreturn\rif x == n-1 and y == n-1:\rresult = min_num\rreturn\rfor i in range(2):\rnx = x + dx[i]\rny = y + dy[i]\rif 0 \u0026lt;= nx \u0026lt; n and 0 \u0026lt;= ny \u0026lt; n and visit[nx][ny] == 0:\rmin_num += a[nx][ny]\rdfs(nx,ny)\rvisit[nx][ny] = 0\rmin_num -= a[nx][ny]\rfor t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rvisit = [[0 for _ in range(n)]for _ in range(n)]\rmin_num = a[0][0]\rresult = 10000000\rdfs(0,0)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r# 전자카트\r def sol(a,b,c):\rif b == n-1:\rc += arr[a][0]\rresult.append(c)\relse:\rfor i in range(1,n):\rif not visit[i]:\rc += arr[a][i]\rvisit[i]=1\rsol(i,b+1,c)\rvisit[i]=0\rc -= arr[a][i]\rfor t in range(int(input())):\rn = int(input())\rarr = [list(map(int, input().split()))for _ in range(n)]\rvisit = [0]*n\rresult = []\rsol(0,0,0)\rprint(f\u0026#34;#{t+1} {min(result)}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.07.html",
	"title": "2020.05.07",
	"tags": ["20.05.07", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제 풀이  # 컨테이너 운반\r for t in range(int(input())):\rn,m = map(int, input().split())\rweight = list(map(int, input().split()))\rtruck = list(map(int, input().split()))\rresult = 0\rfor i in range(m):\ra = 0\rfor j in weight:\rif truck[i] \u0026gt;= j \u0026gt;= a:\ra = j\rif a != 0:\rweight.remove(a)\rresult += a\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r# 화물 도크\r for t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rfor i in range(n):\rfor j in range(i, n):\rif a[i][1] \u0026gt; a[j][1]:\ra[i], a[j] = a[j], a[i]\rresult = [a[0]]\rvisit = [0]*n\rvisit[0] = 1\rwhile True:\rfor i in range(n):\rif result[-1][-1] \u0026gt; a[i][0]:\rvisit[i] = 1\rif not 0 in visit:\rbreak\ridx = 0\rmax_value = 100000000\rfor i in range(n):\rif visit[i] == 0 and result[-1][-1] \u0026lt;= a[i][0] and a[i][1] \u0026lt; max_value:\ridx = i\rmax_value = a[i][0]\rresult.append(a[idx])\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r# 베이비진\r for t in range(int(input())):\ra = list(map(int, input().split()))\rcnt = 0\rflag = False\rfor i in range(6, 13, 2):\rresult = []\rfor j in range(2):\rdeck = [a[k]for k in range(j, i, 2)]\rcnt_list = [0]*12\rfor m in range(len(deck)):\rcnt_list[deck[m]] += 1\rn = 0\rtri = Run = 0\rwhile n \u0026lt; 10:\rif cnt_list[n] \u0026gt;= 3:\rcnt_list[n] -= 3\rtri += 1\rcontinue\rif cnt_list[n] \u0026gt;= 1 and cnt_list[n+1] \u0026gt;= 1 and cnt_list[n+2] \u0026gt;= 1:\rcnt_list[n] -= 1\rcnt_list[n+1] -= 1\rcnt_list[n+2] -= 1\rRun += 1\rcontinue\rn += 1\rcnt += 1\rif tri \u0026gt; 0 or Run \u0026gt; 0:\rresult.append(1)\relse:\rresult.append(0)\rif result[0] \u0026lt; result[1]:\rflag = True\rprint(f\u0026#34;#{t+1} 2\u0026#34;)\rbreak\relif result[0] \u0026gt; result[1] or ((result[0] == 1 and result[1] == 1) or (result[0] == 2 and result[1] == 2)):\rflag = True\rprint(f\u0026#34;#{t+1} 1\u0026#34;)\rbreak\rif flag:\rcontinue\relse:\rprint(f\u0026#34;#{t+1} 0\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.07.html",
	"title": "2020.05.07",
	"tags": ["TIL", "20.05.07", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제 풀이  # 컨테이너 운반\r for t in range(int(input())):\rn,m = map(int, input().split())\rweight = list(map(int, input().split()))\rtruck = list(map(int, input().split()))\rresult = 0\rfor i in range(m):\ra = 0\rfor j in weight:\rif truck[i] \u0026gt;= j \u0026gt;= a:\ra = j\rif a != 0:\rweight.remove(a)\rresult += a\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r# 화물 도크\r for t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rfor i in range(n):\rfor j in range(i, n):\rif a[i][1] \u0026gt; a[j][1]:\ra[i], a[j] = a[j], a[i]\rresult = [a[0]]\rvisit = [0]*n\rvisit[0] = 1\rwhile True:\rfor i in range(n):\rif result[-1][-1] \u0026gt; a[i][0]:\rvisit[i] = 1\rif not 0 in visit:\rbreak\ridx = 0\rmax_value = 100000000\rfor i in range(n):\rif visit[i] == 0 and result[-1][-1] \u0026lt;= a[i][0] and a[i][1] \u0026lt; max_value:\ridx = i\rmax_value = a[i][0]\rresult.append(a[idx])\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r# 베이비진\r for t in range(int(input())):\ra = list(map(int, input().split()))\rcnt = 0\rflag = False\rfor i in range(6, 13, 2):\rresult = []\rfor j in range(2):\rdeck = [a[k]for k in range(j, i, 2)]\rcnt_list = [0]*12\rfor m in range(len(deck)):\rcnt_list[deck[m]] += 1\rn = 0\rtri = Run = 0\rwhile n \u0026lt; 10:\rif cnt_list[n] \u0026gt;= 3:\rcnt_list[n] -= 3\rtri += 1\rcontinue\rif cnt_list[n] \u0026gt;= 1 and cnt_list[n+1] \u0026gt;= 1 and cnt_list[n+2] \u0026gt;= 1:\rcnt_list[n] -= 1\rcnt_list[n+1] -= 1\rcnt_list[n+2] -= 1\rRun += 1\rcontinue\rn += 1\rcnt += 1\rif tri \u0026gt; 0 or Run \u0026gt; 0:\rresult.append(1)\relse:\rresult.append(0)\rif result[0] \u0026lt; result[1]:\rflag = True\rprint(f\u0026#34;#{t+1} 2\u0026#34;)\rbreak\relif result[0] \u0026gt; result[1] or ((result[0] == 1 and result[1] == 1) or (result[0] == 2 and result[1] == 2)):\rflag = True\rprint(f\u0026#34;#{t+1} 1\u0026#34;)\rbreak\rif flag:\rcontinue\relse:\rprint(f\u0026#34;#{t+1} 0\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.08.html",
	"title": "2020.05.08",
	"tags": ["TIL", "20.05.08", "5월"],
	"description": "",
	"content": "오늘 한 것  오늘은 휴식 ~  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.09.html",
	"title": "2020.05.09",
	"tags": ["20.05.09", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제 풀이  C 사용    #include \u0026lt;stdio.h\u0026gt;\r\rint test_case;\rlong long sol(int x, int y) {\rif (y == 0) return 1;\rreturn x * sol(x, y - 1);\r}\rint main(void) {\rfor (int i = 0; i \u0026lt; 10; i++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rint x = 0;\rint y = 0;\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;x, \u0026amp;y);\rlong long result = 0;\rresult = sol(x, y);\rprintf(\u0026#34;#%d %11d\\n\u0026#34;, i + 1, result);\r}\rreturn 0;\r}\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.09.html",
	"title": "2020.05.09",
	"tags": ["TIL", "20.05.09", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제 풀이  C 사용    #include \u0026lt;stdio.h\u0026gt;\r\rint test_case;\rlong long sol(int x, int y) {\rif (y == 0) return 1;\rreturn x * sol(x, y - 1);\r}\rint main(void) {\rfor (int i = 0; i \u0026lt; 10; i++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rint x = 0;\rint y = 0;\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;x, \u0026amp;y);\rlong long result = 0;\rresult = sol(x, y);\rprintf(\u0026#34;#%d %11d\\n\u0026#34;, i + 1, result);\r}\rreturn 0;\r}\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.10.html",
	"title": "2020.05.10",
	"tags": ["TIL", "20.05.10", "5월"],
	"description": "",
	"content": "오늘 한 것 vector   vector\u0026lt;int\u0026gt; v; vector v 생성\n  vector\u0026lt;int\u0026gt; v(10); 0으로 초기화된 원소 10개 가진 vector 생성\n  vector\u0026lt;int\u0026gt; v(10,1); 1로 초기화된 원소 10개 가진 vector 생성\n  v.assign(10,2); 2로 10개 원소 할당\n  v.at(index); index번째 원소 참조, v[index]보다 속도는 느림, 범위를 점검\n  v[index]; 범위 점검 없이 index번째 원소 참조\n  v.front;첫번재 원소\n  v.back();마지막 원소\n  v.clear;모든 원소 제거, 메모리는 그대로\n  v.push_back(5); 마지막 원소 뒤에 5삽입\n  v.pop_back;마지막 원소 제거\n  v.begin(); 첫번째 원소를 가리킴\n  v.end(); 마지막의 \u0026lsquo;다음을 가리킴\u0026rsquo;\n  v.rbegin();reverse begin\n  v.rend(); reverse end\n  v.reserve(n); n개의 원소를 저장할 위치를 예약(동적할당)\n  v.resize(n); 크기를 n으로 변경, 더 커질경우 default값으로 초기화\n  v.resize(n,2); 크기를 n으로 터 커질 경우 2로 초기화\n  v.size(); 원소 개수 리턴\n  v.capacity(); 할당된 공간의 크기\n  v.insert(2,3,4);2번째 위치에 3개의 4를 삽입\n  v.insert(2,3);2번째 위치에 3 삽입\n  v.erase(iter);iter가 가리키는 원소 제거, size만 줄고 capacity는 그대로\n  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.11.html",
	"title": "2020.05.11",
	"tags": ["TIL", "20.05.11", "5월", "Django", "REST Framework"],
	"description": "",
	"content": "오늘 배운 것 1. REST API(DRF: Django Rest Framework)   REST API를 활용하면 백 엔드와 프론트 엔드 분리가 쉽고 코드의 재활용성이 좋다.\n  REST API를 사용하기 위해서 먼저 설치가 필요\n$ pip install djangorestframework\r  settings.py에서 INSTALLED_APPS에 'rest_framework'추가\n  app 폴더에 serializers.py 파일을 만들고 내용 추가\n# serializers.py\r from rest_framework import serializers\rfrom .models import * #필요한 모델이름 넣어주기\r class \u0026lt;모델명\u0026gt;Serializer(serializers.ModelSerializer):\rclass Meta:\rmodel = \u0026lt;모델명\u0026gt;\rfields = [\u0026#39;필요한 필드\u0026#39;]\r  views.py에 필요한 내용 추가\nfrom django.shortcuts import render, get_object_or_404\rfrom rest_framework.response import Response\rfrom rest_framework.decorators import api_view\rfrom .models import *\rfrom .serializers import *\r@api_view([\u0026#39;GET\u0026#39;]) #method에 따라 다르게 적어주면 됨 (GET, POST 등)\r def list(request):\t#예를 들어 목록을 보여준다고 할때\r 변수명 = 모델명.objects.all()\t#queryset\r serializer = 모델명Serializer(변수명, many=True)\t#위에서 만든 이름임, many=True는 1:N 경우, queryset을 json으로 변환\r return Response(serializer.data)\r@api_view([\u0026#39;GET\u0026#39;])\rdef detail(request, pk):\r변수명 = get_object_or_404(모델명,pk=pk)\rserializer = 모델명DetailSerializer(변수명)\t#serializers.py에서 detail을 위한 모델명DetailSerializer를 만든 후 사용\r return Response(serializer.data)\r# Create 경우\r @api_view([\u0026#39;POST\u0026#39;])\rdef create(request):\rserializer = 모델명Serializer(data=request.data)\rif serializer.is_valid():\rserializer.save()\rreturn Response(serializer.data)\r# Update, Delete\r @api_view([\u0026#39;PUT\u0026#39;, \u0026#39;DELETE\u0026#39;])\rdef comment_edit(request, pk):\r변수명 = get_object_or_404(모델명, pk=pk)\rif request.method == \u0026#39;PUT\u0026#39;:\rserializer = 모델명Serializer(변수명, data=request.data)\rif serializer.is_valid():\rserializer.save()\rreturn Response(\u0026#39;성공적으로 수정이 완료 되었습니다.\u0026#39;)\rreturn Response(status=status.HTTP_400_BAD_REQUEST) # 상태까지 나타내기 위함  if request.method == \u0026#39;DELETE\u0026#39;:\rcomment.delete()\rreturn Response(\u0026#39;성공적으로 삭제 되었습니다.\u0026#39;, status=status.HTTP_204_NO_CONTENT)\r  views.py에서 작성한 이름대로 urls.py에 추가\n  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.12.html",
	"title": "2020.05.12",
	"tags": ["TIL", "20.05.12", "5월", "Javascript"],
	"description": "",
	"content": "오늘 배운 것 Javascript   Type\n Primitive Type(원시 타입) : 변수에 저장할 때 실제 메모리에 저장된 값을 담는다.\n  Number String  ES6+ 부터 String-Template Literal 지원, Backtik(`)을 이용하여 여러 줄에 걸쳐 문자를 정의 가능, JS의 변수를 문자열 안에 바로 넣을 수 있음(Python에서 f\u0026rdquo; \u0026ldquo;와 비슷)   Boolean Empty value (null, undefined)    Operators\n 할당 연산자 (+=, -=, ++, \u0026ndash;) 비교 연산자(부등호) 동등 연산자(==) : 메모리의 같은 객체를 가리키거나 같은 값을 갖도록 type변환 할 수 있다면 서로 같다고 판단. 일치 연산자(===) : 흔히 사용하는 == 논리 연산자(\u0026amp;\u0026amp; : and , || : or, ! : not) 삼항 연산자(Tenary Operator) : ? a : b    조건문\n if, else if, else switch    반복문\n  while\n  for\n  for of : 배열에서 요소를 하나씩 순회하며 반복\nconst numbers = [0, 1, 2, 3]\rfor (const number of numbers){\rconsole.log(number)\r}\r  for in : Object의 key를 순회하며 반복하는 반복문, Array의 경우 index 순회\nconst fruits = {a: \u0026#39;apple\u0026#39;, b: \u0026#39;banana\u0026#39;}\rfor (const key in fruits){\rconsole.log(key)\rconsole.log(fruits[key])\r}\rconst fruits1 = [\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;]\rfor (const idx in fruits1){\rconsole.log(idx)\rconsole.log(fruits[idx])\r}\r  forEach\nconst arr = [\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;]\rarr.forEach(function(name){\rconsole.log(name)\r})\r    Function\n  선언식(Declaration)\nfunction add(num1, num2){\rreturn num1 + num2\r}\r  표현식(Expression)\nconst sub = function namedSub(num1, num2){\rreturn num1 - num2\r}\r  기본 인자(Default Arguments)\nconst greeting = function(name=\u0026#39;noBody\u0026#39;){\rconsole.log(`${name}`)\r}\r  Arrow Function : Function에 비해 구문이 짧고, 항상 익명. 메소드 함수가 아닌 곳에서 가장 적합\nconst arrow = function(name){\rreturn `hello ${name}`\r}\r// 1. function 키워드 삭제\rconst arrow = (name) =\u0026gt; {return `hello ${name}`}\r// 2. ()생략, 함수 매개변수가 하나일 경우\rconst arrow = name =\u0026gt; {return `hello ${name}`}\r// 3. {}, return 생략, 표현식이 하나일 경우\rconst arrow = name =\u0026gt; `hello ${name}`\r// 4. 인자가 없다면 () or _로 표현 가능\rconst noArgs = _ =\u0026gt; \u0026#39;No Args\u0026#39;\r// 5. object 리턴\rconst returnedObject = () =\u0026gt; {return {key: \u0026#39;value\u0026#39;}}\r// 6.\rconst returnedObject = () =\u0026gt; ({key: \u0026#39;value\u0026#39;})\r  IIFE(즉시실행 함수)\n(function(num){\rreturn num**3\r})(2)\r// 결과 \u0026gt;\u0026gt; 8\r    Array\n JS에선 Index를 양의 정수만 사용 가능(python에서 처럼 arr[-1] 불가능) arr.reverse() : 원본 배열의 요소 순서를 반대로 arr.push('a') : 요소를 배열의 가장 뒤에 추가 arr.pop(): 가장 뒤 요소를 제거후 반환 arr.unshift('a'): 요소를 배열의 가장 앞에 추가 arr.shift(): 가장 앞에 있는 요소 제거 arr.includes(요소): 특정 요소가 있는지 여부 판단 후 boolean 반환 arr.indexOf(요소): 특정 요소가 있는지 여부 판단 후, 가장 첫번째로 찾은 요소 index반환, 만약 없다면 -1반환    Object\n Object의 key는 문자열 타입, value는 모든 타입 가능\n const me = {\rname: \u0026#39;홍길동\u0026#39;, //key가 한 단어일때\r \u0026#39;phone number\u0026#39;: \u0026#39;01011111111\u0026#39;, //key가 여러 단어일때\r samsungProducts: {\rgalaxyWatch: \u0026#39;2019\u0026#39;,\rgalaxyPhone: \u0026#39;galaxy s9\u0026#39;,\rgalaxyBuds: \u0026#39;Buds plus\u0026#39;,\r}\r}\rme.name // \u0026#39;홍길동\u0026#39; (dot notation)\rme[\u0026#34;phone number\u0026#34;] //\u0026#39;01011111111\u0026#39;\rme.samsungProducts\rme.samsungProducts.galaxyBuds\r// Object.keys\rconst fruits = {a:\u0026#39;apple\u0026#39;, b:\u0026#39;banana\u0026#39;}\rObject.keys(fruits) // [\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;]\r // Object.values()\rObject.values(fruits) // [\u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;]\r // Object.entires()\rObject.entries(fruits) // [\u0026#34;a\u0026#34;,\u0026#34;apple\u0026#34;], [\u0026#34;b\u0026#34;,\u0026#34;banana\u0026#34;]\r // Object Literal (ES6+)\rconst books = [\u0026#34;Learing JS\u0026#34;, \u0026#34;Eloquent JS\u0026#34;]\rconst comics = {\rDC: [\u0026#39;Aquaman\u0026#39;, \u0026#39;Superman\u0026#39;],\rMarvel: [\u0026#39;Captain America\u0026#39;, \u0026#39;Avengers\u0026#39;],\r}\rconst magazines = null\rconst bookstore = {\rbooks, // == books: books\r comics, // comics: comics\r magazines, // == magazines:magazines\r}\r  JSON(Javascript Object Notation : JS 객체 표기법)\n key-value 형태로 js object와 유사한 모습으로 데이터 표기.\nobject처럼 사용하기 위해서는 parsing 필요\nJSON 형식의 파일을 다루기 위해 JS에서 JSON 내장 객체 제공\n // Object \u0026gt;\u0026gt; JSON\rconst cafe = {\rcoffee: \u0026#39;latte\u0026#39;,\ricecream: \u0026#39;mint choco\u0026#39;,\r}\rconst jsonData = JSON.stringify(cafe)\rconsole.log(typeof jsonData)\r// JSON \u0026gt;\u0026gt; Object\r const parsedData = JSON.parse(jsonData)\rconsole.log(parsedData)\rconsole.log(typeof parsedData)\r// primitive type vs reference type\r// const myNumber = 5\r// myNumber = 10 // error\r const myNumbers = [1,2,3,4,5]\rmyNumbers[0] = 100 // [100,2,3,4,5]\r const myObject = {\ra:\u0026#39;a\u0026#39;,\rb:\u0026#39;b\u0026#39;,\rc:\u0026#39;c\u0026#39;,\r}\rmyObject.a = \u0026#39;hello\u0026#39;\rconsole.log(myObject) // {a: \u0026#34;hello\u0026#34;, b: \u0026#34;b\u0026#34;, c: \u0026#34;c\u0026#34;}\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.13.html",
	"title": "2020.05.13",
	"tags": ["TIL", "20.05.13", "5월", "Django"],
	"description": "",
	"content": "오늘 배운 것 Django   API를 이용해 DB에 저장\n 네이버 영화 검색 API를 이용해 영화 목록을 검색한 후, 클릭한 영화를 DB에 저장\nget_or_create를 사용\n   views.py\ndef movie_list(request): # 영화 목록\r naver_client_id = \u0026#34;발급받은 id\u0026#34;\rnaver_client_secret = \u0026#34;발급받은 secret\u0026#34;\rif request.method == \u0026#39;GET\u0026#39;:\rclient_id = naver_client_id\rclient_secret = naver_client_secret\rq = request.GET.get(\u0026#39;q\u0026#39;)\rText = urllib.parse.quote(f\u0026#34;{q}\u0026#34;)\rurl = \u0026#34;https://openapi.naver.com/v1/search/movie?query=\u0026#34; + Text # json 결과\r movie_api_request = urllib.request.Request(url)\rmovie_api_request.add_header(\u0026#34;X-Naver-Client-Id\u0026#34;, client_id)\rmovie_api_request.add_header(\u0026#34;X-Naver-Client-Secret\u0026#34;, client_secret)\rresponse = urllib.request.urlopen(movie_api_request)\rrescode = response.getcode()\rif rescode == 200:\rresponse_body = response.read()\rresult = json.loads(response_body.decode(\u0026#39;utf-8\u0026#39;))\ritems = result.get(\u0026#39;items\u0026#39;)\rcontext = {\r\u0026#39;items\u0026#39;: items\r}\rreturn render(request, \u0026#39;reviews/movie_list.html\u0026#39;, context)\r 검색한 후, DB에 저장되어 있지 않은 영화는 저장 후 바로 detail 페이지로 넘어가도록 만들기 위해 get_or_create 를 사용\n   views.py\ndef movie_save(request):\rposter_URL = request.GET.get(\u0026#39;poster_url\u0026#39;)\rtitle = request.GET.get(\u0026#39;title\u0026#39;)\rcontent = request.GET.get(\u0026#39;content\u0026#39;)\rmovie, created = Movie.objects.get_or_create(title=title, poster_URL=poster_URL, content=content)\rreturn redirect(\u0026#39;reviews:movie_detail\u0026#39;, movie.pk)\r 새로 movie_save 함수를 만들어서 GET으로 넘어온 url query에서 필요한 정보를 가지고 db에 저장.\nget_or_create는 tuple형식으로 created에 boolean값으로 저장됨.\n   html\n\u0026#34;{% url \u0026#39;reviews:movie_save\u0026#39; %}?poster_url={{item.image}}\u0026amp;title={{item.title|safe}}\u0026amp;content={{item.userRating}}\u0026#34;\r 바로 query를 추가하여 넘겨주기 위해 위 코드를 사용했다.\n     "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.14.html",
	"title": "2020.05.14",
	"tags": ["20.05.14", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   병합정렬\ndef m_sort(a):\rif len(a) \u0026lt;= 1:\rreturn a\rcenter = len(a) // 2\rright = m_sort(a[center:])\rleft = m_sort(a[:center])\rreturn merge(left, right)\rdef merge(left,right):\rglobal cnt\rn_right = len(right)\rn_left = len(left)\ri = 0\ri_right = 0\ri_left = 0\rresult = [0] * (n_right+n_left)\rif left[-1] \u0026gt; right[-1]:\rcnt += 1\rwhile i_right != n_right and i_left != n_left:\rif right[i_right] \u0026gt;= left[i_left]:\rresult[i] += left[i_left]\ri += 1\ri_left += 1\relse:\rresult[i] += right[i_right]\ri += 1\ri_right += 1\rif i_left != n_left:\rwhile i_left != n_left:\rresult[i] += left[i_left]\ri += 1\ri_left += 1\rif i_right != n_right:\rwhile i_right != n_right:\rresult[i] += right[i_right]\ri += 1\ri_right += 1\rreturn result\rfor t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rcnt = 0\rresult_ = m_sort(a)\rprint(f\u0026#34;#{t+1} {result_[n//2]} {cnt}\u0026#34;)\r  퀵 정렬\n# def quick_sort(a):\r # if len(a) \u0026lt;= 1:\r # return a\r # pivot = a[len(a)//2]\r # left, right, equal =[],[],[]\r # for i in a:\r # if i \u0026lt; pivot:\r # left.append(i)\r # elif i \u0026gt; pivot:\r # right.append(i)\r # else:\r # equal.append(i)\r # return quick_sort(left) + equal + quick_sort(right)\r def quick_sort(a, l, r):\rif l \u0026lt; r:\rp = partition(a, l, r)\rquick_sort(a, l, p - 1)\rquick_sort(a, p + 1, r)\rdef partition(a, l, r):\rpivot = (l + r) // 2\rwhile l \u0026lt; r :\rwhile(a[l] \u0026lt; a[pivot] and l \u0026lt; r):\rl += 1\rwhile(a[r] \u0026gt;= a[pivot] and l \u0026lt; r):\rr -= 1\rif l \u0026lt; r:\rif l == pivot:\rpivot = r\ra[l], a[r] = a[r], a[l]\rA[pivot], a[r] = a[r], a[pivot]\rreturn r\rfor t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rquick_sort(a, 0, n-1)\rprint(f\u0026#34;#{t+1} {a[n//2]}\u0026#34;)\r 주석 처리 된 방법을 사용하면 10개중 9개 맞고 런타임에러\n   이진 탐색\nfor t in range(int(input())):\rn, m = map(int, input().split())\rarr1 = sorted(list(map(int, input().split())))\rarr2 = list(map(int, input().split()))\rcnt = 0\rfor i in arr2:\ra = 0\rb = n-1\rcheck = 0\rwhile a \u0026lt;= b:\rc = (a+b)//2\rif i \u0026gt;= arr1[c]:\rif i == arr1[c]:\rcnt+=1\rbreak\ra = c + 1\rif check == 1:\rbreak\rcheck = 1\relif i \u0026lt; arr1[c]:\rb = c - 1\rif check == 2:\rbreak\rcheck = 2\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.14.html",
	"title": "2020.05.14",
	"tags": ["TIL", "20.05.14", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   병합정렬\ndef m_sort(a):\rif len(a) \u0026lt;= 1:\rreturn a\rcenter = len(a) // 2\rright = m_sort(a[center:])\rleft = m_sort(a[:center])\rreturn merge(left, right)\rdef merge(left,right):\rglobal cnt\rn_right = len(right)\rn_left = len(left)\ri = 0\ri_right = 0\ri_left = 0\rresult = [0] * (n_right+n_left)\rif left[-1] \u0026gt; right[-1]:\rcnt += 1\rwhile i_right != n_right and i_left != n_left:\rif right[i_right] \u0026gt;= left[i_left]:\rresult[i] += left[i_left]\ri += 1\ri_left += 1\relse:\rresult[i] += right[i_right]\ri += 1\ri_right += 1\rif i_left != n_left:\rwhile i_left != n_left:\rresult[i] += left[i_left]\ri += 1\ri_left += 1\rif i_right != n_right:\rwhile i_right != n_right:\rresult[i] += right[i_right]\ri += 1\ri_right += 1\rreturn result\rfor t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rcnt = 0\rresult_ = m_sort(a)\rprint(f\u0026#34;#{t+1} {result_[n//2]} {cnt}\u0026#34;)\r  퀵 정렬\n# def quick_sort(a):\r # if len(a) \u0026lt;= 1:\r # return a\r # pivot = a[len(a)//2]\r # left, right, equal =[],[],[]\r # for i in a:\r # if i \u0026lt; pivot:\r # left.append(i)\r # elif i \u0026gt; pivot:\r # right.append(i)\r # else:\r # equal.append(i)\r # return quick_sort(left) + equal + quick_sort(right)\r def quick_sort(a, l, r):\rif l \u0026lt; r:\rp = partition(a, l, r)\rquick_sort(a, l, p - 1)\rquick_sort(a, p + 1, r)\rdef partition(a, l, r):\rpivot = (l + r) // 2\rwhile l \u0026lt; r :\rwhile(a[l] \u0026lt; a[pivot] and l \u0026lt; r):\rl += 1\rwhile(a[r] \u0026gt;= a[pivot] and l \u0026lt; r):\rr -= 1\rif l \u0026lt; r:\rif l == pivot:\rpivot = r\ra[l], a[r] = a[r], a[l]\rA[pivot], a[r] = a[r], a[pivot]\rreturn r\rfor t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rquick_sort(a, 0, n-1)\rprint(f\u0026#34;#{t+1} {a[n//2]}\u0026#34;)\r 주석 처리 된 방법을 사용하면 10개중 9개 맞고 런타임에러\n   이진 탐색\nfor t in range(int(input())):\rn, m = map(int, input().split())\rarr1 = sorted(list(map(int, input().split())))\rarr2 = list(map(int, input().split()))\rcnt = 0\rfor i in arr2:\ra = 0\rb = n-1\rcheck = 0\rwhile a \u0026lt;= b:\rc = (a+b)//2\rif i \u0026gt;= arr1[c]:\rif i == arr1[c]:\rcnt+=1\rbreak\ra = c + 1\rif check == 1:\rbreak\rcheck = 1\relif i \u0026lt; arr1[c]:\rb = c - 1\rif check == 2:\rbreak\rcheck = 2\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.15.html",
	"title": "2020.05.15",
	"tags": ["20.05.15", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   전기버스2\ndef sol(a):\rglobal cnt, result\rif a \u0026gt;= n:\rif result \u0026gt; cnt:\rresult = cnt\rreturn\rif result \u0026lt; cnt:\rreturn\rb = a\rc = arr[b]\rfor i in range(b+c, b, -1):\rcnt += 1\rsol(i)\rcnt -= 1\rfor t in range(int(input())):\rarr = list(map(int, input().split()))\rn = arr[0]\rresult = 987654321\rcnt = 0\rsol(1)\rprint(f\u0026#34;#{t+1} {result-1}\u0026#34;)\r  최소생산비용\ndef sol(a, s):\rglobal result\rif a == n:\rif result \u0026gt; s:\rresult = s\rreturn\rif result \u0026lt; s:\rreturn\rfor i in range(n):\rif visit[i] == 0:\rvisit[i] = 1\rsol(a+1, s + arr[a][i])\rvisit[i] = 0\rfor t in range(int(input())):\rn = int(input())\rarr = [list(map(int, input().split()))for _ in range(n)]\rresult = 1111111111111\rvisit = [0] * n\rsol(0,0)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.15.html",
	"title": "2020.05.15",
	"tags": ["TIL", "20.05.15", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   전기버스2\ndef sol(a):\rglobal cnt, result\rif a \u0026gt;= n:\rif result \u0026gt; cnt:\rresult = cnt\rreturn\rif result \u0026lt; cnt:\rreturn\rb = a\rc = arr[b]\rfor i in range(b+c, b, -1):\rcnt += 1\rsol(i)\rcnt -= 1\rfor t in range(int(input())):\rarr = list(map(int, input().split()))\rn = arr[0]\rresult = 987654321\rcnt = 0\rsol(1)\rprint(f\u0026#34;#{t+1} {result-1}\u0026#34;)\r  최소생산비용\ndef sol(a, s):\rglobal result\rif a == n:\rif result \u0026gt; s:\rresult = s\rreturn\rif result \u0026lt; s:\rreturn\rfor i in range(n):\rif visit[i] == 0:\rvisit[i] = 1\rsol(a+1, s + arr[a][i])\rvisit[i] = 0\rfor t in range(int(input())):\rn = int(input())\rarr = [list(map(int, input().split()))for _ in range(n)]\rresult = 1111111111111\rvisit = [0] * n\rsol(0,0)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.17.html",
	"title": "2020.05.17",
	"tags": ["TIL", "20.05.17", "5월", "Project"],
	"description": "",
	"content": "오늘 한 것 Project 구상  Q\u0026amp;A 페이지 세부 사항 조정  작성자 본인만 글 확인, 수정, 삭제를 할 수 있도록 수정 댓글 작성 가능하도록   Home 화면 구상  예쁘게 꾸미기 불가능\u0026hellip;. 디자인 도움을 받아야 함    "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.18.html",
	"title": "2020.05.18",
	"tags": ["TIL", "20.05.18", "5월", "javascript"],
	"description": "",
	"content": "오늘 배운 것 Javascript   eventlistener\n예)\n\u0026lt;script\u0026gt;\rconst myButton = document.querySelector(\u0026#39;#myButton\u0026#39;)\r// 요소.addEventListener(\u0026#39;이벤트\u0026#39;, 이벤트 발생시 실행할 함수)\r myButton.addEventListener(\u0026#39;click\u0026#39;, confirmMessage)\rmyButton.addEventListener(\u0026#39;click\u0026#39;, function(event) {\rconsole.log(event)\r})\r)\r\u0026lt;/script\u0026gt;\r  이벤트 요소 예\n click: 마우스 클릭 mouseover: 마우스 포인터가 요소 위에 mouseout: 마우스 포인터가 요소 밖으로 keypress: 누른 키의 문자가 입력됐을 때 keydown: 키를 처음 눌렀을 때 keyup: 키를 뗄 때 load: 페이지 로드가 완료 되었을 때 scroll: 페이지를 위아래로 스크롤 할 때 change: 선택 상자, 체크박스, 라디오 버튼의 상태가 변경되었을 때    "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.19.html",
	"title": "2020.05.19",
	"tags": ["TIL", "20.05.19", "5월", "Javascript"],
	"description": "",
	"content": "오늘 배운 것 AJAX   axios\n\u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; 추가\n\u0026lt;script\u0026gt;\raxios.get(\u0026#39;주소\u0026#39;)\r.then(function(response){ // 성공했을 때\r return response.data\r})\r.then(response =\u0026gt; {\t// arrow함수로 표현\r console.log(response)\r})\r.catch(function(error){ // 실패했을 때\r return error\r})\r\u0026lt;/script\u0026gt;\r  Django와 연결해서   Django Template에서 좋아요와 같은 기능에서 필요없는 반복을 줄일 수 있음\n  먼저 수정이 필요한 html에서 반복되는 부분을 js로 처리\n{% for article in articles %}\r\u0026lt;h4\u0026gt;제목: {{ article.title }}\u0026lt;/h4\u0026gt;\r\u0026lt;p\u0026gt;내용: {{ article.content }}\u0026lt;/p\u0026gt;\r{% if user in article.like_users.all %}\r\u0026lt;i class=\u0026#34;fas fa-heart fa-lg like-button\u0026#34; style=\u0026#34;color:crimson\u0026#34; data-id=\u0026#34;{{ article.pk }}\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\r{% else %}\r\u0026lt;i class=\u0026#34;fas fa-heart fa-lg like-button\u0026#34; style=\u0026#34;color:black\u0026#34; data-id=\u0026#34;{{ article.pk }}\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\r{% endif %}\r\u0026lt;span id=\u0026#34;like-count-{{ article.pk }}\u0026#34;\u0026gt;{{ article.like_users.all|length }} 명이 이 글을 좋아합니다.\u0026lt;/span\u0026gt;\r\u0026lt;hr\u0026gt;\r{% endfor %}\r\u0026lt;a href=\u0026#34;{% url \u0026#39;articles:create\u0026#39; %}\u0026#34;\u0026gt;CREATE\u0026lt;/a\u0026gt;\r\u0026lt;script\u0026gt;\r// 좋아요 버튼 모두 가져오기\r const likeButtonList = document.querySelectorAll(\u0026#39;.like-button\u0026#39;)\r// 좋아요 버튼 이벤트리스너 달기\r likeButtonList.forEach(likeButton =\u0026gt; {\rlikeButton.addEventListener(\u0026#39;click\u0026#39;, function(e) {\r// 좋아요 버튼 구분하기 위해 Article ID(data-id) 가져오기\r const articleId = e.target.dataset.id\r// 좋아요 변경\r axios.get(`/articles/${articleId}/like/`)\r.then(response =\u0026gt; {\rconst likeCount = response.data.count\rdocument.querySelector(`#like-count-${articleId}`).innerText = `${likeCount}명이 이 글을 좋아합니다.`\rif (response.data.liked === true){\re.target.style.color = \u0026#39;crimson\u0026#39;\r} else {\re.target.style.color = \u0026#39;black\u0026#39;\r}\r})\r.catch(err =\u0026gt; {\rconsole.log(err)\r})\r})\r})\r\u0026lt;/script\u0026gt;\r  views.py 도 수정\nfrom django.http import JsonResponse\rdef like(request, article_pk):\ruser = request.user article = get_object_or_404(Article, pk=article_pk)\rif article.like_users.filter(pk=user.pk).exists():\rarticle.like_users.remove(user)\rliked = False\relse:\rarticle.like_users.add(user)\rliked = True\rdata = {\r\u0026#39;liked\u0026#39;: liked,\r\u0026#39;count\u0026#39;: article.like_users.count()\r}\rreturn JsonResponse(data)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.20.html",
	"title": "2020.05.20",
	"tags": ["TIL", "20.05.20", "5월", "Project", "Javascript", "Django"],
	"description": "",
	"content": "오늘 한 것 간단한 PJT 구현 과정   Project 기본 설정 및 Model 작성 Data 가져오기 Javascript를 이용한 목록 구성 목록 랜덤 추천   1. Project 기본 설정 및 Model 작성  App의 이름을 accounts와 movies로 설정 한 후, 기본 setting을 변경 하고, 제공된 명세에 따라 Model 작성 후 migrations와 migrate를 했음.\n 2. JSON 파일의 Data 가져오기  JSON 파일을 DB에 저장하기 위해서 python manage.py loaddata moviedata.json 이용.\n위에서 만든 모델의 필드와 json파일의 필드가 같아야 완료 가능함.\n 3. Javascript를 이용하여 목록 구성  추천 목록과 500개가 넘는 전체 목록을 구성할 때 Javascript를 이용.\n영화 포스터가 나오도록 for 문을 돌리고 클릭시 modal로 영화 정보를 볼 수 있도록 만들었음.\n  전체 영화 목록의 html  {% extends \u0026#39;base.html\u0026#39; %}\r{% block content %}\r\u0026lt;!-- 영화 포스터로 목록을 만들기 위한 for문 --\u0026gt;\r\u0026lt;div class=\u0026#34;container poster-block\u0026#34;\u0026gt;\r{% for movie in movies %}\r\u0026lt;img src=\u0026#34;https://image.tmdb.org/t/p/w92/{{ movie.poster_path }}\u0026#34; class=\u0026#34;movie-poster\u0026#34; data-id=\u0026#34;{{movie.pk}}\u0026#34; data-toggle=\u0026#34;modal\u0026#34; data-target=\u0026#34;#ModalCenter\u0026#34;\u0026gt;\r{% endfor %}\r\u0026lt;/div\u0026gt;\r\u0026lt;span id=\u0026#34;user_id\u0026#34; class=\u0026#34;text-dark\u0026#34;\u0026gt;{{ user.pk }}\u0026lt;/span\u0026gt;\r\u0026lt;!-- Modal 부분 --\u0026gt;\r\u0026lt;div class=\u0026#34;modal fade\u0026#34; id=\u0026#34;ModalCenter\u0026#34; tabindex=\u0026#34;-1\u0026#34; role=\u0026#34;dialog\u0026#34; aria-labelledby=\u0026#34;ModalCenterTitle\u0026#34; aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-dialog modal-dialog-centered\u0026#34; role=\u0026#34;document\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-content\u0026#34; style=\u0026#34;opacity: 0.95\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;modal-header d-flex\u0026#34;\u0026gt;\r\u0026lt;h5 class=\u0026#34;modal-title titletitle\u0026#34; id=\u0026#34;ModalCenterTitle\u0026#34;\u0026gt;\u0026lt;/h5\u0026gt;\r\u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;close ml-0\u0026#34; data-dismiss=\u0026#34;modal\u0026#34; aria-label=\u0026#34;Close\u0026#34;\u0026gt;\r\u0026lt;span aria-hidden=\u0026#34;true\u0026#34;\u0026gt;\u0026amp;times;\u0026lt;/span\u0026gt;\r\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;modal-body bodybody container justify-content-center\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;modal-footer\u0026#34;\u0026gt;\r\u0026lt;i class=\u0026#34;fas fa-heart fa-lg like-button\u0026#34; style=\u0026#34;color: black;\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\r\u0026lt;span id=\u0026#34;like-count-span\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;\r\u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-secondary\u0026#34; data-dismiss=\u0026#34;modal\u0026#34;\u0026gt;Close\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;script\u0026gt;\r// 번호로 저장되어 있는 장르를 영어로 가져오기 위해 리스트 작성\r const movieGenreList = { 12:\u0026#34;Adventure\u0026#34;,\r14:\u0026#34;Fantasy\u0026#34;,\r16:\u0026#34;Animation\u0026#34;,\r18:\u0026#34;Drama\u0026#34;,\r27:\u0026#34;Horror\u0026#34;,\r28:\u0026#34;Action\u0026#34;,\r35:\u0026#34;Comedy\u0026#34;,\r36:\u0026#34;History\u0026#34;,\r37:\u0026#34;Western\u0026#34;,\r53:\u0026#34;Thriller\u0026#34;,\r80:\u0026#34;Crime\u0026#34;,\r99:\u0026#34;Documentary\u0026#34;,\r878:\u0026#34;Science Fiction\u0026#34;,\r9648:\u0026#34;Mystery\u0026#34;,\r10402:\u0026#34;Music\u0026#34;,\r10749:\u0026#34;Romance\u0026#34;,\r10751:\u0026#34;Family\u0026#34;,\r10752:\u0026#34;War\u0026#34;,\r10770:\u0026#34;TV Movie\u0026#34;\r}\rconst userIdSpan = document.querySelector(\u0026#34;#user_id\u0026#34;) // 좋아요 기능에서 유저 판별을 통해 빨간색, 검은색을 넣기 위해 Userid를 가져오는 queryselector\r const userId = userIdSpan.innerText // 가져온 queryselector에서 필요한 id만 추출\r const moviePosterList = document.querySelectorAll(\u0026#34;.movie-poster\u0026#34;) // 영화 포스터를 넣기 위해 모든 .movie-poster를 select\r const movieTitleH5 = document.querySelector(\u0026#34;.titletitle\u0026#34;) // 영화 제목을 넣기 위해\r const likeButton = document.querySelector(\u0026#34;.like-button\u0026#34;)\rconst imgSection = document.createElement(\u0026#39;img\u0026#39;)\rconst posterBlock = document.querySelector(\u0026#34;.poster-block\u0026#34;)\rconst overView = document.createElement(\u0026#39;p\u0026#39;)\rconst makingHr = document.createElement(\u0026#39;hr\u0026#39;)\rconst makingHr1 = document.createElement(\u0026#39;hr\u0026#39;)\rconst movieGenre = document.createElement(\u0026#39;p\u0026#39;)\rmoviePosterList.forEach(moviePoster =\u0026gt; {\rmoviePoster.addEventListener(\u0026#39;click\u0026#39;, function(e) {\rconst posterData = e.target.dataset.id\raxios.get(`/movies/${posterData}`)\r.then(res =\u0026gt; {\rlikeButton.style.color = \u0026#34;black\u0026#34;\rconst movieTitle = res.data.title\rconst movieRealTitle = res.data.original_title\rconst backGround = document.querySelector(\u0026#34;.modal-backdrop\u0026#34;) //뒷 배경\r const movieBackground = res.data.backdrop_path\rconst movieRank = res.data.vote_average\rconst overViewContent = res.data.overview\rconst genre = res.data.genres\rmovieGenre.innerText = \u0026#34;장르: \u0026#34;\rgenre.forEach(aGenre =\u0026gt; {\rif (aGenre in movieGenreList){\rmovieGenre.innerText += `${movieGenreList[aGenre]}/ `\r}\r})\roverView.innerText = `${overViewContent}`\rbackGround.style.backgroundImage = `url(\u0026#39;https://image.tmdb.org/t/p/original${movieBackground}\u0026#39;)`\rbackGround.style.backgroundSize = \u0026#34;cover\u0026#34;\rbackGround.style.opacity=\u0026#34;0.9\u0026#34;\rconst likeUsers = res.data.like_users\rmovieTitleH5.innerText = `${movieTitle}(${movieRealTitle})`\rconst modalBody = document.querySelector(\u0026#34;.bodybody\u0026#34;)\rmodalBody.appendChild(movieGenre)\rconst moviePoster = res.data.poster_path\rimgSection.setAttribute(\u0026#39;src\u0026#39;, `https://image.tmdb.org/t/p/w342/${moviePoster}`)\rmodalBody.appendChild(imgSection)\rimgSection.setAttribute(\u0026#39;class\u0026#39;, \u0026#39;mb-2 col-12\u0026#39;)\rmodalBody.appendChild(makingHr)\rmodalBody.appendChild(overView)\rmodalBody.appendChild(makingHr1)\rconst likeCount = res.data.like_users.length\rconst likePeople = document.querySelector(\u0026#34;#like-count-span\u0026#34;)\rlikePeople.innerText = `${likeCount}`\rfor (let i = 0; i \u0026lt; likeCount; i++){\rif (likeUsers[i] == userId){\rlikeButton.style.color = \u0026#34;crimson\u0026#34;\rbreak\r} else {\rlikeButton.style.color = \u0026#34;black\u0026#34;\r}\r}\r// 좋아요 버튼\r likeButton.addEventListener(\u0026#39;click\u0026#39;, function(e) {\re.stopImmediatePropagation()\raxios.get(`${posterData}/like/`)\r.then(response =\u0026gt; {\rconst likeCount1 = response.data.count\rconst likePeople1 = document.querySelector(\u0026#34;#like-count-span\u0026#34;)\rlikePeople1.innerText = `${likeCount1}`\rif (response.data.liked){\rlikeButton.style.color=\u0026#34;crimson\u0026#34;\r} else {\rlikeButton.style.color=\u0026#34;black\u0026#34;\r}\r})\r.catch(err =\u0026gt; {\rconsole.log(err)\r})\r})\r})\r})\r})\r\u0026lt;/script\u0026gt;\r{% endblock %}\rviews.py  from django.shortcuts import render, redirect, get_object_or_404\rfrom django.http import JsonResponse\rfrom django.contrib.auth.decorators import login_required\rfrom .models import Movie, Genre\rfrom .serializers import *\rfrom rest_framework.response import Response\rfrom rest_framework.decorators import api_view\r# Create your views here.\r def movie_list(request):\rgenres = Genre.objects.all()\rmovies = Movie.objects.order_by(\u0026#39;-popularity\u0026#39;)\rcontext = {\r\u0026#39;movies\u0026#39;: movies,\r\u0026#39;genres\u0026#39;: genres,\r}\rreturn render(request, \u0026#39;movies/movie_list.html\u0026#39;, context)\r@api_view([\u0026#39;GET\u0026#39;])\rdef movie_detail(request, movie_pk):\rmovie = get_object_or_404(Movie, pk=movie_pk)\rserializer = MovieSerializer(movie)\rreturn Response(serializer.data)\r# modal에서 가져올 data를 json으로 받기 위해 serializer 이용  @login_required\r@api_view([\u0026#39;GET\u0026#39;])\rdef like(request, movie_pk):\ruser = request.user\rmovie = get_object_or_404(Movie, pk=movie_pk)\rserializer =MovieSerializer(movie)\rif movie.like_users.filter(pk=user.pk).exists():\rmovie.like_users.remove(user)\rliked = False\relse:\rmovie.like_users.add(user)\rliked = True\rdata = {\r\u0026#39;liked\u0026#39;: liked,\r\u0026#39;count\u0026#39;: movie.like_users.count(),\r\u0026#39;movie\u0026#39;: serializer.data\r}\rreturn JsonResponse(data)\r# 랜덤으로 영화를 가져오기 위해\r def recommend(request):\rmovies = Movie.objects.order_by(\u0026#39;?\u0026#39;)[:12]\rcontext = {\r\u0026#39;movies\u0026#39;:movies\r}\rreturn render(request,\u0026#39;movies/movie_recommend.html\u0026#39;, context)\r"
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.21.html",
	"title": "2020.05.21",
	"tags": ["20.05.21", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   연산\nfrom collections import deque\rdef sol(start, end):\rcheck = {}\rcheck[start] = end\rwhile q:\rnum, cnt = q.popleft()\rif num == end:\rreturn cnt\rif num \u0026gt; 1000000 or num \u0026lt;= 0:\rcontinue\rfor i in range(4):\ra = 0\rif i == 0: a = num + 1\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\relif i == 1:\ra = num - 1\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\relif i == 2:\ra = num * 2\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\relif i == 3:\ra = num - 10\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\rfor t in range(int(input())):\rn, m = map(int, input().split())\rq = deque()\rq.append([n, 0]) # 시작과 카운트 입력\r result = sol(n, m)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r  그룹나누기\ndef search(a):\rif a == group[a]:\rreturn a\relse:\rreturn search(group[a])\rdef sol(a, b):\rgroup[search(b)] = search(a)\rfor t in range(int(input())):\rn, m = map(int, input().split())\rarr = list(map(int, input().split()))\rgroup = []\rfor i in range(1, n+1):\rgroup.append(i)\rgroup.insert(0,0)\r# print(group)\r for i in range(m):\rstart = arr[2*i]\rend = arr[2*i+1]\rsol(start, end)\rresult = []\rfor i in range(len(group)):\rresult.append(search(i))\rprint(f\u0026#34;#{t+1} {len(set(result))-1}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.21.html",
	"title": "2020.05.21",
	"tags": ["TIL", "20.05.21", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   연산\nfrom collections import deque\rdef sol(start, end):\rcheck = {}\rcheck[start] = end\rwhile q:\rnum, cnt = q.popleft()\rif num == end:\rreturn cnt\rif num \u0026gt; 1000000 or num \u0026lt;= 0:\rcontinue\rfor i in range(4):\ra = 0\rif i == 0: a = num + 1\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\relif i == 1:\ra = num - 1\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\relif i == 2:\ra = num * 2\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\relif i == 3:\ra = num - 10\rif a not in check:\rq.append((a, cnt+1))\rcheck[a] = 1\rfor t in range(int(input())):\rn, m = map(int, input().split())\rq = deque()\rq.append([n, 0]) # 시작과 카운트 입력\r result = sol(n, m)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r  그룹나누기\ndef search(a):\rif a == group[a]:\rreturn a\relse:\rreturn search(group[a])\rdef sol(a, b):\rgroup[search(b)] = search(a)\rfor t in range(int(input())):\rn, m = map(int, input().split())\rarr = list(map(int, input().split()))\rgroup = []\rfor i in range(1, n+1):\rgroup.append(i)\rgroup.insert(0,0)\r# print(group)\r for i in range(m):\rstart = arr[2*i]\rend = arr[2*i+1]\rsol(start, end)\rresult = []\rfor i in range(len(group)):\rresult.append(search(i))\rprint(f\u0026#34;#{t+1} {len(set(result))-1}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.22.html",
	"title": "2020.05.22",
	"tags": ["20.05.22", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   최소 신장 트리\ndef prim(a):\rkey = [float(\u0026#39;inf\u0026#39;)for _ in range(v+1)]\rpi = [None for _ in range(v+1)]\rvisit = [0 for _ in range(v+1)]\rkey[0] = 0\rfor _ in range(v+1):\rmin_key =float(\u0026#39;inf\u0026#39;)\rstart = -1\rfor i in range(v+1):\rif key[i] \u0026lt; min_key and not visit[i]:\rmin_key = key[i]\rstart = i\rvisit[start] = 1\rfor V, W in a[start]:\rif W \u0026lt; key[V] and not visit[V]:\rkey[V] = W\rpi[V] = start\rreturn sum(key)\rfor t in range(int(input())):\rv, e = map(int, input().split())\rgraph = {}\rfor _ in range(e):\rn1, n2, weight = map(int, input().split())\rif n1 not in graph:\rgraph[n1] = set()\rif n2 not in graph:\rgraph[n2] = set()\rgraph[n1].add((n2, weight))\rgraph[n2].add((n1, weight))\rprint(f\u0026#34;#{t+1} {prim(graph)}\u0026#34;)\r  최소 이동 거리\ndef dis():\rkey = [float(\u0026#39;inf\u0026#39;)for _ in range(n+1)]\rvisit = [0 for _ in range(n+1)]\rcheck = set()\rcheck.add(0)\rkey[0] = 0\rwhile True:\rmin_key = float(\u0026#39;inf\u0026#39;)\rs = -1\rfor i in check:\rif key[i] \u0026lt; min_key:\rmin_key = key[i]\rs = i\rvisit[s] = 1\rcheck.remove(s)\rif s == n:\rreturn key[s]\rfor e, w in l[s]:\rif key[e] \u0026gt; key[s] + w and not visit[e]:\rkey[e] = key[s] + w\rcheck.add(e)\rfor t in range(int(input())):\rn, e = map(int, input().split())\rl = {}\rfor _ in range(e):\rs, e, w = map(int, input().split())\rif s not in l:\rl[s] = [(e, w)]\relse:\rl[s] += [(e, w)]\rresult = dis()\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.22.html",
	"title": "2020.05.22",
	"tags": ["TIL", "20.05.22", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   최소 신장 트리\ndef prim(a):\rkey = [float(\u0026#39;inf\u0026#39;)for _ in range(v+1)]\rpi = [None for _ in range(v+1)]\rvisit = [0 for _ in range(v+1)]\rkey[0] = 0\rfor _ in range(v+1):\rmin_key =float(\u0026#39;inf\u0026#39;)\rstart = -1\rfor i in range(v+1):\rif key[i] \u0026lt; min_key and not visit[i]:\rmin_key = key[i]\rstart = i\rvisit[start] = 1\rfor V, W in a[start]:\rif W \u0026lt; key[V] and not visit[V]:\rkey[V] = W\rpi[V] = start\rreturn sum(key)\rfor t in range(int(input())):\rv, e = map(int, input().split())\rgraph = {}\rfor _ in range(e):\rn1, n2, weight = map(int, input().split())\rif n1 not in graph:\rgraph[n1] = set()\rif n2 not in graph:\rgraph[n2] = set()\rgraph[n1].add((n2, weight))\rgraph[n2].add((n1, weight))\rprint(f\u0026#34;#{t+1} {prim(graph)}\u0026#34;)\r  최소 이동 거리\ndef dis():\rkey = [float(\u0026#39;inf\u0026#39;)for _ in range(n+1)]\rvisit = [0 for _ in range(n+1)]\rcheck = set()\rcheck.add(0)\rkey[0] = 0\rwhile True:\rmin_key = float(\u0026#39;inf\u0026#39;)\rs = -1\rfor i in check:\rif key[i] \u0026lt; min_key:\rmin_key = key[i]\rs = i\rvisit[s] = 1\rcheck.remove(s)\rif s == n:\rreturn key[s]\rfor e, w in l[s]:\rif key[e] \u0026gt; key[s] + w and not visit[e]:\rkey[e] = key[s] + w\rcheck.add(e)\rfor t in range(int(input())):\rn, e = map(int, input().split())\rl = {}\rfor _ in range(e):\rs, e, w = map(int, input().split())\rif s not in l:\rl[s] = [(e, w)]\relse:\rl[s] += [(e, w)]\rresult = dis()\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.23.html",
	"title": "2020.05.23",
	"tags": ["20.05.23", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   7829 보물왕 태혁\n#include \u0026lt;stdio.h\u0026gt;\r int main(void) {\rint test_case;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rfor (int t = 1; t \u0026lt;= test_case; t++){\rint n, x;\rint max = -1, min = 100001;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i = 0; i \u0026lt; n; i++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;x);\rif (max \u0026lt; x) {\rmax = x;\r}\rif (min \u0026gt; x) {\rmin = x;\r}\r}\rprintf(\u0026#34;#%d %d\\n\u0026#34;, t, min * max);\r}\rreturn 0;\r}\r   "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.23.html",
	"title": "2020.05.23",
	"tags": ["TIL", "20.05.23", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   7829 보물왕 태혁\n#include \u0026lt;stdio.h\u0026gt;\r int main(void) {\rint test_case;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rfor (int t = 1; t \u0026lt;= test_case; t++){\rint n, x;\rint max = -1, min = 100001;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i = 0; i \u0026lt; n; i++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;x);\rif (max \u0026lt; x) {\rmax = x;\r}\rif (min \u0026gt; x) {\rmin = x;\r}\r}\rprintf(\u0026#34;#%d %d\\n\u0026#34;, t, min * max);\r}\rreturn 0;\r}\r   "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.24.html",
	"title": "2020.05.24",
	"tags": ["20.05.24", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   괄호 짝짓기\n#include \u0026lt;stdio.h\u0026gt;\r char arr[100001];\rint n;\rbool solution(char* a, int* length) {\rint l = *length;\rif (a[l] == \u0026#39;)\u0026#39;) {\rif (a[l - 1] == \u0026#39;(\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rif (a[l] == \u0026#39;]\u0026#39;) {\rif (a[l - 1] == \u0026#39;[\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rif (a[l] == \u0026#39;}\u0026#39;) {\rif (a[l - 1] == \u0026#39;{\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rif (a[l] == \u0026#39;\u0026gt;\u0026#39;) {\rif (a[l - 1] == \u0026#39;\u0026lt;\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rreturn true;\r}\rint main() {\rfor (int t = 1; t \u0026lt;= 10; t++) {\rint result = 1;\rint length = 0;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i = 1; i \u0026lt;= n; i++) {\rlength++;\rscanf(\u0026#34; %1c\u0026#34;, \u0026amp;arr[length]);\rif (solution(arr, \u0026amp;length) == false) {\rresult = 0;\r}\r}\rprintf(\u0026#34;#%d %d\\n\u0026#34;, t, result);\r}\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.24.html",
	"title": "2020.05.24",
	"tags": ["TIL", "20.05.24", "5월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것 SWEA 문제풀이   괄호 짝짓기\n#include \u0026lt;stdio.h\u0026gt;\r char arr[100001];\rint n;\rbool solution(char* a, int* length) {\rint l = *length;\rif (a[l] == \u0026#39;)\u0026#39;) {\rif (a[l - 1] == \u0026#39;(\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rif (a[l] == \u0026#39;]\u0026#39;) {\rif (a[l - 1] == \u0026#39;[\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rif (a[l] == \u0026#39;}\u0026#39;) {\rif (a[l - 1] == \u0026#39;{\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rif (a[l] == \u0026#39;\u0026gt;\u0026#39;) {\rif (a[l - 1] == \u0026#39;\u0026lt;\u0026#39;) {\ra[l - 1] = NULL;\ra[l] = NULL;\r*length -= 2;\rreturn true;\r}\relse return false;\r}\rreturn true;\r}\rint main() {\rfor (int t = 1; t \u0026lt;= 10; t++) {\rint result = 1;\rint length = 0;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i = 1; i \u0026lt;= n; i++) {\rlength++;\rscanf(\u0026#34; %1c\u0026#34;, \u0026amp;arr[length]);\rif (solution(arr, \u0026amp;length) == false) {\rresult = 0;\r}\r}\rprintf(\u0026#34;#%d %d\\n\u0026#34;, t, result);\r}\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.25.html",
	"title": "2020.05.25",
	"tags": ["TIL", "20.05.25", "5월", "Vue.js"],
	"description": "",
	"content": "오늘 배운 것 Vue.js  body태그에 \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Vue.js cdn을 추가하여 사용\n 1. Declarative Rendering(선언적 렌더링) \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r{{ message }}\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\rmessage: \u0026#39;message\u0026#39;\r}\r})\r\u0026lt;/script\u0026gt;\r2. 조건문(if) \u0026lt;div id=\u0026#34;using-if\u0026#34;\u0026gt;\r\u0026lt;p v-if=\u0026#34;check\u0026#34;\u0026gt;안녕\u0026lt;/p\u0026gt;\r\u0026lt;!-- 기본적인 자바스크립트 표현 가능 --\u0026gt;\r\u0026lt;p v-if=\u0026#34;check===\u0026#39;안녕\u0026#39;\u0026#34;\u0026gt;안녕\u0026lt;/p\u0026gt;\r\u0026lt;p v-else-if=\u0026#34;check===\u0026#39;반가워\u0026#39;\u0026#34;\u0026gt;반가워\u0026lt;/p\u0026gt;\r\u0026lt;p v-else\u0026gt;안녕 반가워\u0026lt;/p\u0026gt;\r\u0026lt;!-- false일 때만 보여주기 --\u0026gt;\r\u0026lt;p v-if=\u0026#34;!check\u0026#34;\u0026gt;False일때 나타내기\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#using-if\u0026#39;,\rdata: {\rcheck: \u0026#39;안녕\u0026#39;,\r}, })\r\u0026lt;/script\u0026gt;\r3. 반복문(for) \u0026lt;div id=\u0026#34;using-for\u0026#34;\u0026gt;\r\u0026lt;ol class=\u0026#34;check-list\u0026#34;\u0026gt; \u0026lt;!-- class는 지금 여기서 의미 없음--\u0026gt;\r\u0026lt;li v-for=\u0026#34;check in checkList\u0026#34;\u0026gt;{{check}}\u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r\u0026lt;ol\u0026gt; \u0026lt;!-- 배열안의 객체를 사용 --\u0026gt;\r\u0026lt;li v-for=\u0026#34;check in checkList2\u0026#34;\u0026gt;{{check.content}}\u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#using-for\u0026#39;,\rdata: {\rcheckList: [\u0026#39;첫번째\u0026#39;,\u0026#39;두번째\u0026#39;,\u0026#39;세번째\u0026#39;],\rcheckList2: [\r{content: \u0026#39;첫번째\u0026#39;},\r{content: \u0026#39;두번째\u0026#39;},\r{content: \u0026#39;세번째\u0026#39;},\r],\r}, })\r\u0026lt;/script\u0026gt;\r4. v-on 사용  v-on은 이벤트 발동시, methods에 정의된 함수를 호출  \u0026lt;div id=\u0026#39;vue-directive-practice\u0026#39;\u0026gt;\r\u0026lt;button v-on:click=\u0026#34;reversedMessage\u0026#34;\u0026gt;메세지 뒤집기\u0026lt;/button\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;!-- 자바스크립트에서 사용 가능한 모든 이벤트도 가능 --\u0026gt;\r\u0026lt;!-- event 객체가 필요한 경우, $event로 받아올 수 있다. --\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;!-- v-on 축약형 --\u0026gt;\r\u0026lt;!-- ex) @click, @mouseover, @keydown --\u0026gt;\r{{ message }}\r\u0026lt;button @click=\u0026#34;reversedMessage\u0026#34;\u0026gt;메세지 뒤집기2\u0026lt;/button\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#vue-directive-practice\u0026#39;,\rdata: {\rmessage: \u0026#39;Click!!\u0026#39;,\r},\rmethods: { // arrow function 사용 X\r reversedMessage: function(){\rthis.message = this.message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;)\r},\r},\r})\r\u0026lt;/script\u0026gt;\r5. v-bind 사용 \u0026lt;div id=\u0026#34;bind\u0026#34;\u0026gt;\r\u0026lt;a v-bind:href=\u0026#34;google\u0026#34;\u0026gt;Google Link\u0026lt;/a\u0026gt;\r\u0026lt;!--축약형--\u0026gt;\r\u0026lt;a :href=\u0026#34;google\u0026#34;\u0026gt;Google Link\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#bind\u0026#39;,\rdata: {\rgoogle: \u0026#39;https://www.google.com\u0026#39;,\r},\r})\r\u0026lt;/script\u0026gt;\r6. v-model 양방향 바인딩 \u0026lt;div id=\u0026#34;using-v-model\u0026#34;\u0026gt;\r{{ userInput }}\r\u0026lt;input type=\u0026#34;text\u0026#34; v-model=\u0026#34;userInput\u0026#34;\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;!-- v-model 아시안 문자 입력 이슈 --\u0026gt;\r{{ userInput }}\r\u0026lt;input type=\u0026#34;text\u0026#34; @input=\u0026#34;setMessage\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- vue cdn --\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#using-v-model\u0026#39;,\rdata: {\ruserInput: \u0026#39;\u0026#39;,\r},\rmethods: {\rsetMessage: function(event){\rthis.userInput = event.target.value\r},\r}\r})\r\u0026lt;/script\u0026gt;\r"
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.26.html",
	"title": "2020.05.26",
	"tags": ["TIL", "20.05.26", "5월", "Vue.js"],
	"description": "",
	"content": "오늘 배운 것 Vue.js   computed와 watched 비교\n computed  단순히 data로부터 계산된 값을 출력하기 위한 속성 계산해야 하는 목표 데이터를 정의하는 방식으로 해당 속성이 종속된 대상이 변경될 때만 함수를 실행 소프트웨어 공학에서 얘기하는 \u0026lsquo;선언형(무엇을 할 지) 프로그래밍\u0026rsquo; 방식   watched  특정한 데이터의 변경을 관찰하고 이어서 일어날 동작(로직)을 설정하기 위한 속성 감시할 데이터를 지정하고 그 데이터가 바뀌면 이런 함수를 실행하라는 방식 소프트웨어 공학에서 얘기하는 \u0026lsquo;명령형(어떻게 할 지) 프로그래밍\u0026rsquo; 방식 비동기 로직을 수행할 때 사용한다.      로딩 화면 띄우기\n https://projects.lukehaas.me/css-loaders/ 에서 css 가져와 사용\n   html\n\u0026lt;style\u0026gt;\r...복사한 코드...\r\u0026lt;/style\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;!--예를 들어 이미지 클릭할 때 --\u0026gt;\r\u0026lt;img src=\u0026#34;\u0026#34; @click=\u0026#34;\u0026lt;function이름\u0026gt;\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;loader\u0026#34; v-if=\u0026#34;isLoading\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;!--vue cdn--\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;!--axios cdn--\u0026gt;\r\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rconst app = new Vue({\rel: \u0026#39;#app\u0026#39;,\rdata: {\radvice: \u0026#39;\u0026#39;,\risLoading: false,\r},\rmethods: {\rgetAdvice: function () {\rthis.isLoading = true\raxios.get(\u0026#39;https://api.adviceslip.com/advice\u0026#39;)\r.then(res =\u0026gt; {\rthis.advice = res.data.slip.advice\rthis.isLoading = false\r})\r}\r}\r})\r\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r    "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.27.html",
	"title": "2020.05.27",
	"tags": ["TIL", "20.05.27", "5월", "Vue.js", "Vue cli"],
	"description": "",
	"content": "Vue CLI3 설치   공식 문서\n   설치 순서 (Windows10)\n$ npm install -g @vue/cli\r$ vue --version # 버젼확인\r  프로젝트 생성 및 실행  $ vue create \u0026lt;프로젝트 명\u0026gt;\r$ cd \u0026lt;프로젝트명\u0026gt; # 프로젝트 폴더로 이동\r$ npm run serve\r프로젝트 정리    src/App.vue에서 필요없는 기본코드 삭제(아래처럼)\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rname: \u0026#39;App\u0026#39;,\rcomponents: {},\r//여기에 data, methods 등 넣으면 됨\r }\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  컴포넌트 사용 방법   컴포넌트 생성 : components폴더에 .vue만들기(PascalCase로 이름만들기) 불러오기 : import 컴포넌트이름 from 경로 등록하기 : components 속성에 등록 사용하기 : \u0026lt;template\u0026gt; 내부에 html 태그처럼 추가  컴포넌트 기초 만들기    .vue파일 만들고 vue + tab 또는 \u0026lt; + tab으로 기초 작성\n  \u0026lt;template\u0026gt; 태그 안에 \u0026lt;div\u0026gt;안에 넣어줘야함\n  App.vue에서 연결\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;Index/\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport Index from \u0026#39;./components/Index.vue\u0026#39;\rexport default {\rname: \u0026#39;App\u0026#39;,\rcomponents: {\rIndex,\r}\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  components에서 data 작성 시 data: function () {}으로 작성\n  lodash 사용하여 샘플링 기능 추가\n$ npm i lodash\r  Vue-Router  공식 문서 참조\n 설치  $ vue add router\r컴포넌트 사용하기   컴포넌트를 만든다. 컴포넌트를 가져온다. 컴포넌트를 등록. 컴포넌트 사용. views폴더에 .vue파일 작성  router 폴더   index를 만들었을 때\n import Vue from \u0026#39;vue\u0026#39;\rimport VueRouter from \u0026#39;vue-router\u0026#39;\rimport Index from \u0026#39;../views/Index.vue\u0026#39;\rVue.use(VueRouter)\rconst routes = [\r{\rpath: \u0026#39;/\u0026#39;,\rname: \u0026#39;Index\u0026#39;,\rcomponents: Index\r},\r]\rconst router = new VueRouter({\rmode: \u0026#39;history\u0026#39;,\rbase: process.env.BASE_URL,\rroutes\r})\rexport default router\rHistory Mode   SPA의 단점은 주소가 바뀌지 않는다는 것. 주소가 바뀌지 않는다는 것은 사용자가 어떤 페이지에 요청을 보내 응답을 받았는지에 대한 history 관리를 할 수 없다는 뜻. 초창기에는 주소 뒤에 #(해쉬)또는 #!(해쉬뱅)을 붙이고 뒤에 하위 주소를 넣었다 (history mode off 하면 확인 가능) 브라우저에서 제공하는 주소 API를 사용해 주소를 바꾼다. 이를 위해 사용하는 것이 history API다.  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.28.html",
	"title": "2020.05.28",
	"tags": ["20.05.28", "5월", "Algorithm"],
	"description": "",
	"content": "SWEA 문제풀이   최대상금\n#include \u0026lt;stdio.h\u0026gt;\r#include \u0026lt;algorithm\u0026gt;\r#include \u0026lt;string.h\u0026gt;\r#include \u0026lt;string\u0026gt;\r using namespace std;\rint change, result;\rchar arr[6];\rstring str;\rbool visit[1000000][11];\rvoid sol(int cnt) {\rif (cnt == change) {\rresult = max(result, stoi(str));\rreturn;\r}\rfor (int i = 0; i \u0026lt; str.size(); i++) {\rfor (int j = i; j \u0026lt; str.size(); j++) {\rif (i==j) { continue; }\rswap(str[i], str[j]);\rif (visit[stoi(str)][cnt+1] == false) {\rvisit[stoi(str)][cnt+1] = true;\rsol(cnt + 1);\r}\rswap(str[i], str[j]);\r}\r}\r}\rint main() {\rint t;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;t);\rfor (int test_case = 1; test_case \u0026lt;= t; test_case++) {\rscanf(\u0026#34;%s\u0026#34;, arr);\rstr = arr;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;change);\rresult = 0;\rmemset(visit, false, sizeof(visit));\rsol(0);\rprintf(\u0026#34;#%d %d\\n\u0026#34;, test_case, result);\r}\rreturn 0;\r}\r  최적경로\n// 순열\r#include \u0026lt;iostream\u0026gt;\r#include \u0026lt;algorithm\u0026gt;\r using namespace std;\rstruct po {\rint x, y;\r};\rint t, n;\rint visit[12];\rpo a[12];\rint main() {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;t);\rfor (int test_case = 1; test_case \u0026lt;= t; test_case++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rint result = 987654321;\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;a[0].x, \u0026amp;a[0].y);\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;a[n+1].x, \u0026amp;a[n+1].y);\rfor (int i=1;i\u0026lt;=n;i++) {\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;a[i].x, \u0026amp;a[i].y);\rvisit[i] = i;\r}\rvisit[n+1] = n+1;\rdo {\rint sum = 0;\rfor (int i = 1; i \u0026lt;= n + 1; ++i) sum += abs(a[visit[i]].x - a[visit[i - 1]].x) + abs(a[visit[i]].y - a[visit[i - 1]].y);\rresult = min(result, sum);\r} while (next_permutation(visit+1,visit+1+n));\rprintf(\u0026#34;#%d %d\\n\u0026#34;, test_case, result);\r}\rreturn 0;\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.28.html",
	"title": "2020.05.28",
	"tags": ["TIL", "20.05.28", "5월", "Algorithm"],
	"description": "",
	"content": "SWEA 문제풀이   최대상금\n#include \u0026lt;stdio.h\u0026gt;\r#include \u0026lt;algorithm\u0026gt;\r#include \u0026lt;string.h\u0026gt;\r#include \u0026lt;string\u0026gt;\r using namespace std;\rint change, result;\rchar arr[6];\rstring str;\rbool visit[1000000][11];\rvoid sol(int cnt) {\rif (cnt == change) {\rresult = max(result, stoi(str));\rreturn;\r}\rfor (int i = 0; i \u0026lt; str.size(); i++) {\rfor (int j = i; j \u0026lt; str.size(); j++) {\rif (i==j) { continue; }\rswap(str[i], str[j]);\rif (visit[stoi(str)][cnt+1] == false) {\rvisit[stoi(str)][cnt+1] = true;\rsol(cnt + 1);\r}\rswap(str[i], str[j]);\r}\r}\r}\rint main() {\rint t;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;t);\rfor (int test_case = 1; test_case \u0026lt;= t; test_case++) {\rscanf(\u0026#34;%s\u0026#34;, arr);\rstr = arr;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;change);\rresult = 0;\rmemset(visit, false, sizeof(visit));\rsol(0);\rprintf(\u0026#34;#%d %d\\n\u0026#34;, test_case, result);\r}\rreturn 0;\r}\r  최적경로\n// 순열\r#include \u0026lt;iostream\u0026gt;\r#include \u0026lt;algorithm\u0026gt;\r using namespace std;\rstruct po {\rint x, y;\r};\rint t, n;\rint visit[12];\rpo a[12];\rint main() {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;t);\rfor (int test_case = 1; test_case \u0026lt;= t; test_case++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rint result = 987654321;\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;a[0].x, \u0026amp;a[0].y);\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;a[n+1].x, \u0026amp;a[n+1].y);\rfor (int i=1;i\u0026lt;=n;i++) {\rscanf(\u0026#34;%d %d\u0026#34;, \u0026amp;a[i].x, \u0026amp;a[i].y);\rvisit[i] = i;\r}\rvisit[n+1] = n+1;\rdo {\rint sum = 0;\rfor (int i = 1; i \u0026lt;= n + 1; ++i) sum += abs(a[visit[i]].x - a[visit[i - 1]].x) + abs(a[visit[i]].y - a[visit[i - 1]].y);\rresult = min(result, sum);\r} while (next_permutation(visit+1,visit+1+n));\rprintf(\u0026#34;#%d %d\\n\u0026#34;, test_case, result);\r}\rreturn 0;\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.29.html",
	"title": "2020.05.29",
	"tags": ["20.05.29", "5월", "Algorithm"],
	"description": "",
	"content": "SWEA 문제풀이   공통조상\ndef sol(n):\rq = [n]\rcnt =0\rwhile q:\rcnt += 1\ra = q.pop()\rfor i in v_1[a]:\rq.append(i)\rreturn cnt\rfor t in range(int(input())):\rv, e, n1, n2 = map(int, input().split())\rn3 = 9**9\rv_1 = [[]for _ in range(v+1)]\rv_2 = [[]for _ in range(v+1)]\rdata = [*map(int, input().split())]\rfor i in range(e):\rv_1[data[2*i]].append(data[2*i+1])\rv_2[data[2*i+1]].append(data[2*i])\rwhile n1 != n3:\rn1 = v_2[n1][0]\rn3 = n2\rwhile n3\u0026gt;1 and n1 != n3:\rn3=v_2[n3][0]\rresult = sol(n1)\rprint(f\u0026#34;#{t+1} {n1} {result}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.29.html",
	"title": "2020.05.29",
	"tags": ["TIL", "20.05.29", "5월", "Algorithm"],
	"description": "",
	"content": "SWEA 문제풀이   공통조상\ndef sol(n):\rq = [n]\rcnt =0\rwhile q:\rcnt += 1\ra = q.pop()\rfor i in v_1[a]:\rq.append(i)\rreturn cnt\rfor t in range(int(input())):\rv, e, n1, n2 = map(int, input().split())\rn3 = 9**9\rv_1 = [[]for _ in range(v+1)]\rv_2 = [[]for _ in range(v+1)]\rdata = [*map(int, input().split())]\rfor i in range(e):\rv_1[data[2*i]].append(data[2*i+1])\rv_2[data[2*i+1]].append(data[2*i])\rwhile n1 != n3:\rn1 = v_2[n1][0]\rn3 = n2\rwhile n3\u0026gt;1 and n1 != n3:\rn3=v_2[n3][0]\rresult = sol(n1)\rprint(f\u0026#34;#{t+1} {n1} {result}\u0026#34;)\r  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.30.html",
	"title": "2020.05.30",
	"tags": ["20.05.30", "5월", "Algorithm"],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.30.html",
	"title": "2020.05.30",
	"tags": ["TIL", "20.05.30", "5월", "Algorithm"],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.05.31.html",
	"title": "2020.05.31",
	"tags": ["20.05.31", "5월", "Algorithm"],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/til/5%EC%9B%94/20.05.31.html",
	"title": "2020.05.31",
	"tags": ["TIL", "20.05.31", "5월", "Algorithm"],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.01.html",
	"title": "2020.06.01",
	"tags": ["TIL", "20.06.01", "6월", "Vue"],
	"description": "",
	"content": "오늘 배운 것  Vue로 Todo List작성\n   App.vue\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;div id=\u0026#34;nav\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;router-view/\u0026gt; \u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r  TodoView.vue\n\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;TodoList :todos=\u0026#34;todos\u0026#34; @checked=\u0026#34;updatedTodo\u0026#34;/\u0026gt;\r\u0026lt;TodoInput @create-todo=\u0026#34;createTodo\u0026#34;/\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport TodoList from \u0026#39;@/components/TodoList.vue\u0026#39;\rimport TodoInput from \u0026#39;@/components/TodoInput.vue\u0026#39;\rexport default {\rname: \u0026#39;TodoView\u0026#39;,\rcomponents: {\rTodoList,\rTodoInput,\r},\rdata() {\rreturn {\rtodos: [\r{\rid: 1,\rcontent: \u0026#39;Django 복습\u0026#39;,\risCompleted: true,\r},\r{\rid: 2,\rcontent: \u0026#39;Vue 복습\u0026#39;,\risCompleted: false,\r},\r{\rid: 3,\rcontent: \u0026#39;저녁\u0026#39;,\risCompleted: false,\r},\r]\r}\r},\rmethods: {\rupdatedTodo(todo) {\rtodo.isCompleted = !todo.isCompleted\r},\rcreateTodo(todo) {\rthis.todos.push(todo)\r}\r}\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  TodoInput.vue\n\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;input type=\u0026#34;text\u0026#34; v-model=\u0026#34;userInput\u0026#34; @keyup.enter=\u0026#34;createTodo\u0026#34;\u0026gt;\r\u0026lt;button @click=\u0026#34;createTodo\u0026#34;\u0026gt;등록\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rname: \u0026#39;TodoInput\u0026#39;,\rdata() {\rreturn {\ruserInput: \u0026#39;\u0026#39;,\r}\r},\rmethods: {\rcreateTodo() {\rconst newTodo = {\rid: Date.now(),\rcontent: this.userInput,\risCompleted: false,\r}\rthis.$emit(\u0026#39;create-todo\u0026#39;, newTodo)\rthis.userInput = \u0026#39;\u0026#39;\r},\r}\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  TodoList.vue\n\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;h1\u0026gt;Todo List\u0026lt;/h1\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;todo in todos\u0026#34; :key=\u0026#34;todo.id\u0026#34; :class=\u0026#34;{ completed: todo.isCompleted }\u0026#34;\u0026gt;\r\u0026lt;!-- \u0026lt;input type=\u0026#34;checkbox\u0026#34; v-model=\u0026#34;todo.isCompleted\u0026#34;\u0026gt; --\u0026gt;\r\u0026lt;input type=\u0026#34;checkbox\u0026#34; :checked=\u0026#34;todo.isCompleted\u0026#34; @click=\u0026#34;$emit(\u0026#39;checked\u0026#39;, todo)\u0026#34;\r\u0026gt;\r{{ todo.content }}\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rname: \u0026#39;TodoList\u0026#39;,\rprops: {\rtodos: {\rtype: Array,\rrequired: true,\r},\r},\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style scoped\u0026gt;\r.completed {\rtext-decoration: line-through;\r}\r\u0026lt;/style\u0026gt;\r  index.js\nimport Vue from \u0026#39;vue\u0026#39;\rimport VueRouter from \u0026#39;vue-router\u0026#39;\rimport TodoView from \u0026#39;@/views/TodoView.vue\u0026#39;\rVue.use(VueRouter)\rconst routes = [\r{\rpath: \u0026#39;/\u0026#39;,\rname: \u0026#39;TodoView\u0026#39;,\rcomponent: TodoView\r}\r]\rconst router = new VueRouter({\rmode: \u0026#39;history\u0026#39;,\rbase: process.env.BASE_URL,\rroutes\r})\rexport default router\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.02.html",
	"title": "2020.06.02",
	"tags": ["TIL", "20.06.02", "6월", "Vue"],
	"description": "",
	"content": "오늘 배운 것  Vue로 Youtube API를 이용해 영상 찾기 및 재생\n   npm i axios로 axios 패키지 설치하여 이용\n  App.vue를 작성\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\r\u0026lt;SearchBar @input-change=\u0026#34;onInputChange\u0026#34;/\u0026gt;\r\u0026lt;VideoList :videos=\u0026#34;videos\u0026#34;/\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport axios from \u0026#39;axios\u0026#39;\rimport SearchBar from \u0026#39;@/components/SearchBar.vue\u0026#39;\rimport VideoList from \u0026#39;@/components/VideoList.vue\u0026#39;\rconst YOUTUBE_API_KEY = process.env.VUE_APP_YOUTUBE_API_KEY\rconst YOUTUBE_API_URL = \u0026#39;https://www.googleapis.com/youtube/v3/search\u0026#39;\rexport default {\rname: \u0026#39;App\u0026#39;,\rcomponents: {\rSearchBar,\rVideoList\r},\rdata() {\rreturn {\rvideos: [],\r}\r},\rmethods: {\ronInputChange(userInput) {\rconst config = {\rparams: {\rkey: YOUTUBE_API_KEY,\rpart: \u0026#39;snippet\u0026#39;,\rtype: \u0026#39;video\u0026#39;,\rq: userInput,\r}\r}\raxios.get(YOUTUBE_API_URL, config)\r.then(res =\u0026gt; {\rconsole.log(res)\rthis.videos = res.data.items\r})\r.catch(err =\u0026gt; {\rconsole.log(err)\r})\r}\r}\r}\r\u0026lt;/script\u0026gt;\r  영상 목록과 검색창 컴포넌트\n\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;h1\u0026gt;Video List\u0026lt;/h1\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li v-for=\u0026#34;video in videos\u0026#34; :key=\u0026#34;video.etag\u0026#34;\u0026gt;\r\u0026lt;img :src=\u0026#34;video.snippet.thumbnails.default.url\u0026#34; style=\u0026#34;height: 300px;\u0026#34;\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rname: \u0026#39;VideoList\u0026#39;,\rprops: {\rvideos: {\rtype: Array,\r}\r}\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;input type=\u0026#34;text\u0026#34; @keypress.enter=\u0026#34;onInput\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rname: \u0026#39;SearchBar\u0026#39;,\rmethods: {\ronInput(e) {\rthis.$emit(\u0026#39;input-change\u0026#39;, e.target.value)\r},\r},\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.03.html",
	"title": "2020.06.03",
	"tags": ["TIL", "20.06.03", "6월", "Vue"],
	"description": "",
	"content": "오늘 한 것  Vue Project\n 구현과정   vue 프로젝트 생성 기본 구조 설정 필요 기능 추가   1. vue 프로젝트 생성  vue create project명 을 bash에서 실행 router 사용을 위한 vue add router cd project명으로 폴더 이동 후 필요한 axios와 같은 패키지 설치  ex) npm i axios , npm i lodash    2. 기본 구조 설정   영화 목록을 가져오고 보여 주는 MovieView.vue와 예고편 검색을 위한 VideoView.vue를 views폴더에 생성\n  public의 index.html에 bootstrap사용을 위한 cdn 추가\n  router 폴더에 있는 index.js와 연결\n  import MovieView from \u0026#39;@/views/MovieView.vue\u0026#39;\rimport MainView from \u0026#39;@/views/MainView.vue\u0026#39;\rimport VideoView from \u0026#39;@/views/VideoView.vue\u0026#39;\rVue.use(VueRouter)\rconst routes = [\r{\rpath: \u0026#39;/movie\u0026#39;,\rname: \u0026#39;MovieView\u0026#39;,\rcomponent: MovieView\r},\r{\rpath: \u0026#39;/\u0026#39;,\rname: \u0026#39;MainView\u0026#39;,\rcomponent: MainView\r},\r{\rpath: \u0026#39;/video\u0026#39;,\rname: \u0026#39;VideoView\u0026#39;,\rcomponent: VideoView\r},\r    components폴더에 필요한 컴포넌트 생성\n 여기선 총 6가지 사용    App.vue 파일과 router, view 연결\n  3. 필요 기능 추가   axios를 이용하여 데이터 가져오기(Movie에서는 영화 목록, Video에서는 Youtube API를 통해 필요 데이터 가져옴)\n  Bootstrap에서 지원하는 Modal 이용\n Modal사용시 data-target, id 값이 숫자로만 이뤄질 경우 동작하지 않음.    클래스 바인딩으로 평점이 7점 넘을 경우 빨갛게 표시, 아닐경우 노랗게 표시\n\u0026lt;p class=\u0026#34;btn\u0026#34; :class=\u0026#34;[ highAndLow() ? \u0026#39;btn-danger\u0026#39; : \u0026#39;btn-warning\u0026#39; ]\u0026#34;\u0026gt;{{ movie.user_rating }}\u0026lt;/p\u0026gt;\r\u0026lt;scirpt\u0026gt;\r....\rmethods: {\rhighAndLow() {\rif (this.movie.user_rating \u0026gt; 7) {\rreturn true\r} else {\rreturn false\r}\r}\r.....\r}\r\u0026lt;/scirpt\u0026gt;\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.04.html",
	"title": "2020.06.04",
	"tags": ["TIL", "20.06.04", "6월", "Vue"],
	"description": "",
	"content": "오늘 한 것  SWEA 문제풀이\n   생일파티\n python  for t in range(int(input())):\rn, m = map(int, input().split())\ra = [[]for _ in range(n+1)]\rfor i in range(m):\rn1, n2 = map(int,input().split())\ra[n1].append(n2)\ra[n2].append(n1)\rresult = set()\rresult.update(a[1])\rfor i in a[1]:\rresult.update(a[i])\rif 1 in result:\rresult.remove(1)\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r  보급로\n C++  #include \u0026lt;cstdio\u0026gt;\r#include \u0026lt;cstring\u0026gt;\r#include \u0026lt;algorithm\u0026gt;\r#include \u0026lt;queue\u0026gt;\rusing namespace std;\rint map[100][100];\rint dis[100][100];\rint dx[4] = {0, 0, -1, 1};\rint dy[4] = {-1, 1, 0, 0};\rint n;\rbool border(int x, int y) {\rreturn (0 \u0026lt;= x \u0026amp;\u0026amp; x \u0026lt; n \u0026amp;\u0026amp; 0 \u0026lt;= y \u0026amp;\u0026amp; y \u0026lt; n);\r}\rvoid solv() {\rqueue\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; q;\rq.push(make_pair(0,0));\rwhile (!q.empty()) {\rint x = q.front().first;\rint y = q.front().second;\rq.pop();\rfor (int i=0; i\u0026lt;4; i++) {\rint nx = x+dx[i];\rint ny = y+dy[i];\rif (border(nx,ny)) {\rint dist = map[nx][ny] + dis[x][y];\rif (dist \u0026lt; dis[nx][ny]) {\rq.push(make_pair(nx, ny));\rdis[nx][ny] = dist;\r}\r}\r}\r}\rreturn;\r}\rint main() {\rint test_case;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rfor (int t=1; t\u0026lt;=test_case; t++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i=0; i\u0026lt;n;i++) {\rfor (int j=0;j\u0026lt;n;j++) {\rscanf(\u0026#34;%1d\u0026#34;, \u0026amp;map[i][j]);\rdis[i][j] = 9999999;\r}\r}\rdis[0][0] = 0;\rsolv();\rprintf(\u0026#34;#%d %d\\n\u0026#34;, t, dis[n-1][n-1]);\r}\rreturn 0;\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4~6/20.06.05.html",
	"title": "2020.06.05",
	"tags": ["20.06.05", "6월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA, 백준 문제풀이\n   하나로\n#include \u0026lt;cstdio\u0026gt;\r int test_case, n;\rlong long x[1000], y[1000], dis[1000];\rbool visit[1000];\rdouble E;\rlong long result;\rlong long dist(long long x1, long long y1, long long x2, long long y2) {\rreturn (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2);\r}\rint main() {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rfor (int t = 1; t \u0026lt;= test_case; t++) {\rresult = 0;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i = 0; i \u0026lt;n; i++) {\rscanf(\u0026#34;%lld\u0026#34;, \u0026amp;x[i]);\r}\rfor (int i = 0; i \u0026lt;n; i++) {\rscanf(\u0026#34;%lld\u0026#34;, \u0026amp;y[i]);\r}\rfor (int i = 0; i \u0026lt;n; i++) {\rdis[i] = 1e16;\rvisit[i] = 0;\r}\rscanf(\u0026#34;%lf\u0026#34;, \u0026amp;E);\rdis[0] = 0;\rfor (int i = 0; i \u0026lt; n; i++) {\rlong long a = 1e16;\rlong long b = i;\rfor (int j=0;j\u0026lt;n;j++) {\rif (!visit[j] \u0026amp;\u0026amp; dis[j] \u0026lt; a) {\ra = dis[j];\rb = j;\r}\r}\rvisit[b] = true;\rresult += a;\rfor (int j = 0; j \u0026lt;n; j++) {\rif (!visit[j]) {\ra = dist(x[b], y[b], x[j], y[j]);\rif (dis[j] \u0026gt; a) {\rdis[j] = a;\r}\r}\r}\r}\rprintf(\u0026#34;#%d %.0lf\\n\u0026#34;, t, E*result);\r}\rreturn 0;\r}\r  색종이 붙이기(백준)\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; using namespace std;\rconst int INF = 987654321;\rint arr[10][10];\rint cnt = 0;\rint result;\rint paper[6] = { 0, 5, 5, 5, 5, 5 };\rvoid sol(int y, int x) { // 해당 줄은 다 확인했으므로 다음 줄 확인  if (x == 10) {\rsol(y + 1, 0);\rreturn;\r} // 마지막 줄까지 다 확인했으므로 현재 색종이 개수 확인  if (y == 10) {\rresult = min(result, cnt);\rreturn;\r} // 덮을 필요 없으므로 다음 칸 확인  if (arr[y][x] == 0) {\rsol(y, x + 1);\rreturn;\r} // 모든 경우의 수 다 확인  for (int len = 5; len \u0026gt;= 1; len--) { // 현재 len 크기 색종이가 없거나 덮었을 때 범위를 벗어날 경우  if (paper[len] == 0 || y + len \u0026gt; 10 || x + len \u0026gt; 20) {\rcontinue;\r}\rbool flag = true; // len 길이만한 정사각형이 존재하는지 확인  for (int j = 0; j \u0026lt; len; j++) {\rfor (int k = 0; k \u0026lt; len; k++) {\rif (arr[y + j][x + k] == 0) {\rflag = false;\rbreak;\r}\r}\rif (flag == false) {\rbreak;\r}\r} // 존재하지 않으면 확인할 필요 없음  if (flag == false) {\rcontinue;\r} // 덮었다고 치고  for (int j = 0; j \u0026lt; len; j++) {\rfor (int k = 0; k \u0026lt; len; k++) {\rarr[y + j][x + k] = 0;\r}\r}\rpaper[len]--;\rcnt++; // 다음 칸 확인  sol(y, x + len); // 덮었던 색종이를 치운다  for (int j = 0; j \u0026lt; len; j++) {\rfor (int k = 0; k \u0026lt; len; k++) {\rarr[y + j][x + k] = 1;\r}\r}\rpaper[len]++;\rcnt--;\r}\r}\rint main(void) {\rfor (int i = 0; i \u0026lt; 10; i++) {\rfor (int j = 0; j \u0026lt; 10; j++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;arr[i][j]);\r}\r} result = INF;\rsol(0, 0);\rif (result == INF) {\rresult = -1;\r}\rprintf(\u0026#34;%d\u0026#34;, result);\rreturn 0;\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.05.html",
	"title": "2020.06.05",
	"tags": ["TIL", "20.06.05", "6월", "Algorithm"],
	"description": "",
	"content": "오늘 한 것  SWEA, 백준 문제풀이\n   하나로\n#include \u0026lt;cstdio\u0026gt;\r int test_case, n;\rlong long x[1000], y[1000], dis[1000];\rbool visit[1000];\rdouble E;\rlong long result;\rlong long dist(long long x1, long long y1, long long x2, long long y2) {\rreturn (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2);\r}\rint main() {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;test_case);\rfor (int t = 1; t \u0026lt;= test_case; t++) {\rresult = 0;\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;n);\rfor (int i = 0; i \u0026lt;n; i++) {\rscanf(\u0026#34;%lld\u0026#34;, \u0026amp;x[i]);\r}\rfor (int i = 0; i \u0026lt;n; i++) {\rscanf(\u0026#34;%lld\u0026#34;, \u0026amp;y[i]);\r}\rfor (int i = 0; i \u0026lt;n; i++) {\rdis[i] = 1e16;\rvisit[i] = 0;\r}\rscanf(\u0026#34;%lf\u0026#34;, \u0026amp;E);\rdis[0] = 0;\rfor (int i = 0; i \u0026lt; n; i++) {\rlong long a = 1e16;\rlong long b = i;\rfor (int j=0;j\u0026lt;n;j++) {\rif (!visit[j] \u0026amp;\u0026amp; dis[j] \u0026lt; a) {\ra = dis[j];\rb = j;\r}\r}\rvisit[b] = true;\rresult += a;\rfor (int j = 0; j \u0026lt;n; j++) {\rif (!visit[j]) {\ra = dist(x[b], y[b], x[j], y[j]);\rif (dis[j] \u0026gt; a) {\rdis[j] = a;\r}\r}\r}\r}\rprintf(\u0026#34;#%d %.0lf\\n\u0026#34;, t, E*result);\r}\rreturn 0;\r}\r  색종이 붙이기(백준)\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; using namespace std;\rconst int INF = 987654321;\rint arr[10][10];\rint cnt = 0;\rint result;\rint paper[6] = { 0, 5, 5, 5, 5, 5 };\rvoid sol(int y, int x) { // 해당 줄은 다 확인했으므로 다음 줄 확인  if (x == 10) {\rsol(y + 1, 0);\rreturn;\r} // 마지막 줄까지 다 확인했으므로 현재 색종이 개수 확인  if (y == 10) {\rresult = min(result, cnt);\rreturn;\r} // 덮을 필요 없으므로 다음 칸 확인  if (arr[y][x] == 0) {\rsol(y, x + 1);\rreturn;\r} // 모든 경우의 수 다 확인  for (int len = 5; len \u0026gt;= 1; len--) { // 현재 len 크기 색종이가 없거나 덮었을 때 범위를 벗어날 경우  if (paper[len] == 0 || y + len \u0026gt; 10 || x + len \u0026gt; 20) {\rcontinue;\r}\rbool flag = true; // len 길이만한 정사각형이 존재하는지 확인  for (int j = 0; j \u0026lt; len; j++) {\rfor (int k = 0; k \u0026lt; len; k++) {\rif (arr[y + j][x + k] == 0) {\rflag = false;\rbreak;\r}\r}\rif (flag == false) {\rbreak;\r}\r} // 존재하지 않으면 확인할 필요 없음  if (flag == false) {\rcontinue;\r} // 덮었다고 치고  for (int j = 0; j \u0026lt; len; j++) {\rfor (int k = 0; k \u0026lt; len; k++) {\rarr[y + j][x + k] = 0;\r}\r}\rpaper[len]--;\rcnt++; // 다음 칸 확인  sol(y, x + len); // 덮었던 색종이를 치운다  for (int j = 0; j \u0026lt; len; j++) {\rfor (int k = 0; k \u0026lt; len; k++) {\rarr[y + j][x + k] = 1;\r}\r}\rpaper[len]++;\rcnt--;\r}\r}\rint main(void) {\rfor (int i = 0; i \u0026lt; 10; i++) {\rfor (int j = 0; j \u0026lt; 10; j++) {\rscanf(\u0026#34;%d\u0026#34;, \u0026amp;arr[i][j]);\r}\r} result = INF;\rsol(0, 0);\rif (result == INF) {\rresult = -1;\r}\rprintf(\u0026#34;%d\u0026#34;, result);\rreturn 0;\r}\r  "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.06.html",
	"title": "2020.06.06",
	"tags": ["TIL", "20.06.06", "6월"],
	"description": "",
	"content": "오늘 한 것 "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.07.html",
	"title": "2020.06.07",
	"tags": ["TIL", "20.06.07", "6월"],
	"description": "",
	"content": "오늘 한 것 "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.08.html",
	"title": "2020.06.08",
	"tags": ["TIL", "20.06.08", "6월", "Vue", "Django"],
	"description": "",
	"content": "오늘 배운 것 Django \u0026amp; Vue  Django를 백엔드로 Vue를 프론트엔드\nDjango Rest Framework를 사용\n Django 설정   전에 했던 Django Rest Framework를 사용하여 Serializers를 이용.\n  따로 Templates를 만들지 않고 JSON 정보를 가지고 vue를 이용.\n  settings.py의 INSTALLED_APP에서 아래 추가 후 사용.\n  INSTALLED_APPS = [\r...\r\u0026#39;django.contrib.sites\u0026#39;,\r\u0026#39;rest_framework\u0026#39;, \u0026#39;rest_framework.authtoken\u0026#39;,\r\u0026#39;rest_auth\u0026#39;,\r\u0026#39;rest_auth.registration\u0026#39;,\r\u0026#39;allauth\u0026#39;,\r\u0026#39;allauth.account\u0026#39;,\r...\r]\rREST_FRAMEWORK = {\r\u0026#39;DEFAULT_AUTHENTICATION_CLASSES\u0026#39;: [\r\u0026#39;rest_framework.authentication.TokenAuthentication\u0026#39;,\r]\r}\r"
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.09.html",
	"title": "2020.06.09",
	"tags": ["TIL", "20.06.09", "6월", "Vue", "Django"],
	"description": "",
	"content": "오늘 배운 것 VUE 설정  vue router를 사용하여 Django와 연결하여 data가져옴.\naxios, cookies 사용\n  accounts와 관련된 기능을 사용하기 위해 Token을 쿠키로 저장하기 위해 cookies 사용  "
},
{
	"uri": "https://gudongyeop.github.io/til/6%EC%9B%94/20.06.10-~-30-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%BC%EC%A0%9C%EB%A1%9C-%EC%9D%B8%ED%95%9C-til-%EB%AF%B8%EC%97%85%EB%A1%9C%EB%93%9C.html",
	"title": "2020.06.10 ~ ",
	"tags": ["TIL", "프로젝트기간", "6월", "Vue", "Django"],
	"description": "",
	"content": "프로젝트 기간으로 TIL 없음  Django와 Vue 이용한 프로젝트  "
},
{
	"uri": "https://gudongyeop.github.io/til/7%EC%9B%94/20.07.01.html",
	"title": "2020.07.01",
	"tags": ["TIL", "20.07.01", "7월"],
	"description": "",
	"content": "오늘 한것 Python 데이터 분석 입문 책 보기\n"
},
{
	"uri": "https://gudongyeop.github.io/til/7%EC%9B%94/20.07.02.html",
	"title": "2020.07.02",
	"tags": ["TIL", "20.07.02", "7월"],
	"description": "",
	"content": "오늘 한것 Python 데이터 분석 입문 책 보기\n"
},
{
	"uri": "https://gudongyeop.github.io/til/7%EC%9B%94/20.07.03.html",
	"title": "2020.07.03",
	"tags": ["TIL", "20.07.03", "7월"],
	"description": "",
	"content": "오늘 한것 Python 데이터 분석 입문 책 보기\n"
},
{
	"uri": "https://gudongyeop.github.io/tags/4%EC%9B%94.html",
	"title": "4월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/5%EC%9B%94.html",
	"title": "5월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/6%EC%9B%94.html",
	"title": "6월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/7%EC%9B%94.html",
	"title": "7월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/8%EC%9B%94.html",
	"title": "8월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/9%EC%9B%94.html",
	"title": "9월",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/algorithm.html",
	"title": "Algorithm",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/aws.html",
	"title": "AWS",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/baekjoon.html",
	"title": "baekjoon",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/algorithm/baekjoon/baekjoon.html",
	"title": "BAEKJOON - Python",
	"tags": ["baekjoon", "백준"],
	"description": "",
	"content": "14890. 경사로 def slope(i, c):\rglobal ans\rcnt = 1\rfor j in range(0, N-1):\rd = a[i][j+1]-a[i][j] if c else a[j+1][i]-a[j][i]\rif d == 0:\rcnt += 1\relif d == 1 and cnt \u0026gt;= L:\rcnt = 1\relif d == -1 and cnt \u0026gt;= 0:\rcnt = -L+1\relse:\rreturn\rif cnt \u0026gt;= 0:\rans += 1\rdef solve():\rfor i in range(N):\rslope(i, 1)\rslope(i, 0)\rprint(ans)\rN, L = map(int, input().split())\ra = [list(map(int, input().split())) for _ in range(N)]\rans = 0\rsolve()\r14503. 로봇 청소기 dt = [(-1,0),(0,1),(1,0),(0,-1)] # 북, 동, 남, 서\r def leftdir(d): # 왼쪽 탐색 index 만들기 위해\r if d == 0:\rreturn 3\relse:\rreturn d - 1\rn, m = map(int,input().split())\rr, c, d = map(int, input().split())\rroom = [list(map(int, input().split()))for _ in range(n)]\rcheck = 0\rx = r\ry = c\rwhile True:\rd = d % 4\rif check == 4: # 4가지 방향 탐색 후\r bx = x - dt[d][0] # 뒤로 한칸 가서\r by = y - dt[d][1] if room[bx][by] == 1: # 벽이면 break\r break\relse: x = bx\ry = by\rcheck = 0\rif room[x][y] == 0: # 먼저 청소기 놓은곳 2로 변경\r room[x][y] = 2\rnd = leftdir(d) # 왼쪽 탐색위한 index변경\r nx = x + dt[nd][0]\rny = y + dt[nd][1]\rif room[nx][ny] == 0: # 왼쪽이 0 이면 다시 청소시작\r x = nx\ry = ny\rd = leftdir(d)\rcheck = 0\relse: # 왼쪽 청소거나 벽이면 다시  d = leftdir(d)\rcheck += 1\rcnt = 0\rfor i in range(n):\rfor j in range(m):\rif room[i][j] == 2:\rcnt += 1\rprint(cnt)\r12100. 2048(easy) import copy\rdef rotation(a):\rfor i in range(n):\rfor j in range(i):\ra[i][j], a[j][i] = a[j][i], a[i][j]\rreturn a\rdef rev(a):\rfor i in range(n):\ra[i] = a[i][::-1]\rreturn a\rdef left(a): for i in range(n):\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rfor j in range(1,n):\rif a[i][j-1] == a[i][j]:\ra[i][j-1] = a[i][j-1]*2\ra[i][j] = 0\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rreturn a\rdef right(a):\rrev(a)\rleft(a)\rreturn rev(a)\rdef up(a):\rrotation(a)\rleft(a)\rreturn rotation(a)\rdef down(a):\rrotation(a)\rright(a)\rreturn rotation(a)\rdef my_max(a):\rmax_v = 0\rfor i in range(n):\rfor j in range(n):\rif a[i][j] \u0026gt; max_v:\rmax_v = a[i][j]\rreturn max_v\rdef solv(cnt, a):\rglobal result\rif cnt == 5:\rresult = max(result, my_max(a))\rif cnt\u0026lt;5:\rcopy_a = copy.deepcopy(a)\rup(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rdown(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rleft(copy_a)\rsolv(cnt+1, copy_a)\rcopy_a = copy.deepcopy(a)\rright(copy_a)\rsolv(cnt+1, copy_a)\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rresult = 0\rsolv(0,a)\rprint(result)\r1012. 유기농 배추 def DFS(y,x):\rdy = [0,1,0,-1]\rdx = [1,0,-1,0]\rboard[y][x] = 0\rfor i in range(4):\rny = y + dy[i]\rnx = x + dx[i]\rif ny \u0026lt; 0 or ny \u0026gt;= N or nx \u0026lt; 0 or nx \u0026gt;= M:\rcontinue\rif board[ny][nx]:\rDFS(ny,nx)\rfor _ in range(int(input())):\rM, N, K = map(int, input().split())\rboard = [[0 for _ in range(M)] for _ in range(N)]\rfor _ in range(K):\rX, Y = map(int, input().split())\rboard[Y][X] = 1\rcnt = 0\rfor i in range(N):\rfor j in range(M):\rif not board[i][j]:\rcontinue\rcnt += 1\rDFS(i,j)\rprint(cnt)\r1244. 스위치 켜고 끄기 n = int(input()) #스위치개수\r switch = list(map(int, input().split()))\rm = int(input()) #사람수\r for _ in range(m):\rstudent = list(map(int, input().split()))\rif student[0] == 1:\rk = student[1] - 1\rwhile k \u0026lt; n:\rswitch[k] = 1 - switch[k]\rk += student[1]\relse:\rj = student[1] - 1\rswitch[j] = 1 - switch[j]\rfor a in range(1,n-1):\rif j - a \u0026gt;= 0 and j + a \u0026lt; n and switch[j - a] == switch[j + a]:\rswitch[j - a] = 1 - switch[j - a]\rswitch[j + a] = 1 - switch[j + a]\relse:\rbreak\rfor i, e in enumerate(switch):\rif i and not (i%20):\rprint()\rprint(e, end=\u0026#39; \u0026#39;)\r2583. 영역구하기 from sys import*\rsetrecursionlimit(10**6)\rdt = ([1, 0], [-1, 0], [0, 1], [0, -1])\rdef solv(y,x):\rglobal cnt\rvisit[y][x] = 1\rcnt += 1\rfor i in range(4):\rnx = x + dt[i][0]\rny = y + dt[i][1]\rif 0 \u0026lt;= nx \u0026lt; n and 0 \u0026lt;= ny \u0026lt; m:\rif arr[ny][nx] == 0 and visit[ny][nx]==0:\rsolv(ny,nx)\rm, n, k = map(int, input().split())\rarr = [[0 for _ in range(n)]for _ in range(m)]\rfor i in range(k):\ra, b, c, d = map(int, input().split())\rfor x in range(a,c):\rfor y in range(b,d):\rarr[y][x] = 1\rarr = list(reversed(arr))\rvisit = [[0 for _ in range(n)]for _ in range(m)]\rresult = []\rfor i in range(m):\rfor j in range(n):\rif arr[i][j] == 0 and visit[i][j] == 0:\rcnt = 0\rsolv(i,j)\rresult.append(cnt)\rprint(len(result))\rprint(\u0026#39; \u0026#39;.join(map(str, sorted(result))))\r2589. 보물섬 dt = [(1,0), (-1,0), (0,1), (0,-1)]\rdef xy(i,j):\rreturn 0 \u0026lt;= i \u0026lt; row and 0 \u0026lt;= j \u0026lt; col and Map[i][j] == \u0026#39;L\u0026#39;\rdef solv(x,y):\rq.append([x,y])\rdist = [[0 for _ in range(col)]for _ in range(row)]\rdist[x][y] = 1\rresult = 0\rwhile q:\ri, j = q.pop(0)\rfor idx in dt:\rnx = i + idx[0]\rny = j + idx[1]\rif xy(nx,ny) and dist[nx][ny] == 0:\rdist[nx][ny] = dist[i][j] + 1\rresult = max(result, dist[nx][ny]) q.append([nx,ny])\rreturn result - 1\rrow, col = map(int, input().split())\rMap = [list(map(str, input()))for _ in range(row)]\rvisit = [[0 for _ in range(col)]for _ in range(row)]\rq = []\rcnt = 0\rfor i in range(row):\rfor j in range(col):\rif Map[i][j] == \u0026#39;L\u0026#39;:\rcnt = max(cnt, solv(i,j))\rprint(cnt)\r"
},
{
	"uri": "https://gudongyeop.github.io/tags/cbv.html",
	"title": "CBV",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/certbot.html",
	"title": "certbot",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/channels.html",
	"title": "channels",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/create.html",
	"title": "create",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/crud.html",
	"title": "crud",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/d3.html",
	"title": "D3",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/d4.html",
	"title": "D4",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/db.html",
	"title": "DB",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/delete.html",
	"title": "delete",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/docker.html",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/docker-compose.html",
	"title": "Docker-compose",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/express.html",
	"title": "Express",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/express.js.html",
	"title": "Express.js",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/fbv.html",
	"title": "FBV",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/follow.html",
	"title": "follow",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/gunicorn.html",
	"title": "Gunicorn",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/https.html",
	"title": "https",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/image.html",
	"title": "Image",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/javascript.html",
	"title": "Javascript",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/like.html",
	"title": "like",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/mn.html",
	"title": "M:N",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/mysql.html",
	"title": "Mysql",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/nginx.html",
	"title": "Nginx",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/node.html",
	"title": "Node",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/node.js.html",
	"title": "Node.js",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/nodejs.html",
	"title": "Nodejs",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/til/8%EC%9B%94/create-new-plugin.html",
	"title": "OpenStack Horizon: Create New Plugin",
	"tags": ["8월"],
	"description": "",
	"content": "Create New Plugin 폴더 구조   enabled 폴더\n  Plugin을 등록하는 configuration 파일ex)_31000_myplugin.py\n  _31000 은 load 순서를 정하는 번호\n  ex)_31000_myplugin.py 파일\n# The name of the panel to be added to HORIZON_CONFIG. Required.\r PANEL = \u0026#39;mypanel\u0026#39;\r# The name of the dashboard the PANEL associated with. Required.\r PANEL_DASHBOARD = \u0026#39;identity\u0026#39;\r# Python panel class of the PANEL to be added.\r ADD_PANEL = \u0026#39;myplugin.content.mypanel.panel.MyPanel\u0026#39;\r# A list of applications to be prepended to INSTALLED_APPS\r ADD_INSTALLED_APPS = [\u0026#39;myplugin\u0026#39;]\r# A list of AngularJS modules to be loaded when Angular bootstraps.\r ADD_ANGULAR_MODULES = [\u0026#39;horizon.dashboard.identity.myplugin.mypanel\u0026#39;]\r# Automatically discover static resources in installed apps\r AUTO_DISCOVER_STATIC_FILES = True\r# A list of js files to be included in the compressed set of files\r ADD_JS_FILES = []\r# A list of scss files to be included in the compressed set of files\r ADD_SCSS_FILES = [\u0026#39;dashboard/identity/myplugin/mypanel/mypanel.scss\u0026#39;]\r# A list of template-based views to be added to the header\r ADD_HEADER_SECTIONS = [\u0026#39;myplugin.content.mypanel.views.HeaderView\u0026#39;,]\r  여기에 세팅 설명 참조\n    my_rest_api.py\n Angular 사용시 필요, 순수 Django만 사용할 시 불필요. 추가할 플러그인과 새로운 서비스와 통신하거나 이미 Horizon에서 지원하는 서비스와 interaction시 필요함. 플러그인의 클라이언트 쪽과 Horizon 통신시 새 REST 인터페이스를 정의하는 역할. 일반적으로 이 REST 인터페이스는 myservice.py를 호출.    myservice.py\n Django나 Angular 사용한 플러그인 생성시 필요. 추가할 플러그인이 지원하는 새로운 서비스와 interaction 하기 위해 편리한 location 역할.    panel.py\n  플러그인의 콘텐츠가 상주할 패널을 정의.\n  slug는 패널의 고유 식별자로 URL의 일부로 자주 사용.\nfrom django.utils.translation import ugettext_lazy as _\rimport horizon\rclass MyPanel(horizon.Panel):\rname = _(\u0026#34;My Panel\u0026#34;)\rslug = \u0026#34;mypanel\u0026#34;\r    views.py\n  Django 사용했을 때 그대로, 같은 역할.\nfrom django.views import generic\rclass IndexView(generic.TemplateView):\rtemplate_name = \u0026#39;identity/mypanel/index.html\u0026#39;\r 주로 어떤 방식으로 만드는지 확인 필요.\nFBV도 사용하는지 확인 필요.\n     index.html\n  Django만 사용할 시\n{% extends \u0026#39;base.html\u0026#39; %}\r{% load i18n %}\r{% block title %}{% trans \u0026#34;My plugin\u0026#34; %}{% endblock %}\r{% block page_header %}\r{% include \u0026#34;horizon/common/_domain_page_header.html\u0026#34; with title=_(\u0026#34;My Panel\u0026#34;) %}\r{% endblock page_header %}\r{% block main %}\rHello world!\r{% endblock %}\r  새로운 templates 만들어서 사용하면 됨(Django 사용했던 pjt 생각)\n    MANIFEST.in\n tar에 포함 할 경로  include setup.py\rrecursive-include myplugin *.js *.html *.scss\r  setup.py, setup.cfg 확인 필요\n  "
},
{
	"uri": "https://gudongyeop.github.io/tags/pagination.html",
	"title": "pagination",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/paginator.html",
	"title": "paginator",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/project.html",
	"title": "Project",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/read.html",
	"title": "read",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/rest-api.html",
	"title": "REST API",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/rest-framework.html",
	"title": "REST Framework",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/server.html",
	"title": "Server",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/til/9%EC%9B%94/%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC.html",
	"title": "Server 관련 용어",
	"tags": ["9월"],
	"description": "",
	"content": "관련 용어들  확인 할 용어 생길 때 추가.\n  CDN(Content Delivery Network): 콘텐츠를 전송하기 위한 네트워크 시스템. 전송 성능향상과 가용성 향상을 목적으로 함. 가용성(Availability): 시스템을 정지시키지 않음을 뜻함. 다중화(Redundancy): 시스템의 구성요소를 여러 개 배치해서 하나가 고장 나서 정지해도 바로 교체해서 서비스가 멈추지 않도록 하는 것. 데몬(Daemon): 백그라운드에서 지속적으로 실행되면서 특정 작업을 수행하는 프로그램. ex) httpd, bind .. 리소스(Resource): CPU, 메모리, 하드디스크 등, 하드웨어적인 자원  "
},
{
	"uri": "https://gudongyeop.github.io/tags/sql.html",
	"title": "SQL",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/ssafy.html",
	"title": "SSAFY",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/ssafy-2%ED%95%99%EA%B8%B0.html",
	"title": "SSAFY 2학기",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/ssafy3%EA%B8%B0.html",
	"title": "SSAFY3기",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/ssl.html",
	"title": "ssl",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/swea.html",
	"title": "SWEA",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d3/swea-d3.html",
	"title": "SWEA - Python - D3",
	"tags": ["SWEA", "D3"],
	"description": "",
	"content": "1240. 단순 2진 암호코드 for t in range(int(input())):\rn = int(input())\rarr = [0]*n\rcnt = 0\ra = list(input().split())\rfor i in a:\rflag = 0\rfor j in i:\rif not flag and j.isupper():\rflag = 1\relif j.isdigit() or (flag and j.isupper()):\rflag = 0\rbreak\rif flag:\rarr[cnt] += 1\rif (\u0026#39;.\u0026#39; in i) or (\u0026#39;!\u0026#39; in i) or (\u0026#39;?\u0026#39; in i):\rcnt += 1\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr))}\u0026#34;)\r1289. 원재의 메모리 복구 for test_case in range(int(input())):\rN = list(map(int, \u0026#39; \u0026#39;.join(input().split())))\rcnt = 0\ra = 0\rif N[0] == 1:\rcnt = 1\relse:\rcnt = 0\rfor i in range(1,len(N)):\rif N[i] != N[i-1]:\rcnt += 1\relse:\rcnt += 0\rprint(f\u0026#34;#{test_case + 1} {cnt}\u0026#34;)\r1491. 원재의 벽 꾸미기 for test_case in range(int(input())):\rN, A, B = map(int, input().split())\ra = []\rfor R in range(1, N):\rfor C in range(1, N):\rif R * C \u0026lt;= N:\rif A*abs(R-C) + B*(N-R*C) \u0026gt;= 0:\ra.append(A*abs(R-C) + B*(N-R*C))\rprint(f\u0026#34;#{test_case} {min(a)}\u0026#34;)\r1493. 수의 새로운 연산 for test_case in range(int(input())):\rp, q = map(int, input().split())\rmapping = [[0 for i in range(300)]for j in range(300)]\ra = 1\rp_x = 0\rp_y = 0\rq_x = 0\rq_y = 0\rfor i in range(599):\rfor j in range(300):\rif 300 \u0026gt; i - j \u0026gt;= 0:\rmapping[i-j][j] = a\ra += 1\rfor i in range(300):\rif p in mapping[i]:\rp_y = mapping[i].index(p)\rp_x = i\rfor i in range(300):\rif q in mapping[i]:\rq_y = mapping[i].index(q)\rq_x = i\rresult = mapping[p_x+q_x+1][p_y+q_y+1]\rprint(f\u0026#34;#{test_case + 1} {result}\u0026#34;)\r1860. 진기의 최고급 붕어빵 for t in range(int(input())):\rN,M,K=map(int,input().split())\ra=list(map(int,input().split()))\rfor i in range(len(a)):\rif sorted(a)[i]//M*K\u0026lt;i+1:\rresult=\u0026#34;Impossible\u0026#34;\rbreak\relse:\rresult=\u0026#34;Possible\u0026#34;\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r1873. 상호의 배틀필드 for t in range(int(input())):\rH, W = map(int, input().split())\rmove_symbol = [\u0026#34;^\u0026#34;, \u0026#34;v\u0026#34;, \u0026#34;\u0026lt;\u0026#34;, \u0026#34;\u0026gt;\u0026#34;]\rmove_command = [\u0026#34;U\u0026#34;, \u0026#34;D\u0026#34;, \u0026#34;L\u0026#34;, \u0026#34;R\u0026#34;, \u0026#34;S\u0026#34;]\rmove_dir = [[-1, 0], [1, 0], [0, -1], [0, 1]]\rfield = []\rstartpoint = [0, 0, 0]\rfor i in range(H):\ra = list(input())\rfield.append(a)\rfor j in range(len(a)):\rif a[j] in move_symbol:\rstartpoint[0] = i\rstartpoint[1] = j\rstartpoint[2] = move_symbol.index(a[j])\rfield[i][j] = \u0026#39;.\u0026#39;\rN = int(input())\rcommandline = list(input())\rfor i in commandline:\rmove_index = move_command.index(i)\rif move_index \u0026lt; 4:\ri_idx = startpoint[0] + move_dir[move_index][0]\rj_idx = startpoint[1] + move_dir[move_index][1]\rif 0 \u0026lt;= i_idx \u0026lt; H and 0 \u0026lt;= j_idx \u0026lt; W:\rif field[i_idx][j_idx] == \u0026#39;.\u0026#39;:\rstartpoint[0] = i_idx\rstartpoint[1] = j_idx\rstartpoint[2] = move_index\relse:\rn = startpoint[0]\rm = startpoint[1]\rwhile True:\rn += move_dir[startpoint[2]][0]\rm += move_dir[startpoint[2]][1]\rif 0 \u0026lt;= n \u0026lt; H and 0 \u0026lt;= m \u0026lt; W:\rif field[n][m] == \u0026#34;#\u0026#34;:\rbreak\relif field[n][m] == \u0026#34;*\u0026#34;:\rfield[n][m] = \u0026#34;.\u0026#34;\rbreak\relse:\rbreak\rfield[startpoint[0]][startpoint[1]] = move_symbol[startpoint[2]]\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rfor i in range(H):\rprint(f\u0026#34;{\u0026#39;\u0026#39;.join(field[i])}\u0026#34;)\r2805. 농작물 수확하기 for t in range(int(input())):\rN = int(input())\rfarm = [list(map(int, input()))for i in range(N)]\rbase_sum = sum(farm[N//2])\rfor i in range(N//2):\rbase_sum += sum(farm[i][N//2-i:N//2+i+1])\rfor i in range(N//2+1,N):\rbase_sum += sum(farm[i][i-N//2:N-(i-N//2)])\rprint(f\u0026#34;#{t+1} {base_sum}\u0026#34;)\r2806. N-Queen def placeQueen(queen_pos):\rcnt = 0\rn = len(queen_pos)\rif n == N:\rreturn 1\rfor i in range(N):\rfor j in range(n):\rif i == queen_pos[j]:\rbreak\rif n - j == i - queen_pos[j]:\rbreak\rif n - j == queen_pos[j] - i:\rbreak\relse:\rcnt += placeQueen(queen_pos + [i])\rreturn cnt\rfor t in range(int(input())):\rN = int(input())\rprint(f\u0026#34;#{t+1} {placeQueen([])}\u0026#34;)\r2814. 최장 경로 def dfs(a,b):\rvisit[a] = 1\rresult.append(b)\rfor i in node[a]:\rif visit[i] == 0:\rdfs(i,b+1)\rvisit[i] = 0\rfor t in range(int(input())):\rn, m = map(int, input().split())\rnode = dict()\rfor i in range(1,n+1):\rnode[i] = []\rfor i in range(m):\ra, b = map(int, input().split())\rnode[a].append(b)\rnode[b].append(a)\rresult = []\rfor i in range(1,n+1):\rvisit = [0] * (n+1)\rc = 1\rdfs(i,c)\rresult.append(c)\rprint(f\u0026#34;#{t+1} {max(result)}\u0026#34;)\r2817. 부분 수열의 합 for t in range(int(input())):\rN, K = map(int, input().split())\ra = list(map(int, input().split()))\rn = len(a)\rb = []\rresult = 0\rcnt = 0\rfor i in range(1 \u0026lt;\u0026lt; n):\rfor j in range(n+1):\rif i \u0026amp; (1 \u0026lt;\u0026lt; j):\rresult += a[j]\rif result\u0026gt;K:\rcontinue\rif result == K:\rcnt += 1\rresult=0\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r2948. 문자열 교집합 for t in range(int(input())):\rN, M = map(int,input().split())\rset_1 = set(input().split())\rset_2 = set(input().split())\rresult = set_1\u0026amp;set_2\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r3032. 홍준이의 숫자 놀이 def gcd(a, b):\rx,y, u,v = 0,1, 1,0\rwhile a != 0:\rq, r = b//a, b%a\rm, n = x-u*q, y-v*q\rb,a, x,y, u,v = a,r, u,v, m,n\rreturn [x, y]\rfor t in range(int(input())):\rA, B = map(int, input().split())\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, gcd(A,B)))}\u0026#34;)\r3131. 100만 이하의 모든 소수 def prime(n):\ra = [False, False] + [True] * (n - 1) for k in range(2, int(n ** 0.5 + 1.5)):\rif a[k]: a[k*2::k] = [False] * ((n - k) // k) return [x for x in range(n+1) if a[x]]\rprint(\u0026#39; \u0026#39;.join(map(str, prime(10**6))))\r3142. 영준이와 신비한 뿔의 숲 for t in range(int(input())):\rn, m = map(int, input().split())\rx = n - m\ry = 2*m - n\rprint(f\u0026#34;#{t+1} {y} {x}\u0026#34;)\r3233. 정삼각현 분할 for t in range(int(input())):\rn, m = map(int, input().split())\ra = n**2//m**2\rprint(f\u0026#34;#{t+1} {a}\u0026#34;)\r3260. 두 수의 덧셈 for t in range(int(input())):\rN = int(input())\rfarm = [list(map(int, input()))for i in range(N)]\rbase_sum = sum(farm[N//2])\rfor i in range(N//2):\rbase_sum += sum(farm[i][N//2-i:N//2+i+1])\rfor i in range(N//2+1,N):\rbase_sum += sum(farm[i][i-N//2:N-(i-N//2)])\rprint(f\u0026#34;#{t+1} {base_sum}\u0026#34;)\r3304. 최장 공통 부분 def lcs(a,b):\rarr = [[0 for _ in range(len(b)+2)]for _ in range(len(a)+2)]\rfor i in range(1,len(a)+1):\rfor j in range(1,len(b)+1):\rif a[i-1] == b[j-1]:\rarr[i][j] = arr[i-1][j-1]+1\relse:\rarr[i][j] = max(arr[i-1][j],arr[i][j-1])\rreturn arr[len(a)][len(b)]\rfor t in range(int(input())):\ra, b = map(str, input().split())\rprint(f\u0026#34;#{t+1} {lcs(a,b)}\u0026#34;)\r3307. 최장 증가 부분 def lis(a):\rd = [0] * (N)\rfor i in range(1,N): for j in range(i):\rif a[i] \u0026gt; a[j]:\rd[i] = max(d[i],d[j]+1)\rreturn max(d)\rfor t in range(int(input())):\rN = int(input())\ra_list = list(map(int, input().split()))\rprint(f\u0026#34;#{t+1} {lis(a_list)+1}\u0026#34;)\r3282. 0/1 Knapsack def sol(k,n):\ra = [[0 for _ in range(k+2)]for _ in range(n+2)]\rfor i in range(1,n+1):\rfor j in range(1,k+1):\rif v_list[i-1] \u0026gt; j:\ra[i][j] = a[i-1][j]\relse:\ra[i][j] = max(c_list[i-1]+a[i-1][j-v_list[i-1]], a[i-1][j])\rreturn a[n][k]\rfor t in range(int(input())):\rN, K = map(int, input().split())\rsack = [list(map(int, input().split()))for _ in range(N)]\rv_list = []\rc_list = []\rfor i in range(N):\rv_list.append(sack[i][0])\rc_list.append(sack[i][1])\rprint(f\u0026#34;#{t+1} {sol(K,N)}\u0026#34;)\r3314. 보충학습과 평균 for t in range(int(input())):\rscore = list(map(int, input().split()))\rfor i in range(len(score)):\rif score[i] \u0026lt; 40:\rscore[i] = 40\rprint(f\u0026#34;#{t+1} {sum(score)//5}\u0026#34;)\r3376. 파도반 수열 def wave(n):\ra = [1,1,1]\rb = [1] * n\rif n \u0026lt;=3:\rreturn 1\relse:\rfor i in range(3,n):\rb[i] = b[i-2] + b[i-3]\rreturn b[n-1]\rfor t in range(int(input())):\rN = int(input())\rprint(f\u0026#34;#{t+1} {wave(N)}\u0026#34;)\r3408. 세가지합 for t in range(int(input())):\rN = int(input())\rsum_1 = N*(N+1)//2\rsum_2 = N*(N*2)//2\rsum_3 = N*(N*2+2)//2\rprint(f\u0026#34;#{t+1} {sum_1} {sum_2} {sum_3}\u0026#34;)\r3431. 준환이의 운동관리 for t in range(int(input())):\rL, U, X = map(int, input().split())\rif U \u0026lt; X:\rprint(f\u0026#34;#{t+1} {-1}\u0026#34;)\relif L \u0026lt;= X \u0026lt;= U:\rprint(f\u0026#34;#{t+1} {0}\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {L-X}\u0026#34;)\r3456. 직사각형 길이 찾기 for t in range(int(input())):\ra = list(map(int, input().split()))\rfor i in range(3):\rif a.count(a[i])%2==1:\rprint(f\u0026#34;#{t+1} {a[i]}\u0026#34;)\rbreak\r3499. 퍼펙트 셔플 for t in range(int(input())):\rN = int(input())\rcard = list(map(str, input().split()))\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rif len(card) % 2 == 0:\rfor i in range(N//2):\rprint(f\u0026#34;{card[i]} {card[N//2+i]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint()\relse:\rfor i in range(N//2):\rprint(f\u0026#34;{card[i]} {card[N//2+i+1]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint(f\u0026#34;{card[N//2]}\u0026#34;,end=\u0026#34; \u0026#34;)\rprint()\r3750. Digit sum for t in range(int(input())):\rprint(f\u0026#34;#{t+1} {(int(input())-1)%9+1}\u0026#34;)\r3809. 화섭이의 정수 나열 for t in range(int(input())):\rn = int(input())\ra = \u0026#39;\u0026#39;\rwhile True:\ra += \u0026#39;\u0026#39;.join(map(str, input().split()))\rif len(a) == n:\rbreak\rprint(a)\rb = 0\rc = 0\rwhile True:\rif str(b) not in a:\rc = b\rbreak\rb += 1\rprint(f\u0026#34;#{t+1} {c}\u0026#34;)\r3975. 승률 비교하기 T = int(input())\rg = []\rfor t in range(T):\ra,b,c,d = map(int, input().split())\re = a / b\rf = c / d\rif e \u0026lt; f:\rg.append(\u0026#34;BOB\u0026#34;)\relif e \u0026gt; f:\rg.append(\u0026#34;ALICE\u0026#34;)\relse:\rg.append(\u0026#34;DRAW\u0026#34;)\rfor t in range(T):\rprint(f\u0026#34;#{t+1} {g[t]}\u0026#34;)\r4047. 영준이의 카드 카운팅 for t in range(int(input())):\ra=input()\rb=[]\rc=1\rd=[a.count(\u0026#34;S\u0026#34;),a.count(\u0026#34;D\u0026#34;),a.count(\u0026#34;H\u0026#34;),a.count(\u0026#34;C\u0026#34;)]\rfor i in range(0,len(a),3):\rb.append(a[i:i+3])\rif len(set(b))\u0026lt;len(b):\rc=0\rprint(f\u0026#34;#{t+1} ERROR\u0026#34;)\relse:\rprint(f\u0026#34;#{t+1} {13-d[0]} {13-d[1]} {13-d[2]} {13-d[3]}\u0026#34;)\r4299. 태혁이의 사랑은 타이밍 for t in range(int(input())):\rd, h, m = map(int, input().split())\ra = [11, 11, 11]\rresult = 0\rif d - a[0] \u0026lt; 0:\rresult = -1\relif a[0] == d:\rif h - a[1] \u0026lt; 0:\rresult = -1\relse:\rif m - a[2] \u0026lt; 0:\rresult = -1\relse:\rresult += (d-a[0]) * 60 * 24\rresult += (h-a[1]) * 60\rresult += (m-a[2])\relse:\rresult += (d-a[0]) * 60 * 24\rresult += (h-a[1]) * 60\rresult += (m-a[2])\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4371. 항구에 들어오는 배 for t in range(int(input())):\rn = int(input())\rhappyday = []\rfor _ in range(n):\rhappyday.append(int(input())-1)\rdel happyday[0]\rfor i in happyday:\rhappyday=set(happyday)\rhappyday -= set(range(i*2,max(happyday)+1, i))\rcontinue\rprint(f\u0026#34;#{t+1} {len(happyday)}\u0026#34;)\r4406. 모음이 보이지 않는 사람 for t in range(int(input())):\ra = list(input())\rfor i in [\u0026#39;a\u0026#39;,\u0026#39;e\u0026#39;,\u0026#39;i\u0026#39;,\u0026#39;o\u0026#39;,\u0026#39;u\u0026#39;]:\rfor j in range(len(a)):\rif i == a[j]:\ra[j]=\u0026#39;\u0026#39;\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, a))}\u0026#34;)\r4466. 최대 성적표 만들기 for t in range(int(input())):\rn, k = map(int, input().split())\ra = list(map(int, input().split()))\rb = sorted(a,reverse=True)\rresult = sum(b[:k])\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4522. 세상의 모든 팰린드롬 for t in range(int(input())):\ra = list(input())\rfor i in range(len(a)//2):\rif a[i] != a[-1-i]:\rif a[i] == \u0026#39;?\u0026#39; or a[-1-i] == \u0026#39;?\u0026#39;:\rcontinue\relse:\rprint(f\u0026#34;#{t+1} Not exist\u0026#34;)\rbreak\relse:\rprint(f\u0026#34;#{t+1} Exist\u0026#34;)\r4579. 세상의 모든 팰린드롬2 for t in range(int(input())):\ra = list(input())\rresult = \u0026#39;Exist\u0026#39;\rfor i in range(len(a)//2):\rif a[i] != a[-1-i]:\rif a[i] == \u0026#39;*\u0026#39; or a[-1-i] == \u0026#39;*\u0026#39;:\rbreak\relse:\rresult = \u0026#39;Not exist\u0026#39;\rbreak\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r4615. 재미있는 오셀로 게임 def limit(a, b, n):\rif a \u0026gt;= 0 and a \u0026lt; n and b \u0026gt;= 0 and b \u0026lt; n:\rreturn True\relse:\rreturn False\rfor t in range(int(input())):\rN, M = map(int, input().split())\rdata = [[0] * N for _ in range(N)]\rdata[N // 2 - 1][N // 2] = 1\rdata[N // 2][N // 2 - 1] = 1\rdata[N // 2 - 1][N // 2 - 1] = 2\rdata[N // 2][N // 2] = 2\rdx = [-1, 0, 1, 1, 1, 0, -1, -1]\rdy = [-1, -1, -1, 0, 1, 1, 1, 0]\rfor _ in range(M):\ra, b, stone = map(int, input().split())\rx = a - 1\ry = b - 1\rdata[x][y] = stone\rfor i in range(8):\rcnt = 0\rnext_x = x + dx[i]\rnext_y = y + dy[i]\rwhile limit(next_x, next_y, N) and stone != data[next_x][next_y] and data[next_x][next_y] != 0:\rcnt += 1\rnext_x = next_x + dx[i]\rnext_y = next_y + dy[i]\rif limit(next_x, next_y, N) and data[next_x][next_y] == stone:\rnext_x = x + dx[i]\rnext_y = y + dy[i]\rfor f in range(cnt):\rdata[next_x][next_y] = stone\rnext_x = next_x + dx[i]\rnext_y = next_y + dy[i]\rcnt1 = 0\rcnt2 = 0\rfor i in range(N):\rfor j in range(N):\rif data[i][j] == 1:\rcnt1 += 1\relif data[i][j] == 2:\rcnt2 += 1\rprint(f\u0026#34;#{t+1} {cnt1} {cnt2}\u0026#34;)\r4676. 늘어지는 소리 만들기 for t in range(int(input())):\rstring = list(input())\rh = int(input())\ridx = list(map(int, input().split()))\ridx_sort =sorted(idx,reverse=True)\rfor i in range(len(idx)):\rstring.insert(idx_sort[i],\u0026#39;-\u0026#39;)\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, string))}\u0026#34;)\r4751. 다솔이의 다이아몬드 장식 for t in range(int(input())):\ra = list(input())\rn = (len(a) * 4) + 1\rb = [\u0026#39;.\u0026#39;,\u0026#39;.\u0026#39;,\u0026#39;#\u0026#39;,\u0026#39;.\u0026#39;]*(n//4)+[\u0026#39;.\u0026#39;]\rc = [\u0026#39;.\u0026#39;,\u0026#39;#\u0026#39;]*(n//2)+[\u0026#39;.\u0026#39;]\rd = [\u0026#39;#\u0026#39;,\u0026#39;.\u0026#39;]*(n//2)+[\u0026#39;#\u0026#39;]\rprint(\u0026#39;\u0026#39;.join(b))\rprint(\u0026#39;\u0026#39;.join(c))\rfor i in range(len(a)):\rd[4*i+2]=a[i]\rprint(\u0026#39;\u0026#39;.join(d))\rprint(\u0026#39;\u0026#39;.join(c))\rprint(\u0026#39;\u0026#39;.join(b))\r4789. 성공적인 공연 기획 for t in range(int(input())):\ra = list(map(int, input()))\rcnt = 0\rresult = 0\rfor i in range(len(a)):\rwhile True:\rif cnt \u0026lt; i:\rcnt += 1\rresult += 1\relse:\rcnt += a[i]\rbreak\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r5162. 두가지 빵의 딜레마 for t in range(int(input())):\ra, b, c = map(int, input().split())\rresult = 0\rif a \u0026lt; b:\rresult = c // a\relse:\rresult = c // b\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r5215. 햄버거 다이어트 for t in range(int(input())):\rn, l = map(int, input().split())\rhamb = [list(map(int, input().split()))for _ in range(n)]\rcal = []\rscore = []\rfor i in range(n):\rscore.append(hamb[i][0])\rcal.append(hamb[i][1])\rboard = [[0 for _ in range(l + 1)] for _ in range(n + 1)]\rfor i in range(1, n + 1):\rfor j in range(1, l + 1):\rif cal[i - 1] \u0026gt; j:\rboard[i][j] = board[i - 1][j]\relse:\rboard[i][j] = max(score[i - 1] + board[i - 1][j - cal[i - 1]], board[i - 1][j])\rprint(f\u0026#34;#{t+1} {board[n][l]}\u0026#34;)\r5356. 의석이의 세로로 말해요 T=int(input())\rfor tc in range(1, T+1):\rarr = [input() for _ in range(5)]\rl = [len(i) for i in arr] # 각 문자열의 길이\r ml = max(l) # 문자열 중 최대길이\r temp = \u0026#34;\u0026#34;\rfor i in range(ml):\rfor j in range(5):\rif l[j] \u0026gt; i: # 자신의 문자열의 길이보다 열번호가 작으면 문자 추가하지 않음\r temp += arr[j][i]\rprint(\u0026#34;#%d%s\u0026#34;%(tc, temp)) 5431. 민석이의 과제 체크하기 for t in range(int(input())):\rn, k = map(int, input().split())\ra = list(map(int, input().split()))\rn_li = list(range(1,n+1))\rfor i in a:\rif i in n_li:\rn_li.remove(i)\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, n_li))}\u0026#34;)\r5515. 2016년 요일 맞추기 for t in range(int(input())):\rm, d = map(int, input().split())\rday = [0,31,29,31,30,31,30,31,31,30,31,30,31]\rdays = 0\rfor i in range(m):\rdays += day[i]\rprint(f\u0026#34;#{t+1} {(days+d+3)%7}\u0026#34;)\r5549. 홀수일까 짝수일까 for t in range(int(input())):\ra = input()\rif int(a[-1])%2 == 0:\rprint(f\u0026#34;{t+1} Even\u0026#34;)\relse:\rprint(f\u0026#34;{t+1} Odd\u0026#34;)\r5601. 쥬스 나누기 for t in range(int(input())):\rn = int(input())\rprint(f\u0026#34;#{t+1}\u0026#34;,end=\u0026#39; \u0026#39;)\rfor i in range(n):\rprint(f\u0026#34;1/{n}\u0026#34;, end=\u0026#39; \u0026#39;)\rprint()\r5603. 건초더미 for t in range(int(input())):\rn = int(input())\ra = []\rfor i in range(n):\ra.append(int(input()))\ravg = sum(a)//n\rresult = 0\rfor i in range(n):\rresult += abs(a[i] - avg)\rprint(f\u0026#34;#{t+1} {result//2}\u0026#34;)\r5642. 합 for t in range(int(input())):\rn = int(input())\ra = list(map(int, input().split()))\rmax_ = -10000\rsum_ = 0\rfor i in range(n):\rsum_ += a[i]\rif sum_ \u0026gt; max_:\rmax_ = sum_\rif sum_ \u0026lt; 0:\rsum_ = 0\rprint(f\u0026#34;#{t+1} {max_}\u0026#34;)\r5789. 현주의 상자 바꾸기 for t in range(int(input())):\rn, q = map(int, input().split())\rbox = [0 for _ in range(n)]\rfor j in range(1,q+1):\rl, r = map(int, input().split())\rfor i in range(l-1,r):\rbox[i] = j\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, box))}\u0026#34;)\r5948. 새샘이의 7-3-5 게임 for t in range(int(input())):\ra = list(map(int, input().split()))\rb = sorted(a,reverse=True)\rcnt = 0\rresult = []\rfor i in range(7):\rfor j in range(i+1,7):\rfor k in range(j+1,7):\rresult.append(b[i]+b[j]+b[k])\rc = sorted(result,reverse=True)\rv = 0\rfor i in range(len(c)-1):\rif c[i] != c[i+1]:\rcnt += 1\rif cnt == 5:\rv = c[i]\rbreak\rprint(f\u0026#34;#{t+1} {v}\u0026#34;)\r5986. 새샘이와 세 소수 def prime(number):\ra = [False, False] + [True] * (number-1)\rfor (i, e) in enumerate(a):\rif e:\rk = i * 2\rwhile k \u0026lt;= n:\ra[k] =False\rk += i\rreturn [x for (x, y) in enumerate(a) if y]\rfor t in range(int(input())):\rn = int(input())\ra = prime(n)\rcnt = 0\rfor i in range(len(a)):\rfor j in range(i,len(a)):\rfor k in range(j,len(a)):\rif a[i] + a[j] + a[k] == n:\rcnt+=1\relse:\rcontinue\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r6019. 기차 사이의 파리 for t in range(int(input())):\rd,a,b,f = map(int, input().split())\rresult = (d / (a+b))*f\rprint(f\u0026#34;#{t+1}\u0026#34;, \u0026#34;%.10f\u0026#34; %result)\r6190. 정곤이의 단조 증가하는 수 for t in range(int(input())):\rn=int(input())\ra=list(map(int,input().split()))\rf=-1\rfor i in range(n-1):\rfor j in range(i+1,n):\rm=a[i]*a[j]\rif f\u0026gt;m:\rcontinue\rc=m\rb=m%10\rc=c//10\rwhile c:\rif c%10\u0026gt;b:\rbreak\rb=c%10\rc=c//10\rif not c:\rf=m\rprint(f\u0026#34;#{t+1} {f}\u0026#34;)\r6485. 삼성시의 버스 노선 for t in range(int(input())):\rarr = [0]*5001\rfor i in range(int(input())):\ra , b = map(int, input().split())\rfor j in range(a,b+1):\rarr[j] += 1\rp = int(input())\rarr_1 = [0]*p\rfor i in range(p):\rc = int(input())\rarr_1[i] = arr[c]\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr_1))}\u0026#34;)\r6485. for t in range(int(input())):\rarr = [0]*5001\rfor i in range(int(input())):\ra , b = map(int, input().split())\rfor j in range(a,b+1):\rarr[j] += 1\rp = int(input())\rarr_1 = [0]*p\rfor i in range(p):\rc = int(input())\rarr_1[i] = arr[c]\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr_1))}\u0026#34;)\r6692. 다솔이의 월급 상자 for t in range(int(input())):\rN = int(input())\rresult = 0\rfor i in range(N):\ra, b = map(float, input().split())\rresult += a * b\rprint(f\u0026#34;{t+1}\u0026#34;, \u0026#34;%.6f\u0026#34; % result)\r7675. 통역사 성경이 for t in range(int(input())):\rn = int(input())\rarr = [0]*n\rcnt = 0\ra = list(input().split())\rfor i in a:\rflag = 0\rfor j in i:\rif not flag and j.isupper():\rflag = 1\relif j.isdigit() or (flag and j.isupper()):\rflag = 0\rbreak\rif flag:\rarr[cnt] += 1\rif (\u0026#39;.\u0026#39; in i) or (\u0026#39;!\u0026#39; in i) or (\u0026#39;?\u0026#39; in i):\rcnt += 1\rprint(f\u0026#34;#{t+1} {\u0026#39; \u0026#39;.join(map(str, arr))}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4/swea-d4.html",
	"title": "SWEA - Python - D4",
	"tags": ["SWEA", "D4"],
	"description": "",
	"content": "1210. Ladder1 for _ in range(10):\rT = input()\rladder = [list(map(int, input().split()))for _ in range(100)]\rj = 0\rfor x in range(100):\rif ladder[99][x] == 2:\rj = x\rstart_p = 0\ri = 99\rwhile i \u0026gt;= 0:\rif j - 1 \u0026gt;= 0 and ladder[i][j-1] == 1:\rwhile 0 \u0026lt;= j - 1 \u0026lt; 100 and ladder[i][j-1] == 1:\rj -= 1\relif j + 1 \u0026lt; 100 and ladder[i][j+1] == 1:\rwhile 0 \u0026lt;= j + 1 \u0026lt; 100 and ladder[i][j+1] == 1:\rj += 1\ri -= 1\rprint(f\u0026#34;#{T} {j}\u0026#34;)\r1211. Ladder2 for _ in range(10):\rt = int(input())\rladder = [list(map(int, input().split()))for _ in range(100)]\rstart_idx = []\rmin_cnt = 10000\rmin_idx = 0\rfor i in range(100):\rif ladder[0][i] == 1:\rstart_idx.append(i)\rfor i in range(100):\rc = i\rr = 0\rcount = 0\rif ladder[r][c] == 1:\rr += 1\rwhile r \u0026lt; 100:\rif c-1 \u0026gt;= 0 and ladder[r][c-1] == 1:\rwhile c-1 \u0026gt;= 0 and ladder[r][c-1] == 1:\rc -= 1\rcount += 1\rr += 1\rcount += 1\relif c+1 \u0026lt;= len(ladder[r])-1 and ladder[r][c+1] == 1:\rwhile c+1 \u0026lt;= len(ladder[r])-1 and ladder[r][c+1] == 1:\rc += 1\rcount += 1\rr += 1\rcount += 1\relse:\rr += 1\rcount += 1\rif min_cnt \u0026gt; count:\rmin_cnt = count\rmin_idx = i\rprint(f\u0026#34;#{t} {min_idx}\u0026#34;)\r1224. 계산기3 def cal(a):\rstack = []\rfor i in a:\rtry:\rif i == \u0026#39;+\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num1+num2)\relif i == \u0026#39;-\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num2-num1)\relif i == \u0026#39;*\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num1*num2)\relif i == \u0026#39;/\u0026#39;:\rnum1 = stack.pop()\rnum2 = stack.pop()\rstack.append(num2//num1)\relif i.isdigit() == True:\rstack.append(int(i))\relif i == \u0026#39;.\u0026#39;:\rreturn stack\rexcept:\rreturn \u0026#39;error\u0026#39;\r# for t in range(int(input())):\r # a = list(input().split())\r # b = cal(a)\r # if len(b) != 1:\r # print(f\u0026#34;#{t+1} error\u0026#34;)\r # else:\r # print(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, b))}\u0026#34;)\r def cal_1(a):\rstack = []\rresult = []\risp = {\u0026#39;(\u0026#39;:0,\u0026#39;+\u0026#39;:1, \u0026#39;-\u0026#39;:1, \u0026#39;*\u0026#39;:2, \u0026#39;/\u0026#39;:2, \u0026#39;)\u0026#39;:3}\rfor i in a:\rif i == \u0026#39;(\u0026#39;:\rstack.append(i)\relif i == \u0026#39;)\u0026#39;:\rwhile stack[-1] != \u0026#39;(\u0026#39;:\rb = stack.pop()\rresult.append(b)\rstack.pop()\relif i in isp:\rwhile len(stack) != 0 and isp[stack[-1]] \u0026gt;= isp[i]:\rresult.append(stack.pop())\rstack.append(i)\relif i.isdigit() == True:\rresult.append(i)\rwhile len(stack) != 0 and stack[-1] != \u0026#39;(\u0026#39;:\rc = stack.pop()\rresult.append(c)\rreturn result\rfor t in range(10):\rn = input()\ra = list(input())\rb = cal_1(a)\rb.append(\u0026#39;.\u0026#39;)\rc = cal(b)\rprint(f\u0026#34;#{t+1} {\u0026#39;\u0026#39;.join(map(str, c))}\u0026#34;)\r1226. 미로1 for _ in range(10):\rT = input()\rmaze = [list(map(int, input()))for _ in range(16)] flag = 0\rvisit = [[1,1]]\rdx = [-1, 0, 1, 0]\rdy = [0, 1, 0, -1]\rwhile visit != []:\ri, j = visit.pop()\rfor idx in range(4):\rc_i = i + dx[idx]\rc_j = j + dy[idx]\rif maze[c_i][c_j] == 0:\rvisit.append([c_i,c_j])\rmaze[c_i][c_j] = 1\rif maze[c_i][c_j] == 3:\rflag = 1\rbreak\rif flag:\rbreak\rprint(f\u0026#34;#{T} {flag}\u0026#34;)\r1258. 행렬찾기 for t in range(int(input())):\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rresult = []\rfor i in range(n):\rfor j in range(n):\rif a[i][j] == 0:\rcontinue\rc = i\rwhile c \u0026lt; n and a[c][j]:\rr = j\rwhile r \u0026lt; n and a[c][r]:\ra[c][r] = 0\rr += 1\rc += 1\rresult.append([c-i, r-j])\rresult.sort(key=lambda x : (x[0]*x[1], x[0]))\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;, end=\u0026#39; \u0026#39;)\rfor i,j in result:\rprint(i,j,end=\u0026#39; \u0026#39;)\rprint() 1486. 장훈이의 높은 선반 for t in range(int(input())):\rn, b = map(int, input().split())\rheight = list(map(int, input().split()))\rmin_ = 10000*20\rfor i in range(1\u0026lt;\u0026lt;n):\rsum_ = 0\rfor j in range(n):\rif i \u0026amp;(1\u0026lt;\u0026lt;j):\rsum_ += height[j]\rif sum_ \u0026gt;= b and sum_ \u0026lt; min_:\rmin_ = sum_\rprint(f\u0026#34;#{t+1} {min_-b}\u0026#34;)\r1861. 정사각형 방 dt = [(1,0), (0,1), (-1,0), (0,-1)]\rfor t in range(int(input())):\rn = int(input())\rroom = [list(map(int, input().split()))for _ in range(n)]\rmax_value = 0\rresult = n ** 2 + 1\rfor i in range(n):\rfor j in range(n):\rstart_num = room[i][j]\rcnt = 1\rwhile True:\rfor delta in dt:\rdx, dy = i + delta[0], j + delta[1]\rif 0 \u0026lt;= dx \u0026lt; n and 0 \u0026lt;= dy \u0026lt; n and room[dx][dy] - room[i][j] == 1:\rcnt += 1\ri, j = dx, dy\rbreak\relse:\rbreak\rif cnt \u0026gt; max_value:\rmax_value = cnt\rresult = start_num\relif cnt == max_value and start_num \u0026lt; result:\rmax_value = cnt\rresult = start_num\rprint(f\u0026#34;#{t+1} {result} {max_value}\u0026#34;)\r1865. 동철이의 일 분배 def solv(per, sum_val, a=0):\rglobal result\rif sum_val \u0026lt;= result:\rreturn\rif per == n:\rif sum_val \u0026gt; result:\rresult = sum_val\rreturn\rfor i in range(a,n):\rn_list[i],n_list[a] = n_list[a], n_list[i]\rsolv(per+1,sum_val*p[a][n_list[a]]/100,a+1)\rn_list[i],n_list[a] = n_list[a], n_list[i]\rfor t in range(int(input())):\rn = int(input())\rn_list = list(range(n))\rp = [list(map(int, input().split()))for _ in range(n)]\rresult = 0\rsolv(0,1)\rprint(f\u0026#34;#{t+1} {100*result:.6f}\u0026#34;)\r2819. 격자판의 숫자 이어 붙이기 dt = [(-1,0), (0,1), (1,0), (0,-1)]\rdef sol(x,y,num,cnt=0):\rglobal result\rif cnt == 6:\rresult.add(num)\rreturn\rfor delta in dt:\rdx, dy = x + delta[0], y + delta[1]\rif not (0 \u0026lt;= dx \u0026lt; 4 and 0 \u0026lt;= dy \u0026lt; 4):\rcontinue\rsol(dx,dy,num+a[dx][dy], cnt+1) for t in range(int(input())):\ra = [list(map(str, input().split()))for _ in range(4)]\rresult = set()\rfor i in range(4):\rfor j in range(4):\rsol(i,j,a[i][j])\rprint(f\u0026#34;#{t+1} {len(result)}\u0026#34;)\r3347. 올림픽 종목 투표 for t in range(int(input())):\rn, m = map(int, input().split())\ra = list(map(int,input().split()))\rb = list(map(int,input().split()))\rc = [0] * n\rfor i in range(m):\rfor j in range(n):\rif a[j]\u0026lt;=b[i]:\rc[j] += 1\rbreak\rprint(f\u0026#34;#{t+1} {c.index(max(c))+1}\u0026#34;)\r3752. 가능한 시험 점수 for t in range(int(input())):\rN = int(input())\ra = list(map(int, input().split()))\rsum_score = {0}\rfor i in a:\rfor j in list(sum_score):\rsum_score.add(j+i)\rprint(f\u0026#34;#{t+1} {len(sum_score)}\u0026#34;)\r4408. 자기 방으로 돌아가기 for t in range(int(input())):\rroom = [0] * 400\rn = int(input())\ra = [list(map(int, input().split()))for _ in range(n)]\rfor i in range(n):\rif a[i][0] \u0026gt; a[i][1]:\ra[i][0], a[i][1] = a[i][1], a[i][0]\rif a[i][0] % 2 == 0:\ra[i][0] += 1\rif a[i][1] % 2:\ra[i][1] += 1\rfor j in range(a[i][0],a[i][1]):\rroom[j] += 1\rprint(f\u0026#34;#{t+1} {max(room)}\u0026#34;)\r5432. 쇠막대기 자르기 for t in range(int(input())):\ra = input()\rb = a.replace(\u0026#39;()\u0026#39;,\u0026#39;-\u0026#39;)\rstack = []\rcnt = 0\rfor i in b:\rif i == \u0026#39;(\u0026#39;:\rcnt += 1\rstack.append(i)\relif i == \u0026#39;)\u0026#39;:\rstack.pop()\relse:\rcnt += len(stack)\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r6109. 추억의 2048게임 def rotation(a):\rfor i in range(n):\rfor j in range(i):\ra[i][j], a[j][i] = a[j][i], a[i][j]\rreturn a\rdef rev(a):\rfor i in range(n):\ra[i] = a[i][::-1]\rreturn a\rdef left(a): for i in range(n):\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rfor j in range(1,n):\rif a[i][j-1] == a[i][j]:\ra[i][j-1] = a[i][j-1]*2\ra[i][j] = 0\rfor j in range(a[i].count(0)):\ra[i].append(a[i].pop(a[i].index(0)))\rreturn a\rdef right(a):\rrev(a)\rleft(a)\rreturn rev(a)\rdef up(a):\rrotation(a)\rleft(a)\rreturn rotation(a)\rdef down(a):\rrotation(a)\rright(a)\rreturn rotation(a)\rfor t in range(int(input())):\rn, case = map(str, input().split())\rn = int(n)\ra = [list(map(int, input().split()))for _ in range(n)]\rprint(f\u0026#34;#{t+1}\u0026#34;)\rif case == \u0026#34;left\u0026#34;:\ra = left(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;right\u0026#34;:\ra = right(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;up\u0026#34;:\ra = up(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i])))\rif case == \u0026#34;down\u0026#34;:\ra = down(a)\rfor i in range(n):\rprint(\u0026#39; \u0026#39;.join(map(str, a[i]))) "
},
{
	"uri": "https://gudongyeop.github.io/algorithm/d4/swea_%EB%AA%A8%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
	"title": "SWEA - Python - 모의 테스트",
	"tags": ["SWEA", "모의SW 테스트"],
	"description": "",
	"content": "1949. 등산로 조성 dt = [(1,0), (0,1), (-1,0), (0,-1)]\rdef sol(x,y,b,cnt=1):\rglobal max_r\rif max_r \u0026lt; cnt:\rmax_r = cnt\rvisit[x][y] = 1\rfor d in dt:\rdx, dy = x + d[0], y + d[1]\rif not (0 \u0026lt;= dx \u0026lt; n and 0 \u0026lt;= dy \u0026lt; n) or visit[dx][dy] == 1:\rcontinue\rif Map[x][y] \u0026gt; Map[dx][dy]:\rsol(dx,dy,b,cnt+1)\relif b \u0026gt; 0 and Map[x][y] \u0026gt; Map[dx][dy] - k:\rtemp = Map[dx][dy]\rMap[dx][dy] = Map[x][y] - 1\rsol(dx,dy,0,cnt+1)\rMap[dx][dy] = temp\rvisit[x][y] = 0\rfor t in range(int(input())):\rn, k = map(int, input().split())\rMap = [list(map(int, input().split()))for _ in range(n)]\rvisit = [[0 for _ in range(n)]for _ in range(n)]\rtop_height = 0\rtop_idx = []\rfor i in range(n):\rif top_height \u0026lt; max(Map[i]):\rtop_height = max(Map[i])\rfor i in range(n):\rfor j in range(n):\rif Map[i][j] == top_height:\rtop_idx.append((i,j))\rmax_r = 0\rfor top in top_idx:\rsol(top[0],top[1],1)\rprint(f\u0026#34;#{t+1} {max_r}\u0026#34;)\r1953. 탈주범 검거 dx = [0,0,-1,1]\rdy = [-1,1,0,0]\rtunnel_type = {\r1:[[1,3,4,5],[1,3,6,7],[1,2,5,6],[1,2,4,7]],\r2:[[],[],[1,2,5,6],[1,2,4,7]],\r3:[[1,3,4,5],[1,3,6,7],[],[]],\r4:[[],[1,3,6,7],[1,2,5,6],[]],\r5:[[],[1,3,6,7],[],[1,2,4,7]],\r6:[[1,3,4,5],[],[],[1,2,4,7]],\r7:[[1,3,4,5],[],[1,2,5,6],[]]\r}\rfor t in range(int(input())):\rn, m, r, c, l = map(int, input().split())\rtunnel = [list(map(int, input().split()))for _ in range(n)]\rcnt = 1\rstart = [(r,c)]\rtime = 1\rwhile True:\rif time == l:\rbreak\rfor i in range(len(start)):\ra = start.pop(0)\rfor j in range(4):\rif tunnel_type[tunnel[a[0]][a[1]]][j]:\rif 0 \u0026lt;= a[0]+dx[j] \u0026lt; n and 0 \u0026lt;= a[1]+dy[j] \u0026lt; m and tunnel[a[0]+dx[j]][a[1]+dy[j]] != 0:\rif tunnel[a[0]+dx[j]][a[1]+dy[j]] in tunnel_type[tunnel[a[0]][a[1]]][j]:\rif (a[0]+dx[j],a[1]+dy[j]) not in start:\rstart.append((a[0]+dx[j],a[1]+dy[j]))\rcnt += 1\rtunnel[a[0]][a[1]] = 0\rtime += 1\rprint(f\u0026#34;#{t+1} {cnt}\u0026#34;)\r4008. 숫자 만들기 def cal(i, numbs):\rglobal max_value, min_value\rif i == n:\rmax_value = max(max_value, numbs)\rmin_value = min(min_value, numbs)\relse:\rif operator[0] != 0:\roperator[0] -= 1\rcal(i+1, numbs + numbers[i])\roperator[0] += 1\rif operator[1] != 0:\roperator[1] -= 1\rcal(i+1, numbs - numbers[i])\roperator[1] += 1\rif operator[2] != 0:\roperator[2] -= 1\rcal(i+1, numbs * numbers[i])\roperator[2] += 1\rif operator[3] != 0:\roperator[3] -= 1\rif numbs \u0026lt; 0 and numbs%numbers[i]:\rcal(i+1, numbs//numbers[i]+1)\relse:\rcal(i+1, numbs//numbers[i])\roperator[3] += 1\rfor t in range(int(input())):\rn = int(input())\roperator = list(map(int, input().split()))\rnumbers = list(map(int, input().split()))\rmin_value = 100000000\rmax_value = -100000000\rcal(1,numbers[0])\rprint(f\u0026#34;#{t+1} {max_value - min_value}\u0026#34;)\r5650. 핀볼 게임 # 방향 상 좌 하 우\r dx = (-1, 0, 1, 0)\rdy = (0, -1, 0, 1)\r# 1번 블록 : 상 \u0026gt; 하, 좌 \u0026gt; 상, 하 \u0026gt; 우, 우 \u0026gt; 좌\r block = ((2, -1, 1, -2), (3, 1, -2, -2), (1, 2, -2, -1), (2, 2, -1, -3), (2, 2, -2, -2))\rdef sol(x,y,d):\rglobal result, n\rcnt = 0\rnx = x\rny = y\rwhile True:\rnx += dx[d]\rny += dy[d]\rif not (n \u0026gt; nx \u0026gt;= 0 and n \u0026gt; ny \u0026gt;= 0): # 벽 만났을 때 튕김(방향은 반대로)\r d = (d + 2) % 4\rcnt += 1\relse: if game_board[nx][ny] == -1 or (nx == x and ny == y):\rresult = max(cnt, result)\rreturn\relif game_board[nx][ny] == 0:\rcontinue\relif 0\u0026lt;game_board[nx][ny] \u0026lt; 6: # 블록 만났을 때\r d += block[game_board[nx][ny]-1][d]\rcnt += 1\relse:\rfor a, b in warmhole[game_board[nx][ny]]: # 웜홀 만났을때 인덱스 변경\r if nx != a or ny != b:\rnx = a\rny = b\rbreak\rfor t in range(int(input())):\rn = int(input())\rgame_board = [list(map(int, input().split()))for _ in range(n)]\rwarmhole = {6:[],7:[],8:[],9:[],10:[]}\rfor i in range(n):\rfor j in range(n):\rif game_board[i][j] \u0026gt; 5:\rwarmhole[game_board[i][j]].append((i,j))\rresult = 0\rfor i in range(n):\rfor j in range(n):\rif game_board[i][j] == 0:\rfor k in range(4):\rsol(i,j,k)\rprint(f\u0026#34;#{t+1} {result}\u0026#34;)\r"
},
{
	"uri": "https://gudongyeop.github.io/tags/til.html",
	"title": "TIL",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/ubuntu.html",
	"title": "Ubuntu",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/update.html",
	"title": "update",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/upload.html",
	"title": "Upload",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/vue-cli.html",
	"title": "Vue cli",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/websocket.html",
	"title": "websocket",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/%EB%A7%9D%ED%95%A0%EC%BD%94%EB%A1%9C%EB%82%98.html",
	"title": "망할코로나",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/%EB%AA%A8%EC%9D%98sw-%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
	"title": "모의SW 테스트",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/%EB%B0%B1%EC%A4%80.html",
	"title": "백준",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gudongyeop.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EA%B8%B0%EA%B0%84.html",
	"title": "프로젝트기간",
	"tags": [],
	"description": "",
	"content": ""
}]