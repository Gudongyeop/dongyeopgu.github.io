<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gunicorn on 여러가지</title>
    <link>https://dongyeopgu.github.io/tags/gunicorn.html</link>
    <description>Recent content in Gunicorn on 여러가지</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://dongyeopgu.github.io/tags/gunicorn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker-compose로 Django 사용</title>
      <link>https://dongyeopgu.github.io/server/docker-compose%EB%A1%9C-django-%EC%82%AC%EC%9A%A9.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/server/docker-compose%EB%A1%9C-django-%EC%82%AC%EC%9A%A9.html</guid>
      <description>Docker-compose &amp;amp; Django &amp;amp; Gunicorn  Docker-compose로 Django &amp;amp; Gunicorn 사용하기
   Dockerfile
FROMpython:3.6.9ENV PYTHONUNBUFFERED 1RUN mkdir /backendWORKDIR/backendADD requirements.txt /backend/RUN pip install --upgrade pipRUN pip install -r requirements.txtADD . /backend/  docker-compose.yml
backend:build: context: ./backenddockerfile: Dockerfilerestart: alwaysenv_file:- ./backend/.envexpose:- &amp;#34;8001&amp;#34;volumes:- &amp;#39;./backend:/backend&amp;#39;command:&amp;#34;gunicorn --workers=2 --bind=0.0.0.0:8001 backend.wsgi:application&amp;#34; 내부 접속만 열기위한 설정  backend-dev:build: context: .</description>
    </item>
    
  </channel>
</rss>