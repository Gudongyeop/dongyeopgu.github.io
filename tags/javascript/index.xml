<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on 여러가지</title>
    <link>https://gudongyeop.github.io/tags/javascript.html</link>
    <description>Recent content in Javascript on 여러가지</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://gudongyeop.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020.05.12</title>
      <link>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.12.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.12.html</guid>
      <description>오늘 배운 것 Javascript   Type
 Primitive Type(원시 타입) : 변수에 저장할 때 실제 메모리에 저장된 값을 담는다.
  Number String  ES6+ 부터 String-Template Literal 지원, Backtik(`)을 이용하여 여러 줄에 걸쳐 문자를 정의 가능, JS의 변수를 문자열 안에 바로 넣을 수 있음(Python에서 f&amp;rdquo; &amp;ldquo;와 비슷)   Boolean Empty value (null, undefined)    Operators
 할당 연산자 (+=, -=, ++, &amp;ndash;) 비교 연산자(부등호) 동등 연산자(==) : 메모리의 같은 객체를 가리키거나 같은 값을 갖도록 type변환 할 수 있다면 서로 같다고 판단.</description>
    </item>
    
    <item>
      <title>2020.05.18</title>
      <link>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.18.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.18.html</guid>
      <description>오늘 배운 것 Javascript   eventlistener
예)
&amp;lt;script&amp;gt;const myButton = document.querySelector(&amp;#39;#myButton&amp;#39;)// 요소.addEventListener(&amp;#39;이벤트&amp;#39;, 이벤트 발생시 실행할 함수) myButton.addEventListener(&amp;#39;click&amp;#39;, confirmMessage)myButton.addEventListener(&amp;#39;click&amp;#39;, function(event) {console.log(event)}))&amp;lt;/script&amp;gt;  이벤트 요소 예
 click: 마우스 클릭 mouseover: 마우스 포인터가 요소 위에 mouseout: 마우스 포인터가 요소 밖으로 keypress: 누른 키의 문자가 입력됐을 때 keydown: 키를 처음 눌렀을 때 keyup: 키를 뗄 때 load: 페이지 로드가 완료 되었을 때 scroll: 페이지를 위아래로 스크롤 할 때 change: 선택 상자, 체크박스, 라디오 버튼의 상태가 변경되었을 때    </description>
    </item>
    
    <item>
      <title>2020.05.19</title>
      <link>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.19.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.19.html</guid>
      <description>오늘 배운 것 AJAX   axios
&amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 추가
&amp;lt;script&amp;gt;axios.get(&amp;#39;주소&amp;#39;).then(function(response){ // 성공했을 때 return response.data}).then(response =&amp;gt; {	// arrow함수로 표현 console.log(response)}).catch(function(error){ // 실패했을 때 return error})&amp;lt;/script&amp;gt;  Django와 연결해서   Django Template에서 좋아요와 같은 기능에서 필요없는 반복을 줄일 수 있음
  먼저 수정이 필요한 html에서 반복되는 부분을 js로 처리
{% for article in articles %}&amp;lt;h4&amp;gt;제목: {{ article.</description>
    </item>
    
    <item>
      <title>2020.05.20</title>
      <link>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.20.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gudongyeop.github.io/til/5%EC%9B%94/20.05.20.html</guid>
      <description>오늘 한 것 간단한 PJT 구현 과정   Project 기본 설정 및 Model 작성 Data 가져오기 Javascript를 이용한 목록 구성 목록 랜덤 추천   1. Project 기본 설정 및 Model 작성  App의 이름을 accounts와 movies로 설정 한 후, 기본 setting을 변경 하고, 제공된 명세에 따라 Model 작성 후 migrations와 migrate를 했음.
 2. JSON 파일의 Data 가져오기  JSON 파일을 DB에 저장하기 위해서 python manage.py loaddata moviedata.json 이용.</description>
    </item>
    
  </channel>
</rss>