<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 여러가지</title>
    <link>https://dongyeopgu.github.io/tags/docker.html</link>
    <description>Recent content in Docker on 여러가지</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://dongyeopgu.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker-compose 이용하기</title>
      <link>https://dongyeopgu.github.io/server/docker-compose-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/server/docker-compose-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0.html</guid>
      <description>Docker-compose를 이용한 배포  Docker compose를 이용하여 배포했던 것 정리.
혼자 찾아보고 진행했던 내용이기 때문에 정확하지 않을 수 있음.
 1. docker-compose.yml 파일 만들기  docker 실행 옵션을 미리 작성하고 편하게 사용하기 위함 frontend, backend, database, webserver를 각각 컨테이너로 사용했음 frontend는 vue cli로 backend는 node.js, 웹서버는 nginx, db는 mysql 이용 아래 docker-compose.yml파일은 내가 사용했던 것. 루트 폴더에 작성  version: &amp;#39;3&amp;#39;services:frontend:build:context: ./frontenddockerfile: Dockerfilevolumes:- &amp;#39;.</description>
    </item>
    
  </channel>
</rss>