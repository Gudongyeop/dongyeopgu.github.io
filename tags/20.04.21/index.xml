<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>20.04.21 on 여러가지</title>
    <link>https://dongyeopgu.github.io/tags/20.04.21.html</link>
    <description>Recent content in 20.04.21 on 여러가지</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://dongyeopgu.github.io/tags/20.04.21/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020.04.21</title>
      <link>https://dongyeopgu.github.io/til/april/20.04.21.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/til/april/20.04.21.html</guid>
      <description>오늘 배운 것 Django 댓글 작성 &amp;amp; 삭제  게시글의 model은 Article로 만들었을 경우임. ForeignKey를 사용.
   댓글 작성
  models.py에서 댓글 설정을 위한 class를 만든다.(user 설정을 안했을 경우)
class Comment(models.Model): article = models.ForeignKey(Article, on_delete=models.CASCADE) #on_delete=models.CASCADE는 ForeignKeyField가 삭제 될때 인스턴스도 같이 삭제 content = models.TextField()   forms.py에도 추가
from django import forms from .models import Comment class CommentForm(forms.ModelForm): class Meta: model = Comment fields = [&amp;#39;content&amp;#39;] # fields를 __all__로 해도 됨(all로 했을 경우에는 댓글 작성시 모든 값을 잘 입력 해야한다.</description>
    </item>
    
  </channel>
</rss>