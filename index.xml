<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dongyeop&#39;s Blog on 여러가지</title>
    <link>https://dongyeopgu.github.io/</link>
    <description>Recent content in Dongyeop&#39;s Blog on 여러가지</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 May 2020 21:55:45 +0900</lastBuildDate>
    
	<atom:link href="https://dongyeopgu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker-compose 이용하기</title>
      <link>https://dongyeopgu.github.io/server/docker-compose-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/server/docker-compose-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0.html</guid>
      <description>Docker-compose를 이용한 배포  Docker compose를 이용하여 배포했던 것 정리.
혼자 찾아보고 진행했던 내용이기 때문에 정확하지 않을 수 있음.
 1. docker-compose.yml 파일 만들기  docker 실행 옵션을 미리 작성하고 편하게 사용하기 위함 frontend, backend, database, webserver를 각각 컨테이너로 사용했음 frontend는 vue cli로 backend는 node.js, 웹서버는 nginx, db는 mysql 이용 아래 docker-compose.yml파일은 내가 사용했던 것. 루트 폴더에 작성  version: &amp;#39;3&amp;#39;services:frontend:build:context: ./frontenddockerfile: Dockerfilevolumes:- &amp;#39;.</description>
    </item>
    
    <item>
      <title>Express를 이용한 백엔드 구축</title>
      <link>https://dongyeopgu.github.io/node.js/node.js-%EC%8B%9C%EC%9E%91.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/node.js/node.js-%EC%8B%9C%EC%9E%91.html</guid>
      <description>Express 시작  백엔드에서 사용할 Nodejs Express 공부한 내용 정리.
 1. Express 설치 및 Generator 사용  express generator를 사용하면 스켈레톤 코드 생성됨(Django에서 startproject와 유사함.)  $ npm install express --save $ npx express-generator $ express --view=pug 사용할 이름  npx command (available in Node.js 8.2.0)
--view=pug를 사용안하면 jade파일로 구성됨.
 2. Routes 이용하기  app.js 기본 구조  var indexRouter = require(&amp;#39;./routes/index&amp;#39;); ... app.use(&amp;#39;/&amp;#39;, indexRouter); ...  미리 만들어져 있는 index와 같이 새로 만들 route를 routes폴더에 생성 후 app.</description>
    </item>
    
    <item>
      <title>Vue.js 기초</title>
      <link>https://dongyeopgu.github.io/vue.js/vue.js-%EA%B8%B0%EC%B4%88.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/vue.js/vue.js-%EA%B8%B0%EC%B4%88.html</guid>
      <description>Vue.js 기초  body태그에 &amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; Vue.js cdn을 추가하여 사용
 1. Declarative Rendering(선언적 렌더링) &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; {{ message }} &amp;lt;/div&amp;gt; &amp;lt;!-- vue cdn --&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; const app = new Vue({ el: &amp;#39;#app&amp;#39;, data: { message: &amp;#39;message&amp;#39; } }) &amp;lt;/script&amp;gt; 2. 조건문(if) &amp;lt;div id=&amp;#34;using-if&amp;#34;&amp;gt; &amp;lt;p v-if=&amp;#34;check&amp;#34;&amp;gt;안녕&amp;lt;/p&amp;gt; &amp;lt;!-- 기본적인 자바스크립트 표현 가능 --&amp;gt; &amp;lt;p v-if=&amp;#34;check===&amp;#39;안녕&amp;#39;&amp;#34;&amp;gt;안녕&amp;lt;/p&amp;gt; &amp;lt;p v-else-if=&amp;#34;check===&amp;#39;반가워&amp;#39;&amp;#34;&amp;gt;반가워&amp;lt;/p&amp;gt; &amp;lt;p v-else&amp;gt;안녕 반가워&amp;lt;/p&amp;gt; &amp;lt;!-- false일 때만 보여주기 --&amp;gt; &amp;lt;p v-if=&amp;#34;!check&amp;#34;&amp;gt;False일때 나타내기&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>Express와 MySQL</title>
      <link>https://dongyeopgu.github.io/node.js/express-mysql.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/node.js/express-mysql.html</guid>
      <description>Express &amp;amp; MySQL  프로젝트 진행하며 찾은 내용들 정리
 1. MySQL 사용  npm install mysql 으로 mysql모듈 설치  var mysql = require(&amp;#39;mysql&amp;#39;); // 기본적으로 이렇게 사용 let client = mysql.createConnection({ user: &amp;#39;&amp;#39;, password: &amp;#39;&amp;#39;, database: &amp;#39;&amp;#39;, })  프로젝트를 진행하며 사용한 코드 샘플  router.post(&amp;#39;/measure&amp;#39;, function(req, res, next) { let info = req.body let temp = info.temp let datetime = info.datetime let serial = info.serial let studentNumber = null client.</description>
    </item>
    
    <item>
      <title>Vue CLI</title>
      <link>https://dongyeopgu.github.io/vue.js/vue-cli3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/vue.js/vue-cli3.html</guid>
      <description>Vue CLI3 설치   공식 문서
   설치 순서 (Windows10)
$ npm install -g @vue/cli$ vue --version # 버젼확인  프로젝트 생성 및 실행  $ vue create &amp;lt;프로젝트 명&amp;gt;$ cd &amp;lt;프로젝트명&amp;gt; # 프로젝트 폴더로 이동$ npm run serve프로젝트 정리    src/App.vue에서 필요없는 기본코드 삭제(아래처럼)
&amp;lt;template&amp;gt;&amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/template&amp;gt;&amp;lt;script&amp;gt;export default {name: &amp;#39;App&amp;#39;,components: {},//여기에 data, methods 등 넣으면 됨 }&amp;lt;/script&amp;gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;  컴포넌트 사용 방법   컴포넌트 생성 : components폴더에 .</description>
    </item>
    
    <item>
      <title>Django 시작하기</title>
      <link>https://dongyeopgu.github.io/django/django_start.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_start.html</guid>
      <description>기초  1. django 설치 $ pip install django==2.1.15(2.1.15 기준으로 배웠기 때문에)
2. 프로젝트 시작 $ django-admin startproject {프로젝트 이름}그 후에 프로젝트 폴더의 settings.py에서 ALLOWED_HOST = [&amp;#39;*&amp;#39;]로 수정3. App 만들기 # manage.py 파일이 있는 폴더에서 터미널 진입 후 bash 에 $ python manage.py startapp {앱 이름} # 그 후에 settings.py에서  INSTALLED_APPS = [&amp;#39;{앱 이름}&amp;#39; 추가]4. urls.py 작성 # 프로젝트 이름/urls.py에서 예를 들어 index 페이지를 넣을 경우  from app이름 import views #추가 urlpatterns =[path(&amp;#39;index/&amp;#39;, views.</description>
    </item>
    
    <item>
      <title>Django CRUD</title>
      <link>https://dongyeopgu.github.io/django/django_crud.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_crud.html</guid>
      <description>CRUD - Create, Read, Update, Delete  1. Model 사용할 경우 1. Model 만들기 (ex: Article이라는 모델을 만들경우) # 프로젝트 명/App이름/models.py class Article(models.Model):title = models.CharField(max_length=140)content = models.TextField()created_at = models.DateTimeField(auto_now_add=True)updated_at = models.DateTimeField(auto_now=True) models.Model 을 상속받은 클래스를 생성한다. 속성은 내가 구성하고 싶은 테이블의 컬럼의 이름을 지정하고, 데이터 타입에 맞춰서 필드를 정의한다. 위에서 정의된 필드 정보  CharField :  max_length : 필수   DateTimeField  auto_now_add : (선택) 생성시에만 자동으로 해당 시간 값 설정 auto_now : (선택) 수정시마다 자동으로 해당 시간 값 설정   이외의 필드는 https://docs.</description>
    </item>
    
    <item>
      <title>Django Paginator</title>
      <link>https://dongyeopgu.github.io/django/django_paginator.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_paginator.html</guid>
      <description>Paginator 사용하기   게시판 같은 곳에서 리스트의 양이 많아 질 경우 나누어 보여주기 위해서 사용
여기 적힌 예에서 model은 Review 이고 forms는 ReviewForm이다.
bootstrap을 사용했음.
 1. views.py에 내용 추가하기 from django.core.paginator import Paginatordef review_list(request):reviews = Review.objects.order_by(&amp;#39;-pk&amp;#39;)paginator = Paginator(reviews, 5) #한 페이지 당 몇개 씩 보여줄 지 지정 page_number = request.GET.get(&amp;#39;page&amp;#39;)page_obj = paginator.get_page(page_number)reviews_all = get_list_or_404(Review) #전체 개수를 보기 위해 total_count = len(reviews_all)	# 리뷰의 총 개수  total_page = total_count//5	# 리뷰 총 개수 / 한 페이지에 보여줄 수 page_range = range(1,total_page+1)context = {&amp;#39;reviews&amp;#39;: reviews,&amp;#39;page_obj&amp;#39;: page_obj,&amp;#39;page_range&amp;#39;: page_range,}return render(request, &amp;#39;앱이름/review_list.</description>
    </item>
    
    <item>
      <title>Django User (1)</title>
      <link>https://dongyeopgu.github.io/django/django_login.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_login.html</guid>
      <description>User 관리(sign in, out, up)   로그인 기능을 넣는 방법
model을 만들 필요 없이 django에서 제공하는 user 모델을 사용함
bootstrap 사용을 기반으로 작성함
 1. accounts라는 새로운 app을 작성 2. 기본 제공되는 User 모델을 사용하기 때문에 forms.py만 작성 from django.forms import ModelFormfrom django.contrib.auth.models import User # django에서 기본 제공하는 model이 있음. from django import formsclass SignupForm(ModelForm): #회원가입을 제공하는 class이다. username = forms.CharField(max_length=20,min_length=6,widget=forms.TextInput(attrs={&amp;#39;class&amp;#39;: &amp;#39;form-control&amp;#39;}))password = forms.</description>
    </item>
    
    <item>
      <title>Django User (2)</title>
      <link>https://dongyeopgu.github.io/django/django_change_user.html</link>
      <pubDate>Tue, 14 Apr 2020 16:15:29 +0900</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_change_user.html</guid>
      <description>User 관리(change, customizing)   customizing 방법은 여러가지가 있지만, 앞서 사용했던 방법과 다르게 여기서는 AbstractUser를 상속 받아서 User를 customizing후 사용함
UserChangeForm도 마찬가지로 ChangeForm을 상속받아 customizing 해서 사용함
bootstrap을 사용하기 위해 widget에 attrs도 추가
 1. models.py에서 AbstractUser를 상속 from django.db import models from django.contrib.auth.models import AbstractUser # AbstractUser를 가져옴 # Create your models here. class User(AbstractUser): # User 모델을 AbstractUser 상속받음 # 추가할 내용을 작성 Korean_name = models.CharField(max_length=20, blank=True) address = models.</description>
    </item>
    
    <item>
      <title>Django Comment</title>
      <link>https://dongyeopgu.github.io/django/django_comment.html</link>
      <pubDate>Tue, 21 Apr 2020 22:54:07 +0900</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_comment.html</guid>
      <description>Django 댓글 작성 &amp;amp; 삭제  게시글의 model은 Article로 만들었을 경우임. ForeignKey를 사용.
 1. 댓글 작성  models.py에서 댓글 설정을 위한 class를 만든다.(user 설정을 안했을 경우)  class Comment(models.Model): article = models.ForeignKey(Article, on_delete=models.CASCADE) #on_delete=models.CASCADE는 ForeignKeyField가 삭제 될때 인스턴스도 같이 삭제 content = models.TextField()  forms.py에도 추가  from django import forms from .models import Comment class CommentForm(forms.ModelForm): class Meta: model = Comment fields = [&amp;#39;content&amp;#39;] # fields를 __all__로 해도 됨(all로 했을 경우에는 댓글 작성시 모든 값을 잘 입력 해야한다.</description>
    </item>
    
    <item>
      <title>Django M:N</title>
      <link>https://dongyeopgu.github.io/django/django_like_follow.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_like_follow.html</guid>
      <description>Django M:N model  Django에서 좋아요 기능이나 팔로우 기능처럼 M:N 관계 만들기
ManyToManyField 이용
  좋아요 기능을 위한 model 추가(게시글 모델)  # 좋아요 기능을 위한 article_like_users 테이블 생성 class 좋아요 기능을 추가할 클래스 명: like_users = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name=&amp;#39;like_articles&amp;#39;) # 팔로우 기능을 위한   팔로우 기능을 위한 model 추가(User 모델을 Customizing)  class User(AbstractUser): followers = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name=&amp;#39;followings&amp;#39;)  게시글 app의 views.py에서 좋아요 기능 설정  def like(request, pk): article = get_object_or_404(Article, pk=pk) # 좋아요를 누르면, &amp;gt;&amp;gt; DB에 존재할 경우 if article.</description>
    </item>
    
    <item>
      <title>Django REST Framework</title>
      <link>https://dongyeopgu.github.io/django/django_rest_api.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/django/django_rest_api.html</guid>
      <description>Django Rest Framework(DRF) 1. REST API(DRF: Django Rest Framework)  REST API를 활용하면 백 엔드와 프론트 엔드 분리가 쉽고 코드의 재활용성이 좋다. REST API를 사용하기 위해서 먼저 설치가 필요  $ pip install djangorestframework  settings.py에서 INSTALLED_APPS에 &#39;rest_framework&#39;추가 app 폴더에 serializers.py 파일을 만들고 내용 추가  # serializers.py from rest_framework import serializers from .models import * #필요한 모델이름 넣어주기 class &amp;lt;모델명&amp;gt;Serializer(serializers.ModelSerializer): class Meta: model = &amp;lt;모델명&amp;gt; fields = [&amp;#39;필요한 필드&amp;#39;]  views.</description>
    </item>
    
    <item>
      <title>Hugo를 이용해 Blog 만들기</title>
      <link>https://dongyeopgu.github.io/hugo-blog/hugo-blog-start.html</link>
      <pubDate>Mon, 13 Apr 2020 22:13:54 +0900</pubDate>
      
      <guid>https://dongyeopgu.github.io/hugo-blog/hugo-blog-start.html</guid>
      <description>설치 및 실행은 모두 Windows 10에서 함.
 1. Hugo 설치 및 Theme 정하기  나는 hugo github에서 직접 hugo_0.69.0_Windows-64bit.zip를 다운 받아 사용했다. 다운 받은 후 압축을 풀어 C:\Hugo\bin 을 만들어 그 안에 넣어주었고, 시스템 환경 변수에서 Path에 C:\Hugo\bin을 추가했다. 그리고 사용할 테마를 선택하며(여기) $ hugo new site 폴더 이름으로 사용할 폴더를 만들었다. github에서 두개의 repo를 만들었다. (하나는 .github.io 로, 하나는 hugo 관련 소스파일 등과 같은 것을 포함할 (위에서 만든 폴더와 동일하게, 나는 myblog라고 함)) $ git submodule add https://github.</description>
    </item>
    
    <item>
      <title>2020.04.16</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.04.16.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.04.16.html</guid>
      <description>오늘 공부한 것  Algorithm 문제 풀이 (Tree) SWEA-노드의 합  class BinaryTree: def __init__(self, n): self.n = n self.node_list = [0] *(n+1) def insert(self, num1, num2): self.node_list[num1] = num2 def leaf(self, node): if node * 2 &amp;gt; n: self.sum += self.node_list[node] else: self.leaf(node * 2) if node * 2 != n: self.leaf(node * 2 + 1) def result(self, l): self.sum = 0 self.leaf(l) return self.sum for t in range(int(input())): n, m, l = map(int, input().</description>
    </item>
    
    <item>
      <title>2020.04.29</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.04.29.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.04.29.html</guid>
      <description>오늘 한 것  SWEA. 5185 [파이썬 S/W 문제해결 구현] 1일차 - 이진수
 알고리즘 풀이 for t in range(int(input())): n, num = map(str, input().split()) print(f&amp;#39;#{t+1}&amp;#39;,end=&amp;#34; &amp;#34;) for a in num: b = &amp;#39;0x&amp;#39;+ a.lower() hex_num = int(a, 16) # 16진수를 10진수로 print(&amp;#34;{0:b}&amp;#34;.format(hex_num).zfill(4), end=&amp;#34;&amp;#34;) # 10진수를 2진수로 바꾸면서 (4자리씩) print() </description>
    </item>
    
    <item>
      <title>2020.05.01</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.01.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.01.html</guid>
      <description>오늘 한 것  SWEA 알고리즘 문제풀이
  [파이썬 S/W 문제해결 구현] 1일차 - 이진수2  for t in range(int(input())): n = float(input()) result = &amp;#39;&amp;#39; cnt = 0 while True: a = n * 2 result += str(int(a)) n = a - int(a) cnt += 1 if n == 0.0: break if cnt &amp;gt; 13: break if cnt &amp;gt; 13: print(f&amp;#34;#{t+1} overflow&amp;#34;) else: print(f&amp;#34;#{t+1} {result}&amp;#34;) </description>
    </item>
    
    <item>
      <title>2020.05.06</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.06.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.06.html</guid>
      <description>오늘 한 것  SWEA 문제 풀이  # 최소합 dx, dy = [0,1], [1,0] def dfs(x,y): global min_num, result visit[x][y] = 1 if result &amp;lt; min_num: return if x == n-1 and y == n-1: result = min_num return for i in range(2): nx = x + dx[i] ny = y + dy[i] if 0 &amp;lt;= nx &amp;lt; n and 0 &amp;lt;= ny &amp;lt; n and visit[nx][ny] == 0: min_num += a[nx][ny] dfs(nx,ny) visit[nx][ny] = 0 min_num -= a[nx][ny] for t in range(int(input())): n = int(input()) a = [list(map(int, input().</description>
    </item>
    
    <item>
      <title>2020.05.07</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.07.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.07.html</guid>
      <description>오늘 한 것  SWEA 문제 풀이  # 컨테이너 운반 for t in range(int(input())): n,m = map(int, input().split()) weight = list(map(int, input().split())) truck = list(map(int, input().split())) result = 0 for i in range(m): a = 0 for j in weight: if truck[i] &amp;gt;= j &amp;gt;= a: a = j if a != 0: weight.remove(a) result += a print(f&amp;#34;#{t+1} {result}&amp;#34;) # 화물 도크 for t in range(int(input())): n = int(input()) a = [list(map(int, input().</description>
    </item>
    
    <item>
      <title>2020.05.09</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.09.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.09.html</guid>
      <description>오늘 한 것  SWEA 문제 풀이  C 사용    #include &amp;lt;stdio.h&amp;gt; int test_case; long long sol(int x, int y) { if (y == 0) return 1; return x * sol(x, y - 1); } int main(void) { for (int i = 0; i &amp;lt; 10; i++) { scanf(&amp;#34;%d&amp;#34;, &amp;amp;test_case); int x = 0; int y = 0; scanf(&amp;#34;%d %d&amp;#34;, &amp;amp;x, &amp;amp;y); long long result = 0; result = sol(x, y); printf(&amp;#34;#%d %11d\n&amp;#34;, i + 1, result); } return 0; } </description>
    </item>
    
    <item>
      <title>2020.05.14</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.14.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.14.html</guid>
      <description>오늘 한 것 SWEA 문제풀이   병합정렬
def m_sort(a): if len(a) &amp;lt;= 1: return a center = len(a) // 2 right = m_sort(a[center:]) left = m_sort(a[:center]) return merge(left, right) def merge(left,right): global cnt n_right = len(right) n_left = len(left) i = 0 i_right = 0 i_left = 0 result = [0] * (n_right+n_left) if left[-1] &amp;gt; right[-1]: cnt += 1 while i_right != n_right and i_left != n_left: if right[i_right] &amp;gt;= left[i_left]: result[i] += left[i_left] i += 1 i_left += 1 else: result[i] += right[i_right] i += 1 i_right += 1 if i_left !</description>
    </item>
    
    <item>
      <title>2020.05.15</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.15.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.15.html</guid>
      <description>오늘 한 것 SWEA 문제풀이   전기버스2
def sol(a): global cnt, result if a &amp;gt;= n: if result &amp;gt; cnt: result = cnt return if result &amp;lt; cnt: return b = a c = arr[b] for i in range(b+c, b, -1): cnt += 1 sol(i) cnt -= 1 for t in range(int(input())): arr = list(map(int, input().split())) n = arr[0] result = 987654321 cnt = 0 sol(1) print(f&amp;#34;#{t+1} {result-1}&amp;#34;)   최소생산비용</description>
    </item>
    
    <item>
      <title>2020.05.21</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.21.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.21.html</guid>
      <description>오늘 한 것 SWEA 문제풀이   연산
from collections import deque def sol(start, end): check = {} check[start] = end while q: num, cnt = q.popleft() if num == end: return cnt if num &amp;gt; 1000000 or num &amp;lt;= 0: continue for i in range(4): a = 0 if i == 0: a = num + 1 if a not in check: q.append((a, cnt+1)) check[a] = 1 elif i == 1: a = num - 1 if a not in check: q.</description>
    </item>
    
    <item>
      <title>2020.05.22</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.22.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.22.html</guid>
      <description>오늘 한 것 SWEA 문제풀이   최소 신장 트리
def prim(a): key = [float(&amp;#39;inf&amp;#39;)for _ in range(v+1)] pi = [None for _ in range(v+1)] visit = [0 for _ in range(v+1)] key[0] = 0 for _ in range(v+1): min_key =float(&amp;#39;inf&amp;#39;) start = -1 for i in range(v+1): if key[i] &amp;lt; min_key and not visit[i]: min_key = key[i] start = i visit[start] = 1 for V, W in a[start]: if W &amp;lt; key[V] and not visit[V]: key[V] = W pi[V] = start return sum(key) for t in range(int(input())): v, e = map(int, input().</description>
    </item>
    
    <item>
      <title>2020.05.23</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.23.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.23.html</guid>
      <description>오늘 한 것 SWEA 문제풀이   7829 보물왕 태혁
#include &amp;lt;stdio.h&amp;gt; int main(void) { int test_case; scanf(&amp;#34;%d&amp;#34;, &amp;amp;test_case); for (int t = 1; t &amp;lt;= test_case; t++){ int n, x; int max = -1, min = 100001; scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); for (int i = 0; i &amp;lt; n; i++) { scanf(&amp;#34;%d&amp;#34;, &amp;amp;x); if (max &amp;lt; x) { max = x; } if (min &amp;gt; x) { min = x; } } printf(&amp;#34;#%d %d\n&amp;#34;, t, min * max); } return 0; }    </description>
    </item>
    
    <item>
      <title>2020.05.24</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.24.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.24.html</guid>
      <description>오늘 한 것 SWEA 문제풀이   괄호 짝짓기
#include &amp;lt;stdio.h&amp;gt; char arr[100001]; int n; bool solution(char* a, int* length) { int l = *length; if (a[l] == &amp;#39;)&amp;#39;) { if (a[l - 1] == &amp;#39;(&amp;#39;) { a[l - 1] = NULL; a[l] = NULL; *length -= 2; return true; } else return false; } if (a[l] == &amp;#39;]&amp;#39;) { if (a[l - 1] == &amp;#39;[&amp;#39;) { a[l - 1] = NULL; a[l] = NULL; *length -= 2; return true; } else return false; } if (a[l] == &amp;#39;}&amp;#39;) { if (a[l - 1] == &amp;#39;{&amp;#39;) { a[l - 1] = NULL; a[l] = NULL; *length -= 2; return true; } else return false; } if (a[l] == &amp;#39;&amp;gt;&amp;#39;) { if (a[l - 1] == &amp;#39;&amp;lt;&amp;#39;) { a[l - 1] = NULL; a[l] = NULL; *length -= 2; return true; } else return false; } return true; } int main() { for (int t = 1; t &amp;lt;= 10; t++) { int result = 1; int length = 0; scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); for (int i = 1; i &amp;lt;= n; i++) { length++; scanf(&amp;#34; %1c&amp;#34;, &amp;amp;arr[length]); if (solution(arr, &amp;amp;length) == false) { result = 0; } } printf(&amp;#34;#%d %d\n&amp;#34;, t, result); } }   </description>
    </item>
    
    <item>
      <title>2020.05.28</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.28.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.28.html</guid>
      <description>SWEA 문제풀이   최대상금
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;string&amp;gt; using namespace std;int change, result;char arr[6];string str;bool visit[1000000][11];void sol(int cnt) {if (cnt == change) {result = max(result, stoi(str));return;}for (int i = 0; i &amp;lt; str.size(); i++) {for (int j = i; j &amp;lt; str.size(); j++) {if (i==j) { continue; }swap(str[i], str[j]);if (visit[stoi(str)][cnt+1] == false) {visit[stoi(str)][cnt+1] = true;sol(cnt + 1);}swap(str[i], str[j]);}}}int main() {int t;scanf(&amp;#34;%d&amp;#34;, &amp;amp;t);for (int test_case = 1; test_case &amp;lt;= t; test_case++) {scanf(&amp;#34;%s&amp;#34;, arr);str = arr;scanf(&amp;#34;%d&amp;#34;, &amp;amp;change);result = 0;memset(visit, false, sizeof(visit));sol(0);printf(&amp;#34;#%d %d\n&amp;#34;, test_case, result);}return 0;}  최적경로</description>
    </item>
    
    <item>
      <title>2020.05.29</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.29.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.29.html</guid>
      <description>SWEA 문제풀이   공통조상
def sol(n):q = [n]cnt =0while q:cnt += 1a = q.pop()for i in v_1[a]:q.append(i)return cntfor t in range(int(input())):v, e, n1, n2 = map(int, input().split())n3 = 9**9v_1 = [[]for _ in range(v+1)]v_2 = [[]for _ in range(v+1)]data = [*map(int, input().split())]for i in range(e):v_1[data[2*i]].append(data[2*i+1])v_2[data[2*i+1]].append(data[2*i])while n1 != n3:n1 = v_2[n1][0]n3 = n2while n3&amp;gt;1 and n1 !</description>
    </item>
    
    <item>
      <title>2020.05.30</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.30.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.30.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>2020.05.31</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.05.31.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.05.31.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>2020.06.05</title>
      <link>https://dongyeopgu.github.io/algorithm/d4~6/20.06.05.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4~6/20.06.05.html</guid>
      <description>오늘 한 것  SWEA, 백준 문제풀이
   하나로
#include &amp;lt;cstdio&amp;gt; int test_case, n; long long x[1000], y[1000], dis[1000]; bool visit[1000]; double E; long long result; long long dist(long long x1, long long y1, long long x2, long long y2) { return (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2); } int main() { scanf(&amp;#34;%d&amp;#34;, &amp;amp;test_case); for (int t = 1; t &amp;lt;= test_case; t++) { result = 0; scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); for (int i = 0; i &amp;lt;n; i++) { scanf(&amp;#34;%lld&amp;#34;, &amp;amp;x[i]); } for (int i = 0; i &amp;lt;n; i++) { scanf(&amp;#34;%lld&amp;#34;, &amp;amp;y[i]); } for (int i = 0; i &amp;lt;n; i++) { dis[i] = 1e16; visit[i] = 0; } scanf(&amp;#34;%lf&amp;#34;, &amp;amp;E); dis[0] = 0; for (int i = 0; i &amp;lt; n; i++) { long long a = 1e16; long long b = i; for (int j=0;j&amp;lt;n;j++) { if (!</description>
    </item>
    
    <item>
      <title>BAEKJOON - Python</title>
      <link>https://dongyeopgu.github.io/algorithm/baekjoon/baekjoon.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/baekjoon/baekjoon.html</guid>
      <description>14890. 경사로 def slope(i, c):global anscnt = 1for j in range(0, N-1):d = a[i][j+1]-a[i][j] if c else a[j+1][i]-a[j][i]if d == 0:cnt += 1elif d == 1 and cnt &amp;gt;= L:cnt = 1elif d == -1 and cnt &amp;gt;= 0:cnt = -L+1else:returnif cnt &amp;gt;= 0:ans += 1def solve():for i in range(N):slope(i, 1)slope(i, 0)print(ans)N, L = map(int, input().</description>
    </item>
    
    <item>
      <title>SWEA - Python - D3</title>
      <link>https://dongyeopgu.github.io/algorithm/d3/swea-d3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d3/swea-d3.html</guid>
      <description>1240. 단순 2진 암호코드 for t in range(int(input())):n = int(input())arr = [0]*ncnt = 0a = list(input().split())for i in a:flag = 0for j in i:if not flag and j.isupper():flag = 1elif j.isdigit() or (flag and j.isupper()):flag = 0breakif flag:arr[cnt] += 1if (&amp;#39;.&amp;#39; in i) or (&amp;#39;!&amp;#39; in i) or (&amp;#39;?&amp;#39; in i):cnt += 1print(f&amp;#34;#{t+1} {&amp;#39; &amp;#39;.</description>
    </item>
    
    <item>
      <title>SWEA - Python - D4</title>
      <link>https://dongyeopgu.github.io/algorithm/d4/swea-d4.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4/swea-d4.html</guid>
      <description>1210. Ladder1 for _ in range(10):T = input()ladder = [list(map(int, input().split()))for _ in range(100)]j = 0for x in range(100):if ladder[99][x] == 2:j = xstart_p = 0i = 99while i &amp;gt;= 0:if j - 1 &amp;gt;= 0 and ladder[i][j-1] == 1:while 0 &amp;lt;= j - 1 &amp;lt; 100 and ladder[i][j-1] == 1:j -= 1elif j + 1 &amp;lt; 100 and ladder[i][j+1] == 1:while 0 &amp;lt;= j + 1 &amp;lt; 100 and ladder[i][j+1] == 1:j += 1i -= 1print(f&amp;#34;#{T} {j}&amp;#34;)1211.</description>
    </item>
    
    <item>
      <title>SWEA - Python - 모의 테스트</title>
      <link>https://dongyeopgu.github.io/algorithm/d4/swea_%EB%AA%A8%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dongyeopgu.github.io/algorithm/d4/swea_%EB%AA%A8%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8.html</guid>
      <description>1949. 등산로 조성 dt = [(1,0), (0,1), (-1,0), (0,-1)]def sol(x,y,b,cnt=1):global max_rif max_r &amp;lt; cnt:max_r = cntvisit[x][y] = 1for d in dt:dx, dy = x + d[0], y + d[1]if not (0 &amp;lt;= dx &amp;lt; n and 0 &amp;lt;= dy &amp;lt; n) or visit[dx][dy] == 1:continueif Map[x][y] &amp;gt; Map[dx][dy]:sol(dx,dy,b,cnt+1)elif b &amp;gt; 0 and Map[x][y] &amp;gt; Map[dx][dy] - k:temp = Map[dx][dy]Map[dx][dy] = Map[x][y] - 1sol(dx,dy,0,cnt+1)Map[dx][dy] = tempvisit[x][y] = 0for t in range(int(input())):n, k = map(int, input().</description>
    </item>
    
  </channel>
</rss>